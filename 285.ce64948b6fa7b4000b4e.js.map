{"version":3,"sources":["webpack://wp-demo/./node_modules/core-js/modules/web.url.js"],"names":["EOF","$","DESCRIPTORS","USE_NATIVE_URL","global","defineProperties","redefine","anInstance","has","assign","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","URL","URLSearchParams","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","floor","Math","pow","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","url","input","result","codePoints","index","charAt","length","parseIPv6","slice","host","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","push","value","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","serializeHost","ignore0","unshift","join","ipv6","maxIndex","maxLength","currStart","currLength","findLongestZeroSequence","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","username","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","toLowerCase","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","buffer","seenAt","seenBracket","seenPasswordToken","port","query","fragment","replace","i","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","this","arguments","undefined","urlString","String","type","TypeError","searchParams","searchParamsState","updateSearchParams","updateURL","href","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","pathname","getPathname","search","getSearch","getSearchParams","hash","getHash","URLPrototype","prototype","output","error","accessorDescriptor","getter","setter","get","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham"],"mappings":"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","file":"285.ce64948b6fa7b4000b4e.js","sourcesContent":["'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n/* eslint-disable no-control-regex -- safe */\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\t\\u000A\\u000D #%/:?@[\\\\]]/;\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\t\\u000A\\u000D #/:?@[\\\\]]/;\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\nvar TAB_AND_NEW_LINE = /[\\t\\u000A\\u000D]/g;\n/* eslint-enable no-control-regex -- safe */\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements -- TODO\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements -- TODO\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n"],"sourceRoot":""}