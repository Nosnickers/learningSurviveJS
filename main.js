/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/assert/assert.js":
/*!***************************************!*\
  !*** ./node_modules/assert/assert.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar objectAssign = __webpack_require__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (__webpack_require__.g.Buffer && typeof __webpack_require__.g.Buffer.isBuffer === 'function') {\n    return __webpack_require__.g.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof __webpack_require__.g.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/assert/assert.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css":
/*!****************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css ***!
  \****************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@charset \\\"utf-8\\\";\\n\\nbody {\\n  margin:0;\\n}\\n\\n#mocha {\\n  font: 20px/1.5 \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  margin: 60px 50px;\\n}\\n\\n#mocha ul,\\n#mocha li {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#mocha ul {\\n  list-style: none;\\n}\\n\\n#mocha h1,\\n#mocha h2 {\\n  margin: 0;\\n}\\n\\n#mocha h1 {\\n  margin-top: 15px;\\n  font-size: 1em;\\n  font-weight: 200;\\n}\\n\\n#mocha h1 a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha h1 a:hover {\\n  text-decoration: underline;\\n}\\n\\n#mocha .suite .suite h1 {\\n  margin-top: 0;\\n  font-size: .8em;\\n}\\n\\n#mocha .hidden {\\n  display: none;\\n}\\n\\n#mocha h2 {\\n  font-size: 12px;\\n  font-weight: normal;\\n  cursor: pointer;\\n}\\n\\n#mocha .suite {\\n  margin-left: 15px;\\n}\\n\\n#mocha .test {\\n  margin-left: 15px;\\n  overflow: hidden;\\n}\\n\\n#mocha .test.pending:hover h2::after {\\n  content: '(pending)';\\n  font-family: arial, sans-serif;\\n}\\n\\n#mocha .test.pass.medium .duration {\\n  background: #c09853;\\n}\\n\\n#mocha .test.pass.slow .duration {\\n  background: #b94a48;\\n}\\n\\n#mocha .test.pass::before {\\n  content: '✓';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #00d6b2;\\n}\\n\\n#mocha .test.pass .duration {\\n  font-size: 9px;\\n  margin-left: 5px;\\n  padding: 2px 5px;\\n  color: #fff;\\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -webkit-border-radius: 5px;\\n  -moz-border-radius: 5px;\\n  -ms-border-radius: 5px;\\n  -o-border-radius: 5px;\\n  border-radius: 5px;\\n}\\n\\n#mocha .test.pass.fast .duration {\\n  display: none;\\n}\\n\\n#mocha .test.pending {\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.pending::before {\\n  content: '◦';\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.fail {\\n  color: #c00;\\n}\\n\\n#mocha .test.fail pre {\\n  color: black;\\n}\\n\\n#mocha .test.fail::before {\\n  content: '✖';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #c00;\\n}\\n\\n#mocha .test pre.error {\\n  color: #c00;\\n  max-height: 300px;\\n  overflow: auto;\\n}\\n\\n#mocha .test .html-error {\\n  overflow: auto;\\n  color: black;\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  max-height: 300px;\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test .html-error pre.error {\\n  border: none;\\n  -webkit-border-radius: 0;\\n  -moz-border-radius: 0;\\n  border-radius: 0;\\n  -webkit-box-shadow: 0;\\n  -moz-box-shadow: 0;\\n  box-shadow: 0;\\n  padding: 0;\\n  margin: 0;\\n  margin-top: 18px;\\n  max-height: none;\\n}\\n\\n/**\\n * (1): approximate for browsers not supporting calc\\n * (2): 42 = 2*15 + 2*10 + 2*1 (padding + margin + border)\\n *      ^^ seriously\\n */\\n#mocha .test pre {\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test h2 {\\n  position: relative;\\n}\\n\\n#mocha .test a.replay {\\n  position: absolute;\\n  top: 3px;\\n  right: 0;\\n  text-decoration: none;\\n  vertical-align: middle;\\n  display: block;\\n  width: 15px;\\n  height: 15px;\\n  line-height: 15px;\\n  text-align: center;\\n  background: #eee;\\n  font-size: 15px;\\n  -webkit-border-radius: 15px;\\n  -moz-border-radius: 15px;\\n  border-radius: 15px;\\n  -webkit-transition:opacity 200ms;\\n  -moz-transition:opacity 200ms;\\n  -o-transition:opacity 200ms;\\n  transition: opacity 200ms;\\n  opacity: 0.3;\\n  color: #888;\\n}\\n\\n#mocha .test:hover a.replay {\\n  opacity: 1;\\n}\\n\\n#mocha-report.pass .test.fail {\\n  display: none;\\n}\\n\\n#mocha-report.fail .test.pass {\\n  display: none;\\n}\\n\\n#mocha-report.pending .test.pass,\\n#mocha-report.pending .test.fail {\\n  display: none;\\n}\\n#mocha-report.pending .test.pass.pending {\\n  display: block;\\n}\\n\\n#mocha-error {\\n  color: #c00;\\n  font-size: 1.5em;\\n  font-weight: 100;\\n  letter-spacing: 1px;\\n}\\n\\n#mocha-stats {\\n  position: fixed;\\n  top: 15px;\\n  right: 10px;\\n  font-size: 12px;\\n  margin: 0;\\n  color: #888;\\n  z-index: 1;\\n}\\n\\n#mocha-stats .progress {\\n  float: right;\\n  padding-top: 0;\\n\\n  /**\\n   * Set safe initial values, so mochas .progress does not inherit these\\n   * properties from Bootstrap .progress (which causes .progress height to\\n   * equal line height set in Bootstrap).\\n   */\\n  height: auto;\\n  -webkit-box-shadow: none;\\n  -moz-box-shadow: none;\\n  box-shadow: none;\\n  background-color: initial;\\n}\\n\\n#mocha-stats em {\\n  color: black;\\n}\\n\\n#mocha-stats a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha-stats a:hover {\\n  border-bottom: 1px solid #eee;\\n}\\n\\n#mocha-stats li {\\n  display: inline-block;\\n  margin: 0 5px;\\n  list-style: none;\\n  padding-top: 11px;\\n}\\n\\n#mocha-stats canvas {\\n  width: 40px;\\n  height: 40px;\\n}\\n\\n#mocha code .comment { color: #ddd; }\\n#mocha code .init { color: #2f6fad; }\\n#mocha code .string { color: #5890ad; }\\n#mocha code .keyword { color: #8a6343; }\\n#mocha code .number { color: #2f6fad; }\\n\\n@media screen and (max-device-width: 480px) {\\n  #mocha {\\n    margin: 60px 0px;\\n  }\\n\\n  #mocha #stats {\\n    position: absolute;\\n  }\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/mocha/mocha.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://wp-demo/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/mocha-loader/dist/cjs.js!./tests/add.test.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mocha-loader/dist/cjs.js!./tests/add.test.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("__webpack_require__(/*! !!style-loader!css-loader!./node_modules/mocha/mocha.css */ \"./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css\");\nvar mochaModule = __webpack_require__(/*! !!./node_modules/mocha/mocha.js */ \"./node_modules/mocha/mocha.js\");\nvar mochaInstance = window.mocha || mochaModule;\nmochaInstance.setup({\"ui\":\"bdd\"});\n__webpack_require__(/*! !!./tests/add.test.js */ \"./tests/add.test.js\");\n__webpack_require__(/*! !!./node_modules/mocha-loader/dist/start.js */ \"./node_modules/mocha-loader/dist/start.js\");\nif(true) {\n\tmodule.hot.accept();\n\tmodule.hot.dispose(function() {\n\t\tmochaInstance.suite.suites.length = 0;\n\t\tvar stats = document.getElementById('mocha-stats');\n\t\tvar report = document.getElementById('mocha-report');\n\t\tstats && stats.parentNode.removeChild(stats);\n\t\treport && report.parentNode.removeChild(report);\n\t});\n}\n\n//# sourceURL=webpack://wp-demo/./tests/add.test.js?./node_modules/mocha-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/mocha-loader/dist/start.js":
/*!*************************************************!*\
  !*** ./node_modules/mocha-loader/dist/start.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\n/* eslint-disable no-var */\nvar mochaModule = __webpack_require__(/*! mocha/mocha.js */ \"./node_modules/mocha/mocha.js\");\n\nvar mochaInstance = window.mocha || mochaModule;\n/* global window document */\n\nwindow.addEventListener('DOMContentLoaded', function runMocha() {\n  if (!document.getElementById('mocha')) {\n    // eslint-disable-next-line\n    var mochaContainer = document.createElement('div');\n    mochaContainer.id = 'mocha';\n    document.body.appendChild(mochaContainer);\n  }\n\n  mochaInstance.run();\n});\n\n//# sourceURL=webpack://wp-demo/./node_modules/mocha-loader/dist/start.js?");

/***/ }),

/***/ "./node_modules/mocha/mocha.js":
/*!*************************************!*\
  !*** ./node_modules/mocha/mocha.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("(function (global, factory) {\n\t true ? module.exports = factory() :\n\t0;\n}(this, (function () { 'use strict';\n\n\tvar regeneratorRuntime;\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\n\tfunction createCommonjsModule(fn, basedir, module) {\n\t\treturn module = {\n\t\t  path: basedir,\n\t\t  exports: {},\n\t\t  require: function (path, base) {\n\t      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t    }\n\t\t}, fn(module, module.exports), module.exports;\n\t}\n\n\tfunction getCjsExportFromNamespace (n) {\n\t\treturn n && n['default'] || n;\n\t}\n\n\tfunction commonjsRequire () {\n\t\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n\t}\n\n\tvar check = function (it) {\n\t  return it && it.Math == Math && it;\n\t};\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global_1 =\n\t  // eslint-disable-next-line no-undef\n\t  check(typeof globalThis == 'object' && globalThis) ||\n\t  check(typeof window == 'object' && window) ||\n\t  check(typeof self == 'object' && self) ||\n\t  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||\n\t  // eslint-disable-next-line no-new-func\n\t  (function () { return this; })() || Function('return this')();\n\n\tvar fails = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (error) {\n\t    return true;\n\t  }\n\t};\n\n\t// Detect IE8's incomplete defineProperty implementation\n\tvar descriptors = !fails(function () {\n\t  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n\t});\n\n\tvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\n\tvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\t// Nashorn ~ JDK8 bug\n\tvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n\t// `Object.prototype.propertyIsEnumerable` method implementation\n\t// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\n\tvar f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n\t  var descriptor = getOwnPropertyDescriptor(this, V);\n\t  return !!descriptor && descriptor.enumerable;\n\t} : nativePropertyIsEnumerable;\n\n\tvar objectPropertyIsEnumerable = {\n\t\tf: f\n\t};\n\n\tvar createPropertyDescriptor = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\n\tvar toString = {}.toString;\n\n\tvar classofRaw = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n\tvar split = ''.split;\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar indexedObject = fails(function () {\n\t  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n\t  // eslint-disable-next-line no-prototype-builtins\n\t  return !Object('z').propertyIsEnumerable(0);\n\t}) ? function (it) {\n\t  return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);\n\t} : Object;\n\n\t// `RequireObjectCoercible` abstract operation\n\t// https://tc39.es/ecma262/#sec-requireobjectcoercible\n\tvar requireObjectCoercible = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n\t  return it;\n\t};\n\n\t// toObject with fallback for non-array-like ES3 strings\n\n\n\n\tvar toIndexedObject = function (it) {\n\t  return indexedObject(requireObjectCoercible(it));\n\t};\n\n\tvar isObject = function (it) {\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n\t// `ToPrimitive` abstract operation\n\t// https://tc39.es/ecma262/#sec-toprimitive\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tvar toPrimitive = function (input, PREFERRED_STRING) {\n\t  if (!isObject(input)) return input;\n\t  var fn, val;\n\t  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\n\tvar has = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n\tvar document$1 = global_1.document;\n\t// typeof document.createElement is 'object' in old IE\n\tvar EXISTS = isObject(document$1) && isObject(document$1.createElement);\n\n\tvar documentCreateElement = function (it) {\n\t  return EXISTS ? document$1.createElement(it) : {};\n\t};\n\n\t// Thank's IE8 for his funny defineProperty\n\tvar ie8DomDefine = !descriptors && !fails(function () {\n\t  return Object.defineProperty(documentCreateElement('div'), 'a', {\n\t    get: function () { return 7; }\n\t  }).a != 7;\n\t});\n\n\tvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n\t// `Object.getOwnPropertyDescriptor` method\n\t// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n\tvar f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n\t  O = toIndexedObject(O);\n\t  P = toPrimitive(P, true);\n\t  if (ie8DomDefine) try {\n\t    return nativeGetOwnPropertyDescriptor(O, P);\n\t  } catch (error) { /* empty */ }\n\t  if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);\n\t};\n\n\tvar objectGetOwnPropertyDescriptor = {\n\t\tf: f$1\n\t};\n\n\tvar anObject = function (it) {\n\t  if (!isObject(it)) {\n\t    throw TypeError(String(it) + ' is not an object');\n\t  } return it;\n\t};\n\n\tvar nativeDefineProperty = Object.defineProperty;\n\n\t// `Object.defineProperty` method\n\t// https://tc39.es/ecma262/#sec-object.defineproperty\n\tvar f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (ie8DomDefine) try {\n\t    return nativeDefineProperty(O, P, Attributes);\n\t  } catch (error) { /* empty */ }\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\n\tvar objectDefineProperty = {\n\t\tf: f$2\n\t};\n\n\tvar createNonEnumerableProperty = descriptors ? function (object, key, value) {\n\t  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\n\tvar setGlobal = function (key, value) {\n\t  try {\n\t    createNonEnumerableProperty(global_1, key, value);\n\t  } catch (error) {\n\t    global_1[key] = value;\n\t  } return value;\n\t};\n\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global_1[SHARED] || setGlobal(SHARED, {});\n\n\tvar sharedStore = store;\n\n\tvar functionToString = Function.toString;\n\n\t// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\n\tif (typeof sharedStore.inspectSource != 'function') {\n\t  sharedStore.inspectSource = function (it) {\n\t    return functionToString.call(it);\n\t  };\n\t}\n\n\tvar inspectSource = sharedStore.inspectSource;\n\n\tvar WeakMap = global_1.WeakMap;\n\n\tvar nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n\n\tvar shared = createCommonjsModule(function (module) {\n\t(module.exports = function (key, value) {\n\t  return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: '3.8.3',\n\t  mode:  'global',\n\t  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n\t});\n\t});\n\n\tvar id = 0;\n\tvar postfix = Math.random();\n\n\tvar uid = function (key) {\n\t  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n\t};\n\n\tvar keys = shared('keys');\n\n\tvar sharedKey = function (key) {\n\t  return keys[key] || (keys[key] = uid(key));\n\t};\n\n\tvar hiddenKeys = {};\n\n\tvar WeakMap$1 = global_1.WeakMap;\n\tvar set, get, has$1;\n\n\tvar enforce = function (it) {\n\t  return has$1(it) ? get(it) : set(it, {});\n\t};\n\n\tvar getterFor = function (TYPE) {\n\t  return function (it) {\n\t    var state;\n\t    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n\t      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n\t    } return state;\n\t  };\n\t};\n\n\tif (nativeWeakMap) {\n\t  var store$1 = sharedStore.state || (sharedStore.state = new WeakMap$1());\n\t  var wmget = store$1.get;\n\t  var wmhas = store$1.has;\n\t  var wmset = store$1.set;\n\t  set = function (it, metadata) {\n\t    metadata.facade = it;\n\t    wmset.call(store$1, it, metadata);\n\t    return metadata;\n\t  };\n\t  get = function (it) {\n\t    return wmget.call(store$1, it) || {};\n\t  };\n\t  has$1 = function (it) {\n\t    return wmhas.call(store$1, it);\n\t  };\n\t} else {\n\t  var STATE = sharedKey('state');\n\t  hiddenKeys[STATE] = true;\n\t  set = function (it, metadata) {\n\t    metadata.facade = it;\n\t    createNonEnumerableProperty(it, STATE, metadata);\n\t    return metadata;\n\t  };\n\t  get = function (it) {\n\t    return has(it, STATE) ? it[STATE] : {};\n\t  };\n\t  has$1 = function (it) {\n\t    return has(it, STATE);\n\t  };\n\t}\n\n\tvar internalState = {\n\t  set: set,\n\t  get: get,\n\t  has: has$1,\n\t  enforce: enforce,\n\t  getterFor: getterFor\n\t};\n\n\tvar redefine = createCommonjsModule(function (module) {\n\tvar getInternalState = internalState.get;\n\tvar enforceInternalState = internalState.enforce;\n\tvar TEMPLATE = String(String).split('String');\n\n\t(module.exports = function (O, key, value, options) {\n\t  var unsafe = options ? !!options.unsafe : false;\n\t  var simple = options ? !!options.enumerable : false;\n\t  var noTargetGet = options ? !!options.noTargetGet : false;\n\t  var state;\n\t  if (typeof value == 'function') {\n\t    if (typeof key == 'string' && !has(value, 'name')) {\n\t      createNonEnumerableProperty(value, 'name', key);\n\t    }\n\t    state = enforceInternalState(value);\n\t    if (!state.source) {\n\t      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n\t    }\n\t  }\n\t  if (O === global_1) {\n\t    if (simple) O[key] = value;\n\t    else setGlobal(key, value);\n\t    return;\n\t  } else if (!unsafe) {\n\t    delete O[key];\n\t  } else if (!noTargetGet && O[key]) {\n\t    simple = true;\n\t  }\n\t  if (simple) O[key] = value;\n\t  else createNonEnumerableProperty(O, key, value);\n\t// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\t})(Function.prototype, 'toString', function toString() {\n\t  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n\t});\n\t});\n\n\tvar path = global_1;\n\n\tvar aFunction = function (variable) {\n\t  return typeof variable == 'function' ? variable : undefined;\n\t};\n\n\tvar getBuiltIn = function (namespace, method) {\n\t  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace])\n\t    : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];\n\t};\n\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\n\t// `ToInteger` abstract operation\n\t// https://tc39.es/ecma262/#sec-tointeger\n\tvar toInteger = function (argument) {\n\t  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n\t};\n\n\tvar min = Math.min;\n\n\t// `ToLength` abstract operation\n\t// https://tc39.es/ecma262/#sec-tolength\n\tvar toLength = function (argument) {\n\t  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n\t};\n\n\tvar max = Math.max;\n\tvar min$1 = Math.min;\n\n\t// Helper for a popular repeating case of the spec:\n\t// Let integer be ? ToInteger(index).\n\t// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\n\tvar toAbsoluteIndex = function (index, length) {\n\t  var integer = toInteger(index);\n\t  return integer < 0 ? max(integer + length, 0) : min$1(integer, length);\n\t};\n\n\t// `Array.prototype.{ indexOf, includes }` methods implementation\n\tvar createMethod = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIndexedObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    // eslint-disable-next-line no-self-compare\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++];\n\t      // eslint-disable-next-line no-self-compare\n\t      if (value != value) return true;\n\t    // Array#indexOf ignores holes, Array#includes - not\n\t    } else for (;length > index; index++) {\n\t      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n\tvar arrayIncludes = {\n\t  // `Array.prototype.includes` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.includes\n\t  includes: createMethod(true),\n\t  // `Array.prototype.indexOf` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n\t  indexOf: createMethod(false)\n\t};\n\n\tvar indexOf = arrayIncludes.indexOf;\n\n\n\tvar objectKeysInternal = function (object, names) {\n\t  var O = toIndexedObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\t  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while (names.length > i) if (has(O, key = names[i++])) {\n\t    ~indexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n\t// IE8- don't enum bug keys\n\tvar enumBugKeys = [\n\t  'constructor',\n\t  'hasOwnProperty',\n\t  'isPrototypeOf',\n\t  'propertyIsEnumerable',\n\t  'toLocaleString',\n\t  'toString',\n\t  'valueOf'\n\t];\n\n\tvar hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');\n\n\t// `Object.getOwnPropertyNames` method\n\t// https://tc39.es/ecma262/#sec-object.getownpropertynames\n\tvar f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n\t  return objectKeysInternal(O, hiddenKeys$1);\n\t};\n\n\tvar objectGetOwnPropertyNames = {\n\t\tf: f$3\n\t};\n\n\tvar f$4 = Object.getOwnPropertySymbols;\n\n\tvar objectGetOwnPropertySymbols = {\n\t\tf: f$4\n\t};\n\n\t// all object keys, includes non-enumerable and symbols\n\tvar ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n\t  var keys = objectGetOwnPropertyNames.f(anObject(it));\n\t  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\n\t  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n\t};\n\n\tvar copyConstructorProperties = function (target, source) {\n\t  var keys = ownKeys(source);\n\t  var defineProperty = objectDefineProperty.f;\n\t  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n\t  }\n\t};\n\n\tvar replacement = /#|\\.prototype\\./;\n\n\tvar isForced = function (feature, detection) {\n\t  var value = data[normalize(feature)];\n\t  return value == POLYFILL ? true\n\t    : value == NATIVE ? false\n\t    : typeof detection == 'function' ? fails(detection)\n\t    : !!detection;\n\t};\n\n\tvar normalize = isForced.normalize = function (string) {\n\t  return String(string).replace(replacement, '.').toLowerCase();\n\t};\n\n\tvar data = isForced.data = {};\n\tvar NATIVE = isForced.NATIVE = 'N';\n\tvar POLYFILL = isForced.POLYFILL = 'P';\n\n\tvar isForced_1 = isForced;\n\n\tvar getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\n\n\n\n\n\n\n\t/*\n\t  options.target      - name of the target object\n\t  options.global      - target is the global object\n\t  options.stat        - export as static methods of target\n\t  options.proto       - export as prototype methods of target\n\t  options.real        - real prototype method for the `pure` version\n\t  options.forced      - export even if the native feature is available\n\t  options.bind        - bind methods to the target, required for the `pure` version\n\t  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n\t  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n\t  options.sham        - add a flag to not completely full polyfills\n\t  options.enumerable  - export as enumerable property\n\t  options.noTargetGet - prevent calling a getter on target\n\t*/\n\tvar _export = function (options, source) {\n\t  var TARGET = options.target;\n\t  var GLOBAL = options.global;\n\t  var STATIC = options.stat;\n\t  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n\t  if (GLOBAL) {\n\t    target = global_1;\n\t  } else if (STATIC) {\n\t    target = global_1[TARGET] || setGlobal(TARGET, {});\n\t  } else {\n\t    target = (global_1[TARGET] || {}).prototype;\n\t  }\n\t  if (target) for (key in source) {\n\t    sourceProperty = source[key];\n\t    if (options.noTargetGet) {\n\t      descriptor = getOwnPropertyDescriptor$1(target, key);\n\t      targetProperty = descriptor && descriptor.value;\n\t    } else targetProperty = target[key];\n\t    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n\t    // contained in target\n\t    if (!FORCED && targetProperty !== undefined) {\n\t      if (typeof sourceProperty === typeof targetProperty) continue;\n\t      copyConstructorProperties(sourceProperty, targetProperty);\n\t    }\n\t    // add a flag to not completely full polyfills\n\t    if (options.sham || (targetProperty && targetProperty.sham)) {\n\t      createNonEnumerableProperty(sourceProperty, 'sham', true);\n\t    }\n\t    // extend global\n\t    redefine(target, key, sourceProperty, options);\n\t  }\n\t};\n\n\tvar aFunction$1 = function (it) {\n\t  if (typeof it != 'function') {\n\t    throw TypeError(String(it) + ' is not a function');\n\t  } return it;\n\t};\n\n\t// optional / simple context binding\n\tvar functionBindContext = function (fn, that, length) {\n\t  aFunction$1(fn);\n\t  if (that === undefined) return fn;\n\t  switch (length) {\n\t    case 0: return function () {\n\t      return fn.call(that);\n\t    };\n\t    case 1: return function (a) {\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function (a, b) {\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function (a, b, c) {\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function (/* ...args */) {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n\t// `ToObject` abstract operation\n\t// https://tc39.es/ecma262/#sec-toobject\n\tvar toObject = function (argument) {\n\t  return Object(requireObjectCoercible(argument));\n\t};\n\n\t// `IsArray` abstract operation\n\t// https://tc39.es/ecma262/#sec-isarray\n\tvar isArray = Array.isArray || function isArray(arg) {\n\t  return classofRaw(arg) == 'Array';\n\t};\n\n\tvar nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {\n\t  // Chrome 38 Symbol has incorrect toString conversion\n\t  // eslint-disable-next-line no-undef\n\t  return !String(Symbol());\n\t});\n\n\tvar useSymbolAsUid = nativeSymbol\n\t  // eslint-disable-next-line no-undef\n\t  && !Symbol.sham\n\t  // eslint-disable-next-line no-undef\n\t  && typeof Symbol.iterator == 'symbol';\n\n\tvar WellKnownSymbolsStore = shared('wks');\n\tvar Symbol$1 = global_1.Symbol;\n\tvar createWellKnownSymbol = useSymbolAsUid ? Symbol$1 : Symbol$1 && Symbol$1.withoutSetter || uid;\n\n\tvar wellKnownSymbol = function (name) {\n\t  if (!has(WellKnownSymbolsStore, name)) {\n\t    if (nativeSymbol && has(Symbol$1, name)) WellKnownSymbolsStore[name] = Symbol$1[name];\n\t    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n\t  } return WellKnownSymbolsStore[name];\n\t};\n\n\tvar SPECIES = wellKnownSymbol('species');\n\n\t// `ArraySpeciesCreate` abstract operation\n\t// https://tc39.es/ecma262/#sec-arrayspeciescreate\n\tvar arraySpeciesCreate = function (originalArray, length) {\n\t  var C;\n\t  if (isArray(originalArray)) {\n\t    C = originalArray.constructor;\n\t    // cross-realm fallback\n\t    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n\t    else if (isObject(C)) {\n\t      C = C[SPECIES];\n\t      if (C === null) C = undefined;\n\t    }\n\t  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n\t};\n\n\tvar push = [].push;\n\n\t// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\n\tvar createMethod$1 = function (TYPE) {\n\t  var IS_MAP = TYPE == 1;\n\t  var IS_FILTER = TYPE == 2;\n\t  var IS_SOME = TYPE == 3;\n\t  var IS_EVERY = TYPE == 4;\n\t  var IS_FIND_INDEX = TYPE == 6;\n\t  var IS_FILTER_OUT = TYPE == 7;\n\t  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n\t  return function ($this, callbackfn, that, specificCreate) {\n\t    var O = toObject($this);\n\t    var self = indexedObject(O);\n\t    var boundFunction = functionBindContext(callbackfn, that, 3);\n\t    var length = toLength(self.length);\n\t    var index = 0;\n\t    var create = specificCreate || arraySpeciesCreate;\n\t    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\n\t    var value, result;\n\t    for (;length > index; index++) if (NO_HOLES || index in self) {\n\t      value = self[index];\n\t      result = boundFunction(value, index, O);\n\t      if (TYPE) {\n\t        if (IS_MAP) target[index] = result; // map\n\t        else if (result) switch (TYPE) {\n\t          case 3: return true;              // some\n\t          case 5: return value;             // find\n\t          case 6: return index;             // findIndex\n\t          case 2: push.call(target, value); // filter\n\t        } else switch (TYPE) {\n\t          case 4: return false;             // every\n\t          case 7: push.call(target, value); // filterOut\n\t        }\n\t      }\n\t    }\n\t    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n\t  };\n\t};\n\n\tvar arrayIteration = {\n\t  // `Array.prototype.forEach` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n\t  forEach: createMethod$1(0),\n\t  // `Array.prototype.map` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.map\n\t  map: createMethod$1(1),\n\t  // `Array.prototype.filter` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.filter\n\t  filter: createMethod$1(2),\n\t  // `Array.prototype.some` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.some\n\t  some: createMethod$1(3),\n\t  // `Array.prototype.every` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.every\n\t  every: createMethod$1(4),\n\t  // `Array.prototype.find` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.find\n\t  find: createMethod$1(5),\n\t  // `Array.prototype.findIndex` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n\t  findIndex: createMethod$1(6),\n\t  // `Array.prototype.filterOut` method\n\t  // https://github.com/tc39/proposal-array-filtering\n\t  filterOut: createMethod$1(7)\n\t};\n\n\tvar engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';\n\n\tvar process = global_1.process;\n\tvar versions = process && process.versions;\n\tvar v8 = versions && versions.v8;\n\tvar match, version;\n\n\tif (v8) {\n\t  match = v8.split('.');\n\t  version = match[0] + match[1];\n\t} else if (engineUserAgent) {\n\t  match = engineUserAgent.match(/Edge\\/(\\d+)/);\n\t  if (!match || match[1] >= 74) {\n\t    match = engineUserAgent.match(/Chrome\\/(\\d+)/);\n\t    if (match) version = match[1];\n\t  }\n\t}\n\n\tvar engineV8Version = version && +version;\n\n\tvar SPECIES$1 = wellKnownSymbol('species');\n\n\tvar arrayMethodHasSpeciesSupport = function (METHOD_NAME) {\n\t  // We can't use this feature detection in V8 since it causes\n\t  // deoptimization and serious performance degradation\n\t  // https://github.com/zloirock/core-js/issues/677\n\t  return engineV8Version >= 51 || !fails(function () {\n\t    var array = [];\n\t    var constructor = array.constructor = {};\n\t    constructor[SPECIES$1] = function () {\n\t      return { foo: 1 };\n\t    };\n\t    return array[METHOD_NAME](Boolean).foo !== 1;\n\t  });\n\t};\n\n\tvar defineProperty = Object.defineProperty;\n\tvar cache = {};\n\n\tvar thrower = function (it) { throw it; };\n\n\tvar arrayMethodUsesToLength = function (METHOD_NAME, options) {\n\t  if (has(cache, METHOD_NAME)) return cache[METHOD_NAME];\n\t  if (!options) options = {};\n\t  var method = [][METHOD_NAME];\n\t  var ACCESSORS = has(options, 'ACCESSORS') ? options.ACCESSORS : false;\n\t  var argument0 = has(options, 0) ? options[0] : thrower;\n\t  var argument1 = has(options, 1) ? options[1] : undefined;\n\n\t  return cache[METHOD_NAME] = !!method && !fails(function () {\n\t    if (ACCESSORS && !descriptors) return true;\n\t    var O = { length: -1 };\n\n\t    if (ACCESSORS) defineProperty(O, 1, { enumerable: true, get: thrower });\n\t    else O[1] = 1;\n\n\t    method.call(O, argument0, argument1);\n\t  });\n\t};\n\n\tvar $filter = arrayIteration.filter;\n\n\n\n\tvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\t// Edge 14- issue\n\tvar USES_TO_LENGTH = arrayMethodUsesToLength('filter');\n\n\t// `Array.prototype.filter` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.filter\n\t// with adding support of @@species\n\t_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n\t  filter: function filter(callbackfn /* , thisArg */) {\n\t    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar createProperty = function (object, key, value) {\n\t  var propertyKey = toPrimitive(key);\n\t  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));\n\t  else object[propertyKey] = value;\n\t};\n\n\tvar HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport('splice');\n\tvar USES_TO_LENGTH$1 = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\n\tvar max$1 = Math.max;\n\tvar min$2 = Math.min;\n\tvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\n\tvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n\t// `Array.prototype.splice` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.splice\n\t// with adding support of @@species\n\t_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$1 || !USES_TO_LENGTH$1 }, {\n\t  splice: function splice(start, deleteCount /* , ...items */) {\n\t    var O = toObject(this);\n\t    var len = toLength(O.length);\n\t    var actualStart = toAbsoluteIndex(start, len);\n\t    var argumentsLength = arguments.length;\n\t    var insertCount, actualDeleteCount, A, k, from, to;\n\t    if (argumentsLength === 0) {\n\t      insertCount = actualDeleteCount = 0;\n\t    } else if (argumentsLength === 1) {\n\t      insertCount = 0;\n\t      actualDeleteCount = len - actualStart;\n\t    } else {\n\t      insertCount = argumentsLength - 2;\n\t      actualDeleteCount = min$2(max$1(toInteger(deleteCount), 0), len - actualStart);\n\t    }\n\t    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n\t      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n\t    }\n\t    A = arraySpeciesCreate(O, actualDeleteCount);\n\t    for (k = 0; k < actualDeleteCount; k++) {\n\t      from = actualStart + k;\n\t      if (from in O) createProperty(A, k, O[from]);\n\t    }\n\t    A.length = actualDeleteCount;\n\t    if (insertCount < actualDeleteCount) {\n\t      for (k = actualStart; k < len - actualDeleteCount; k++) {\n\t        from = k + actualDeleteCount;\n\t        to = k + insertCount;\n\t        if (from in O) O[to] = O[from];\n\t        else delete O[to];\n\t      }\n\t      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n\t    } else if (insertCount > actualDeleteCount) {\n\t      for (k = len - actualDeleteCount; k > actualStart; k--) {\n\t        from = k + actualDeleteCount - 1;\n\t        to = k + insertCount - 1;\n\t        if (from in O) O[to] = O[from];\n\t        else delete O[to];\n\t      }\n\t    }\n\t    for (k = 0; k < insertCount; k++) {\n\t      O[k + actualStart] = arguments[k + 2];\n\t    }\n\t    O.length = len - actualDeleteCount + insertCount;\n\t    return A;\n\t  }\n\t});\n\n\t// `Object.keys` method\n\t// https://tc39.es/ecma262/#sec-object.keys\n\tvar objectKeys = Object.keys || function keys(O) {\n\t  return objectKeysInternal(O, enumBugKeys);\n\t};\n\n\tvar nativeAssign = Object.assign;\n\tvar defineProperty$1 = Object.defineProperty;\n\n\t// `Object.assign` method\n\t// https://tc39.es/ecma262/#sec-object.assign\n\tvar objectAssign = !nativeAssign || fails(function () {\n\t  // should have correct order of operations (Edge bug)\n\t  if (descriptors && nativeAssign({ b: 1 }, nativeAssign(defineProperty$1({}, 'a', {\n\t    enumerable: true,\n\t    get: function () {\n\t      defineProperty$1(this, 'b', {\n\t        value: 3,\n\t        enumerable: false\n\t      });\n\t    }\n\t  }), { b: 2 })).b !== 1) return true;\n\t  // should work with symbols and should have deterministic property order (V8 bug)\n\t  var A = {};\n\t  var B = {};\n\t  // eslint-disable-next-line no-undef\n\t  var symbol = Symbol();\n\t  var alphabet = 'abcdefghijklmnopqrst';\n\t  A[symbol] = 7;\n\t  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n\t  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n\t}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n\t  var T = toObject(target);\n\t  var argumentsLength = arguments.length;\n\t  var index = 1;\n\t  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\n\t  var propertyIsEnumerable = objectPropertyIsEnumerable.f;\n\t  while (argumentsLength > index) {\n\t    var S = indexedObject(arguments[index++]);\n\t    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\t    while (length > j) {\n\t      key = keys[j++];\n\t      if (!descriptors || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n\t    }\n\t  } return T;\n\t} : nativeAssign;\n\n\t// `Object.assign` method\n\t// https://tc39.es/ecma262/#sec-object.assign\n\t_export({ target: 'Object', stat: true, forced: Object.assign !== objectAssign }, {\n\t  assign: objectAssign\n\t});\n\n\tvar FAILS_ON_PRIMITIVES = fails(function () { objectKeys(1); });\n\n\t// `Object.keys` method\n\t// https://tc39.es/ecma262/#sec-object.keys\n\t_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n\t  keys: function keys(it) {\n\t    return objectKeys(toObject(it));\n\t  }\n\t});\n\n\t// `RegExp.prototype.flags` getter implementation\n\t// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\n\tvar regexpFlags = function () {\n\t  var that = anObject(this);\n\t  var result = '';\n\t  if (that.global) result += 'g';\n\t  if (that.ignoreCase) result += 'i';\n\t  if (that.multiline) result += 'm';\n\t  if (that.dotAll) result += 's';\n\t  if (that.unicode) result += 'u';\n\t  if (that.sticky) result += 'y';\n\t  return result;\n\t};\n\n\t// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n\t// so we use an intermediate function.\n\tfunction RE(s, f) {\n\t  return RegExp(s, f);\n\t}\n\n\tvar UNSUPPORTED_Y = fails(function () {\n\t  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n\t  var re = RE('a', 'y');\n\t  re.lastIndex = 2;\n\t  return re.exec('abcd') != null;\n\t});\n\n\tvar BROKEN_CARET = fails(function () {\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n\t  var re = RE('^r', 'gy');\n\t  re.lastIndex = 2;\n\t  return re.exec('str') != null;\n\t});\n\n\tvar regexpStickyHelpers = {\n\t\tUNSUPPORTED_Y: UNSUPPORTED_Y,\n\t\tBROKEN_CARET: BROKEN_CARET\n\t};\n\n\tvar nativeExec = RegExp.prototype.exec;\n\t// This always refers to the native implementation, because the\n\t// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n\t// which loads this file before patching the method.\n\tvar nativeReplace = String.prototype.replace;\n\n\tvar patchedExec = nativeExec;\n\n\tvar UPDATES_LAST_INDEX_WRONG = (function () {\n\t  var re1 = /a/;\n\t  var re2 = /b*/g;\n\t  nativeExec.call(re1, 'a');\n\t  nativeExec.call(re2, 'a');\n\t  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n\t})();\n\n\tvar UNSUPPORTED_Y$1 = regexpStickyHelpers.UNSUPPORTED_Y || regexpStickyHelpers.BROKEN_CARET;\n\n\t// nonparticipating capturing group, copied from es5-shim's String#split patch.\n\tvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\n\tvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1;\n\n\tif (PATCH) {\n\t  patchedExec = function exec(str) {\n\t    var re = this;\n\t    var lastIndex, reCopy, match, i;\n\t    var sticky = UNSUPPORTED_Y$1 && re.sticky;\n\t    var flags = regexpFlags.call(re);\n\t    var source = re.source;\n\t    var charsAdded = 0;\n\t    var strCopy = str;\n\n\t    if (sticky) {\n\t      flags = flags.replace('y', '');\n\t      if (flags.indexOf('g') === -1) {\n\t        flags += 'g';\n\t      }\n\n\t      strCopy = String(str).slice(re.lastIndex);\n\t      // Support anchored sticky behavior.\n\t      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n\t        source = '(?: ' + source + ')';\n\t        strCopy = ' ' + strCopy;\n\t        charsAdded++;\n\t      }\n\t      // ^(? + rx + ) is needed, in combination with some str slicing, to\n\t      // simulate the 'y' flag.\n\t      reCopy = new RegExp('^(?:' + source + ')', flags);\n\t    }\n\n\t    if (NPCG_INCLUDED) {\n\t      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n\t    }\n\t    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n\t    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n\t    if (sticky) {\n\t      if (match) {\n\t        match.input = match.input.slice(charsAdded);\n\t        match[0] = match[0].slice(charsAdded);\n\t        match.index = re.lastIndex;\n\t        re.lastIndex += match[0].length;\n\t      } else re.lastIndex = 0;\n\t    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n\t      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n\t    }\n\t    if (NPCG_INCLUDED && match && match.length > 1) {\n\t      // Fix browsers whose `exec` methods don't consistently return `undefined`\n\t      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n\t      nativeReplace.call(match[0], reCopy, function () {\n\t        for (i = 1; i < arguments.length - 2; i++) {\n\t          if (arguments[i] === undefined) match[i] = undefined;\n\t        }\n\t      });\n\t    }\n\n\t    return match;\n\t  };\n\t}\n\n\tvar regexpExec = patchedExec;\n\n\t// `RegExp.prototype.exec` method\n\t// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n\t_export({ target: 'RegExp', proto: true, forced: /./.exec !== regexpExec }, {\n\t  exec: regexpExec\n\t});\n\n\t// TODO: Remove from `core-js@4` since it's moved to entry points\n\n\n\n\n\n\n\n\tvar SPECIES$2 = wellKnownSymbol('species');\n\n\tvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n\t  // #replace needs built-in support for named groups.\n\t  // #match works fine because it just return the exec results, even if it has\n\t  // a \"grops\" property.\n\t  var re = /./;\n\t  re.exec = function () {\n\t    var result = [];\n\t    result.groups = { a: '7' };\n\t    return result;\n\t  };\n\t  return ''.replace(re, '$<a>') !== '7';\n\t});\n\n\t// IE <= 11 replaces $0 with the whole match, as if it was $&\n\t// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\n\tvar REPLACE_KEEPS_$0 = (function () {\n\t  return 'a'.replace(/./, '$0') === '$0';\n\t})();\n\n\tvar REPLACE = wellKnownSymbol('replace');\n\t// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\n\tvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n\t  if (/./[REPLACE]) {\n\t    return /./[REPLACE]('a', '$0') === '';\n\t  }\n\t  return false;\n\t})();\n\n\t// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n\t// Weex JS has frozen built-in prototypes, so use try / catch wrapper\n\tvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n\t  var re = /(?:)/;\n\t  var originalExec = re.exec;\n\t  re.exec = function () { return originalExec.apply(this, arguments); };\n\t  var result = 'ab'.split(re);\n\t  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n\t});\n\n\tvar fixRegexpWellKnownSymbolLogic = function (KEY, length, exec, sham) {\n\t  var SYMBOL = wellKnownSymbol(KEY);\n\n\t  var DELEGATES_TO_SYMBOL = !fails(function () {\n\t    // String methods call symbol-named RegEp methods\n\t    var O = {};\n\t    O[SYMBOL] = function () { return 7; };\n\t    return ''[KEY](O) != 7;\n\t  });\n\n\t  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n\t    // Symbol-named RegExp methods call .exec\n\t    var execCalled = false;\n\t    var re = /a/;\n\n\t    if (KEY === 'split') {\n\t      // We can't use real regex here since it causes deoptimization\n\t      // and serious performance degradation in V8\n\t      // https://github.com/zloirock/core-js/issues/306\n\t      re = {};\n\t      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n\t      // a new one. We need to return the patched regex when creating the new one.\n\t      re.constructor = {};\n\t      re.constructor[SPECIES$2] = function () { return re; };\n\t      re.flags = '';\n\t      re[SYMBOL] = /./[SYMBOL];\n\t    }\n\n\t    re.exec = function () { execCalled = true; return null; };\n\n\t    re[SYMBOL]('');\n\t    return !execCalled;\n\t  });\n\n\t  if (\n\t    !DELEGATES_TO_SYMBOL ||\n\t    !DELEGATES_TO_EXEC ||\n\t    (KEY === 'replace' && !(\n\t      REPLACE_SUPPORTS_NAMED_GROUPS &&\n\t      REPLACE_KEEPS_$0 &&\n\t      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n\t    )) ||\n\t    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n\t  ) {\n\t    var nativeRegExpMethod = /./[SYMBOL];\n\t    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n\t      if (regexp.exec === regexpExec) {\n\t        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n\t          // The native String method already delegates to @@method (this\n\t          // polyfilled function), leasing to infinite recursion.\n\t          // We avoid it by directly calling the native @@method method.\n\t          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n\t        }\n\t        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n\t      }\n\t      return { done: false };\n\t    }, {\n\t      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n\t      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n\t    });\n\t    var stringMethod = methods[0];\n\t    var regexMethod = methods[1];\n\n\t    redefine(String.prototype, KEY, stringMethod);\n\t    redefine(RegExp.prototype, SYMBOL, length == 2\n\t      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n\t      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n\t      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n\t      // 21.2.5.6 RegExp.prototype[@@match](string)\n\t      // 21.2.5.9 RegExp.prototype[@@search](string)\n\t      : function (string) { return regexMethod.call(string, this); }\n\t    );\n\t  }\n\n\t  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n\t};\n\n\t// `SameValue` abstract operation\n\t// https://tc39.es/ecma262/#sec-samevalue\n\tvar sameValue = Object.is || function is(x, y) {\n\t  // eslint-disable-next-line no-self-compare\n\t  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n\t};\n\n\t// `RegExpExec` abstract operation\n\t// https://tc39.es/ecma262/#sec-regexpexec\n\tvar regexpExecAbstract = function (R, S) {\n\t  var exec = R.exec;\n\t  if (typeof exec === 'function') {\n\t    var result = exec.call(R, S);\n\t    if (typeof result !== 'object') {\n\t      throw TypeError('RegExp exec method returned something other than an Object or null');\n\t    }\n\t    return result;\n\t  }\n\n\t  if (classofRaw(R) !== 'RegExp') {\n\t    throw TypeError('RegExp#exec called on incompatible receiver');\n\t  }\n\n\t  return regexpExec.call(R, S);\n\t};\n\n\t// @@search logic\n\tfixRegexpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n\t  return [\n\t    // `String.prototype.search` method\n\t    // https://tc39.es/ecma262/#sec-string.prototype.search\n\t    function search(regexp) {\n\t      var O = requireObjectCoercible(this);\n\t      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n\t      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n\t    },\n\t    // `RegExp.prototype[@@search]` method\n\t    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n\t    function (regexp) {\n\t      var res = maybeCallNative(nativeSearch, regexp, this);\n\t      if (res.done) return res.value;\n\n\t      var rx = anObject(regexp);\n\t      var S = String(this);\n\n\t      var previousLastIndex = rx.lastIndex;\n\t      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n\t      var result = regexpExecAbstract(rx, S);\n\t      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n\t      return result === null ? -1 : result.index;\n\t    }\n\t  ];\n\t});\n\n\t// iterable DOM collections\n\t// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\n\tvar domIterables = {\n\t  CSSRuleList: 0,\n\t  CSSStyleDeclaration: 0,\n\t  CSSValueList: 0,\n\t  ClientRectList: 0,\n\t  DOMRectList: 0,\n\t  DOMStringList: 0,\n\t  DOMTokenList: 1,\n\t  DataTransferItemList: 0,\n\t  FileList: 0,\n\t  HTMLAllCollection: 0,\n\t  HTMLCollection: 0,\n\t  HTMLFormElement: 0,\n\t  HTMLSelectElement: 0,\n\t  MediaList: 0,\n\t  MimeTypeArray: 0,\n\t  NamedNodeMap: 0,\n\t  NodeList: 1,\n\t  PaintRequestList: 0,\n\t  Plugin: 0,\n\t  PluginArray: 0,\n\t  SVGLengthList: 0,\n\t  SVGNumberList: 0,\n\t  SVGPathSegList: 0,\n\t  SVGPointList: 0,\n\t  SVGStringList: 0,\n\t  SVGTransformList: 0,\n\t  SourceBufferList: 0,\n\t  StyleSheetList: 0,\n\t  TextTrackCueList: 0,\n\t  TextTrackList: 0,\n\t  TouchList: 0\n\t};\n\n\tvar arrayMethodIsStrict = function (METHOD_NAME, argument) {\n\t  var method = [][METHOD_NAME];\n\t  return !!method && fails(function () {\n\t    // eslint-disable-next-line no-useless-call,no-throw-literal\n\t    method.call(null, argument || function () { throw 1; }, 1);\n\t  });\n\t};\n\n\tvar $forEach = arrayIteration.forEach;\n\n\n\n\tvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\tvar USES_TO_LENGTH$2 = arrayMethodUsesToLength('forEach');\n\n\t// `Array.prototype.forEach` method implementation\n\t// https://tc39.es/ecma262/#sec-array.prototype.foreach\n\tvar arrayForEach = (!STRICT_METHOD || !USES_TO_LENGTH$2) ? function forEach(callbackfn /* , thisArg */) {\n\t  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t} : [].forEach;\n\n\tfor (var COLLECTION_NAME in domIterables) {\n\t  var Collection = global_1[COLLECTION_NAME];\n\t  var CollectionPrototype = Collection && Collection.prototype;\n\t  // some Chrome versions have non-configurable methods on DOMTokenList\n\t  if (CollectionPrototype && CollectionPrototype.forEach !== arrayForEach) try {\n\t    createNonEnumerableProperty(CollectionPrototype, 'forEach', arrayForEach);\n\t  } catch (error) {\n\t    CollectionPrototype.forEach = arrayForEach;\n\t  }\n\t}\n\n\tvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\tvar MAX_SAFE_INTEGER$1 = 0x1FFFFFFFFFFFFF;\n\tvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n\t// We can't use this feature detection in V8 since it causes\n\t// deoptimization and serious performance degradation\n\t// https://github.com/zloirock/core-js/issues/679\n\tvar IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {\n\t  var array = [];\n\t  array[IS_CONCAT_SPREADABLE] = false;\n\t  return array.concat()[0] !== array;\n\t});\n\n\tvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\n\tvar isConcatSpreadable = function (O) {\n\t  if (!isObject(O)) return false;\n\t  var spreadable = O[IS_CONCAT_SPREADABLE];\n\t  return spreadable !== undefined ? !!spreadable : isArray(O);\n\t};\n\n\tvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n\t// `Array.prototype.concat` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.concat\n\t// with adding support of @@isConcatSpreadable and @@species\n\t_export({ target: 'Array', proto: true, forced: FORCED }, {\n\t  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n\t    var O = toObject(this);\n\t    var A = arraySpeciesCreate(O, 0);\n\t    var n = 0;\n\t    var i, k, length, len, E;\n\t    for (i = -1, length = arguments.length; i < length; i++) {\n\t      E = i === -1 ? O : arguments[i];\n\t      if (isConcatSpreadable(E)) {\n\t        len = toLength(E.length);\n\t        if (n + len > MAX_SAFE_INTEGER$1) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n\t        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n\t      } else {\n\t        if (n >= MAX_SAFE_INTEGER$1) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n\t        createProperty(A, n++, E);\n\t      }\n\t    }\n\t    A.length = n;\n\t    return A;\n\t  }\n\t});\n\n\tvar global$1 = typeof global$2 !== \"undefined\" ? global$2 : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\n\n\tvar global$2 = typeof global$1 !== \"undefined\" ? global$1 : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\n\n\t// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n\tfunction defaultSetTimout() {\n\t  throw new Error('setTimeout has not been defined');\n\t}\n\n\tfunction defaultClearTimeout() {\n\t  throw new Error('clearTimeout has not been defined');\n\t}\n\n\tvar cachedSetTimeout = defaultSetTimout;\n\tvar cachedClearTimeout = defaultClearTimeout;\n\n\tif (typeof global$2.setTimeout === 'function') {\n\t  cachedSetTimeout = setTimeout;\n\t}\n\n\tif (typeof global$2.clearTimeout === 'function') {\n\t  cachedClearTimeout = clearTimeout;\n\t}\n\n\tfunction runTimeout(fun) {\n\t  if (cachedSetTimeout === setTimeout) {\n\t    //normal enviroments in sane situations\n\t    return setTimeout(fun, 0);\n\t  } // if setTimeout wasn't available but was latter defined\n\n\n\t  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t    cachedSetTimeout = setTimeout;\n\t    return setTimeout(fun, 0);\n\t  }\n\n\t  try {\n\t    // when when somebody has screwed with setTimeout but no I.E. maddness\n\t    return cachedSetTimeout(fun, 0);\n\t  } catch (e) {\n\t    try {\n\t      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t      return cachedSetTimeout.call(null, fun, 0);\n\t    } catch (e) {\n\t      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t      return cachedSetTimeout.call(this, fun, 0);\n\t    }\n\t  }\n\t}\n\n\tfunction runClearTimeout(marker) {\n\t  if (cachedClearTimeout === clearTimeout) {\n\t    //normal enviroments in sane situations\n\t    return clearTimeout(marker);\n\t  } // if clearTimeout wasn't available but was latter defined\n\n\n\t  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t    cachedClearTimeout = clearTimeout;\n\t    return clearTimeout(marker);\n\t  }\n\n\t  try {\n\t    // when when somebody has screwed with setTimeout but no I.E. maddness\n\t    return cachedClearTimeout(marker);\n\t  } catch (e) {\n\t    try {\n\t      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t      return cachedClearTimeout.call(null, marker);\n\t    } catch (e) {\n\t      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t      return cachedClearTimeout.call(this, marker);\n\t    }\n\t  }\n\t}\n\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\n\tfunction cleanUpNextTick() {\n\t  if (!draining || !currentQueue) {\n\t    return;\n\t  }\n\n\t  draining = false;\n\n\t  if (currentQueue.length) {\n\t    queue = currentQueue.concat(queue);\n\t  } else {\n\t    queueIndex = -1;\n\t  }\n\n\t  if (queue.length) {\n\t    drainQueue();\n\t  }\n\t}\n\n\tfunction drainQueue() {\n\t  if (draining) {\n\t    return;\n\t  }\n\n\t  var timeout = runTimeout(cleanUpNextTick);\n\t  draining = true;\n\t  var len = queue.length;\n\n\t  while (len) {\n\t    currentQueue = queue;\n\t    queue = [];\n\n\t    while (++queueIndex < len) {\n\t      if (currentQueue) {\n\t        currentQueue[queueIndex].run();\n\t      }\n\t    }\n\n\t    queueIndex = -1;\n\t    len = queue.length;\n\t  }\n\n\t  currentQueue = null;\n\t  draining = false;\n\t  runClearTimeout(timeout);\n\t}\n\n\tfunction nextTick(fun) {\n\t  var args = new Array(arguments.length - 1);\n\n\t  if (arguments.length > 1) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t  }\n\n\t  queue.push(new Item(fun, args));\n\n\t  if (queue.length === 1 && !draining) {\n\t    runTimeout(drainQueue);\n\t  }\n\t} // v8 likes predictible objects\n\n\tfunction Item(fun, array) {\n\t  this.fun = fun;\n\t  this.array = array;\n\t}\n\n\tItem.prototype.run = function () {\n\t  this.fun.apply(null, this.array);\n\t};\n\n\tvar title = 'browser';\n\tvar platform = 'browser';\n\tvar browser = true;\n\tvar env = {};\n\tvar argv = [];\n\tvar version$1 = ''; // empty string to avoid regexp issues\n\n\tvar versions$1 = {};\n\tvar release = {};\n\tvar config = {};\n\n\tfunction noop() {}\n\n\tvar on = noop;\n\tvar addListener = noop;\n\tvar once = noop;\n\tvar off = noop;\n\tvar removeListener = noop;\n\tvar removeAllListeners = noop;\n\tvar emit = noop;\n\tfunction binding(name) {\n\t  throw new Error('process.binding is not supported');\n\t}\n\tfunction cwd() {\n\t  return '/';\n\t}\n\tfunction chdir(dir) {\n\t  throw new Error('process.chdir is not supported');\n\t}\n\tfunction umask() {\n\t  return 0;\n\t} // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\n\n\tvar performance = global$2.performance || {};\n\n\tvar performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function () {\n\t  return new Date().getTime();\n\t}; // generate timestamp or delta\n\t// see http://nodejs.org/api/process.html#process_process_hrtime\n\n\n\tfunction hrtime(previousTimestamp) {\n\t  var clocktime = performanceNow.call(performance) * 1e-3;\n\t  var seconds = Math.floor(clocktime);\n\t  var nanoseconds = Math.floor(clocktime % 1 * 1e9);\n\n\t  if (previousTimestamp) {\n\t    seconds = seconds - previousTimestamp[0];\n\t    nanoseconds = nanoseconds - previousTimestamp[1];\n\n\t    if (nanoseconds < 0) {\n\t      seconds--;\n\t      nanoseconds += 1e9;\n\t    }\n\t  }\n\n\t  return [seconds, nanoseconds];\n\t}\n\tvar startTime = new Date();\n\tfunction uptime() {\n\t  var currentTime = new Date();\n\t  var dif = currentTime - startTime;\n\t  return dif / 1000;\n\t}\n\tvar process$1 = {\n\t  nextTick: nextTick,\n\t  title: title,\n\t  browser: browser,\n\t  env: env,\n\t  argv: argv,\n\t  version: version$1,\n\t  versions: versions$1,\n\t  on: on,\n\t  addListener: addListener,\n\t  once: once,\n\t  off: off,\n\t  removeListener: removeListener,\n\t  removeAllListeners: removeAllListeners,\n\t  emit: emit,\n\t  binding: binding,\n\t  cwd: cwd,\n\t  chdir: chdir,\n\t  umask: umask,\n\t  hrtime: hrtime,\n\t  platform: platform,\n\t  release: release,\n\t  config: config,\n\t  uptime: uptime\n\t};\n\n\tvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\tvar test = {};\n\n\ttest[TO_STRING_TAG] = 'z';\n\n\tvar toStringTagSupport = String(test) === '[object z]';\n\n\tvar TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');\n\t// ES3 wrong here\n\tvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n\t// fallback for IE11 Script Access Denied error\n\tvar tryGet = function (it, key) {\n\t  try {\n\t    return it[key];\n\t  } catch (error) { /* empty */ }\n\t};\n\n\t// getting tag from ES6+ `Object.prototype.toString`\n\tvar classof = toStringTagSupport ? classofRaw : function (it) {\n\t  var O, tag, result;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG$1)) == 'string' ? tag\n\t    // builtinTag case\n\t    : CORRECT_ARGUMENTS ? classofRaw(O)\n\t    // ES3 arguments fallback\n\t    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n\t};\n\n\t// `Object.prototype.toString` method implementation\n\t// https://tc39.es/ecma262/#sec-object.prototype.tostring\n\tvar objectToString = toStringTagSupport ? {}.toString : function toString() {\n\t  return '[object ' + classof(this) + ']';\n\t};\n\n\t// `Object.prototype.toString` method\n\t// https://tc39.es/ecma262/#sec-object.prototype.tostring\n\tif (!toStringTagSupport) {\n\t  redefine(Object.prototype, 'toString', objectToString, { unsafe: true });\n\t}\n\n\tvar TO_STRING = 'toString';\n\tvar RegExpPrototype = RegExp.prototype;\n\tvar nativeToString = RegExpPrototype[TO_STRING];\n\n\tvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n\t// FF44- RegExp#toString has a wrong name\n\tvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n\t// `RegExp.prototype.toString` method\n\t// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\n\tif (NOT_GENERIC || INCORRECT_NAME) {\n\t  redefine(RegExp.prototype, TO_STRING, function toString() {\n\t    var R = anObject(this);\n\t    var p = String(R.source);\n\t    var rf = R.flags;\n\t    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? regexpFlags.call(R) : rf);\n\t    return '/' + p + '/' + f;\n\t  }, { unsafe: true });\n\t}\n\n\tvar defineProperty$2 = objectDefineProperty.f;\n\n\tvar FunctionPrototype = Function.prototype;\n\tvar FunctionPrototypeToString = FunctionPrototype.toString;\n\tvar nameRE = /^\\s*function ([^ (]*)/;\n\tvar NAME = 'name';\n\n\t// Function instances `.name` property\n\t// https://tc39.es/ecma262/#sec-function-instances-name\n\tif (descriptors && !(NAME in FunctionPrototype)) {\n\t  defineProperty$2(FunctionPrototype, NAME, {\n\t    configurable: true,\n\t    get: function () {\n\t      try {\n\t        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n\t      } catch (error) {\n\t        return '';\n\t      }\n\t    }\n\t  });\n\t}\n\n\tvar correctPrototypeGetter = !fails(function () {\n\t  function F() { /* empty */ }\n\t  F.prototype.constructor = null;\n\t  return Object.getPrototypeOf(new F()) !== F.prototype;\n\t});\n\n\tvar IE_PROTO = sharedKey('IE_PROTO');\n\tvar ObjectPrototype = Object.prototype;\n\n\t// `Object.getPrototypeOf` method\n\t// https://tc39.es/ecma262/#sec-object.getprototypeof\n\tvar objectGetPrototypeOf = correctPrototypeGetter ? Object.getPrototypeOf : function (O) {\n\t  O = toObject(O);\n\t  if (has(O, IE_PROTO)) return O[IE_PROTO];\n\t  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n\t    return O.constructor.prototype;\n\t  } return O instanceof Object ? ObjectPrototype : null;\n\t};\n\n\tvar FAILS_ON_PRIMITIVES$1 = fails(function () { objectGetPrototypeOf(1); });\n\n\t// `Object.getPrototypeOf` method\n\t// https://tc39.es/ecma262/#sec-object.getprototypeof\n\t_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$1, sham: !correctPrototypeGetter }, {\n\t  getPrototypeOf: function getPrototypeOf(it) {\n\t    return objectGetPrototypeOf(toObject(it));\n\t  }\n\t});\n\n\t// `Reflect.ownKeys` method\n\t// https://tc39.es/ecma262/#sec-reflect.ownkeys\n\t_export({ target: 'Reflect', stat: true }, {\n\t  ownKeys: ownKeys\n\t});\n\n\tvar domain; // This constructor is used to store event handlers. Instantiating this is\n\t// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n\t// object (tested with v8 v4.9).\n\n\tfunction EventHandlers() {}\n\n\tEventHandlers.prototype = Object.create(null);\n\n\tfunction EventEmitter() {\n\t  EventEmitter.init.call(this);\n\t}\n\t// require('events') === require('events').EventEmitter\n\n\tEventEmitter.EventEmitter = EventEmitter;\n\tEventEmitter.usingDomains = false;\n\tEventEmitter.prototype.domain = undefined;\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\n\tEventEmitter.defaultMaxListeners = 10;\n\n\tEventEmitter.init = function () {\n\t  this.domain = null;\n\n\t  if (EventEmitter.usingDomains) {\n\t    // if there is an active domain, then attach to it.\n\t    if (domain.active ) ;\n\t  }\n\n\t  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n\t    this._events = new EventHandlers();\n\t    this._eventsCount = 0;\n\t  }\n\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}; // Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\n\n\tEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n\t  if (typeof n !== 'number' || n < 0 || isNaN(n)) throw new TypeError('\"n\" argument must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\n\tfunction $getMaxListeners(that) {\n\t  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n\t  return that._maxListeners;\n\t}\n\n\tEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n\t  return $getMaxListeners(this);\n\t}; // These standalone emit* functions are used to optimize calling of event\n\t// handlers for fast cases because emit() itself often has a variable number of\n\t// arguments and can be deoptimized because of that. These functions always have\n\t// the same number of arguments and thus do not get deoptimized, so the code\n\t// inside them can execute faster.\n\n\n\tfunction emitNone(handler, isFn, self) {\n\t  if (isFn) handler.call(self);else {\n\t    var len = handler.length;\n\t    var listeners = arrayClone(handler, len);\n\n\t    for (var i = 0; i < len; ++i) {\n\t      listeners[i].call(self);\n\t    }\n\t  }\n\t}\n\n\tfunction emitOne(handler, isFn, self, arg1) {\n\t  if (isFn) handler.call(self, arg1);else {\n\t    var len = handler.length;\n\t    var listeners = arrayClone(handler, len);\n\n\t    for (var i = 0; i < len; ++i) {\n\t      listeners[i].call(self, arg1);\n\t    }\n\t  }\n\t}\n\n\tfunction emitTwo(handler, isFn, self, arg1, arg2) {\n\t  if (isFn) handler.call(self, arg1, arg2);else {\n\t    var len = handler.length;\n\t    var listeners = arrayClone(handler, len);\n\n\t    for (var i = 0; i < len; ++i) {\n\t      listeners[i].call(self, arg1, arg2);\n\t    }\n\t  }\n\t}\n\n\tfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n\t  if (isFn) handler.call(self, arg1, arg2, arg3);else {\n\t    var len = handler.length;\n\t    var listeners = arrayClone(handler, len);\n\n\t    for (var i = 0; i < len; ++i) {\n\t      listeners[i].call(self, arg1, arg2, arg3);\n\t    }\n\t  }\n\t}\n\n\tfunction emitMany(handler, isFn, self, args) {\n\t  if (isFn) handler.apply(self, args);else {\n\t    var len = handler.length;\n\t    var listeners = arrayClone(handler, len);\n\n\t    for (var i = 0; i < len; ++i) {\n\t      listeners[i].apply(self, args);\n\t    }\n\t  }\n\t}\n\n\tEventEmitter.prototype.emit = function emit(type) {\n\t  var er, handler, len, args, i, events, domain;\n\t  var doError = type === 'error';\n\t  events = this._events;\n\t  if (events) doError = doError && events.error == null;else if (!doError) return false;\n\t  domain = this.domain; // If there is no 'error' event listener then throw.\n\n\t  if (doError) {\n\t    er = arguments[1];\n\n\t    if (domain) {\n\t      if (!er) er = new Error('Uncaught, unspecified \"error\" event');\n\t      er.domainEmitter = this;\n\t      er.domain = domain;\n\t      er.domainThrown = false;\n\t      domain.emit('error', er);\n\t    } else if (er instanceof Error) {\n\t      throw er; // Unhandled 'error' event\n\t    } else {\n\t      // At least give some kind of context to the user\n\t      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t      err.context = er;\n\t      throw err;\n\t    }\n\n\t    return false;\n\t  }\n\n\t  handler = events[type];\n\t  if (!handler) return false;\n\t  var isFn = typeof handler === 'function';\n\t  len = arguments.length;\n\n\t  switch (len) {\n\t    // fast cases\n\t    case 1:\n\t      emitNone(handler, isFn, this);\n\t      break;\n\n\t    case 2:\n\t      emitOne(handler, isFn, this, arguments[1]);\n\t      break;\n\n\t    case 3:\n\t      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n\t      break;\n\n\t    case 4:\n\t      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n\t      break;\n\t    // slower\n\n\t    default:\n\t      args = new Array(len - 1);\n\n\t      for (i = 1; i < len; i++) {\n\t        args[i - 1] = arguments[i];\n\t      }\n\n\t      emitMany(handler, isFn, this, args);\n\t  }\n\t  return true;\n\t};\n\n\tfunction _addListener(target, type, listener, prepend) {\n\t  var m;\n\t  var events;\n\t  var existing;\n\t  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t  events = target._events;\n\n\t  if (!events) {\n\t    events = target._events = new EventHandlers();\n\t    target._eventsCount = 0;\n\t  } else {\n\t    // To avoid recursion in the case that type === \"newListener\"! Before\n\t    // adding it to the listeners, first emit \"newListener\".\n\t    if (events.newListener) {\n\t      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n\t      // this._events to be assigned to a new object\n\n\t      events = target._events;\n\t    }\n\n\t    existing = events[type];\n\t  }\n\n\t  if (!existing) {\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    existing = events[type] = listener;\n\t    ++target._eventsCount;\n\t  } else {\n\t    if (typeof existing === 'function') {\n\t      // Adding the second element, need to change to array.\n\t      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n\t    } else {\n\t      // If we've already got an array, just append.\n\t      if (prepend) {\n\t        existing.unshift(listener);\n\t      } else {\n\t        existing.push(listener);\n\t      }\n\t    } // Check for listener leak\n\n\n\t    if (!existing.warned) {\n\t      m = $getMaxListeners(target);\n\n\t      if (m && m > 0 && existing.length > m) {\n\t        existing.warned = true;\n\t        var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + type + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit');\n\t        w.name = 'MaxListenersExceededWarning';\n\t        w.emitter = target;\n\t        w.type = type;\n\t        w.count = existing.length;\n\t        emitWarning(w);\n\t      }\n\t    }\n\t  }\n\n\t  return target;\n\t}\n\n\tfunction emitWarning(e) {\n\t  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n\t}\n\n\tEventEmitter.prototype.addListener = function addListener(type, listener) {\n\t  return _addListener(this, type, listener, false);\n\t};\n\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n\tEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n\t  return _addListener(this, type, listener, true);\n\t};\n\n\tfunction _onceWrap(target, type, listener) {\n\t  var fired = false;\n\n\t  function g() {\n\t    target.removeListener(type, g);\n\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(target, arguments);\n\t    }\n\t  }\n\n\t  g.listener = listener;\n\t  return g;\n\t}\n\n\tEventEmitter.prototype.once = function once(type, listener) {\n\t  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t  this.on(type, _onceWrap(this, type, listener));\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n\t  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t  this.prependListener(type, _onceWrap(this, type, listener));\n\t  return this;\n\t}; // emits a 'removeListener' event iff the listener was removed\n\n\n\tEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n\t  var list, events, position, i, originalListener;\n\t  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n\t  events = this._events;\n\t  if (!events) return this;\n\t  list = events[type];\n\t  if (!list) return this;\n\n\t  if (list === listener || list.listener && list.listener === listener) {\n\t    if (--this._eventsCount === 0) this._events = new EventHandlers();else {\n\t      delete events[type];\n\t      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n\t    }\n\t  } else if (typeof list !== 'function') {\n\t    position = -1;\n\n\t    for (i = list.length; i-- > 0;) {\n\t      if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n\t        originalListener = list[i].listener;\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\n\t    if (position < 0) return this;\n\n\t    if (list.length === 1) {\n\t      list[0] = undefined;\n\n\t      if (--this._eventsCount === 0) {\n\t        this._events = new EventHandlers();\n\t        return this;\n\t      } else {\n\t        delete events[type];\n\t      }\n\t    } else {\n\t      spliceOne(list, position);\n\t    }\n\n\t    if (events.removeListener) this.emit('removeListener', type, originalListener || listener);\n\t  }\n\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n\t  var listeners, events;\n\t  events = this._events;\n\t  if (!events) return this; // not listening for removeListener, no need to emit\n\n\t  if (!events.removeListener) {\n\t    if (arguments.length === 0) {\n\t      this._events = new EventHandlers();\n\t      this._eventsCount = 0;\n\t    } else if (events[type]) {\n\t      if (--this._eventsCount === 0) this._events = new EventHandlers();else delete events[type];\n\t    }\n\n\t    return this;\n\t  } // emit removeListener for all listeners on all events\n\n\n\t  if (arguments.length === 0) {\n\t    var keys = Object.keys(events);\n\n\t    for (var i = 0, key; i < keys.length; ++i) {\n\t      key = keys[i];\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\n\t    this.removeAllListeners('removeListener');\n\t    this._events = new EventHandlers();\n\t    this._eventsCount = 0;\n\t    return this;\n\t  }\n\n\t  listeners = events[type];\n\n\t  if (typeof listeners === 'function') {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    do {\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t    } while (listeners[0]);\n\t  }\n\n\t  return this;\n\t};\n\n\tEventEmitter.prototype.listeners = function listeners(type) {\n\t  var evlistener;\n\t  var ret;\n\t  var events = this._events;\n\t  if (!events) ret = [];else {\n\t    evlistener = events[type];\n\t    if (!evlistener) ret = [];else if (typeof evlistener === 'function') ret = [evlistener.listener || evlistener];else ret = unwrapListeners(evlistener);\n\t  }\n\t  return ret;\n\t};\n\n\tEventEmitter.listenerCount = function (emitter, type) {\n\t  if (typeof emitter.listenerCount === 'function') {\n\t    return emitter.listenerCount(type);\n\t  } else {\n\t    return listenerCount.call(emitter, type);\n\t  }\n\t};\n\n\tEventEmitter.prototype.listenerCount = listenerCount;\n\n\tfunction listenerCount(type) {\n\t  var events = this._events;\n\n\t  if (events) {\n\t    var evlistener = events[type];\n\n\t    if (typeof evlistener === 'function') {\n\t      return 1;\n\t    } else if (evlistener) {\n\t      return evlistener.length;\n\t    }\n\t  }\n\n\t  return 0;\n\t}\n\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n\t}; // About 1.5x faster than the two-arg version of Array#splice().\n\n\n\tfunction spliceOne(list, index) {\n\t  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n\t    list[i] = list[k];\n\t  }\n\n\t  list.pop();\n\t}\n\n\tfunction arrayClone(arr, i) {\n\t  var copy = new Array(i);\n\n\t  while (i--) {\n\t    copy[i] = arr[i];\n\t  }\n\n\t  return copy;\n\t}\n\n\tfunction unwrapListeners(arr) {\n\t  var ret = new Array(arr.length);\n\n\t  for (var i = 0; i < ret.length; ++i) {\n\t    ret[i] = arr[i].listener || arr[i];\n\t  }\n\n\t  return ret;\n\t}\n\n\tvar nativeJoin = [].join;\n\n\tvar ES3_STRINGS = indexedObject != Object;\n\tvar STRICT_METHOD$1 = arrayMethodIsStrict('join', ',');\n\n\t// `Array.prototype.join` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.join\n\t_export({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD$1 }, {\n\t  join: function join(separator) {\n\t    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n\t  }\n\t});\n\n\tvar $map = arrayIteration.map;\n\n\n\n\tvar HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport('map');\n\t// FF49- issue\n\tvar USES_TO_LENGTH$3 = arrayMethodUsesToLength('map');\n\n\t// `Array.prototype.map` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.map\n\t// with adding support of @@species\n\t_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$2 || !USES_TO_LENGTH$3 }, {\n\t  map: function map(callbackfn /* , thisArg */) {\n\t    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar aPossiblePrototype = function (it) {\n\t  if (!isObject(it) && it !== null) {\n\t    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n\t  } return it;\n\t};\n\n\t// `Object.setPrototypeOf` method\n\t// https://tc39.es/ecma262/#sec-object.setprototypeof\n\t// Works with __proto__ only. Old v8 can't work with null proto objects.\n\t/* eslint-disable no-proto */\n\tvar objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n\t  var CORRECT_SETTER = false;\n\t  var test = {};\n\t  var setter;\n\t  try {\n\t    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n\t    setter.call(test, []);\n\t    CORRECT_SETTER = test instanceof Array;\n\t  } catch (error) { /* empty */ }\n\t  return function setPrototypeOf(O, proto) {\n\t    anObject(O);\n\t    aPossiblePrototype(proto);\n\t    if (CORRECT_SETTER) setter.call(O, proto);\n\t    else O.__proto__ = proto;\n\t    return O;\n\t  };\n\t}() : undefined);\n\n\t// makes subclassing work correct for wrapped built-ins\n\tvar inheritIfRequired = function ($this, dummy, Wrapper) {\n\t  var NewTarget, NewTargetPrototype;\n\t  if (\n\t    // it can work only with native `setPrototypeOf`\n\t    objectSetPrototypeOf &&\n\t    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n\t    typeof (NewTarget = dummy.constructor) == 'function' &&\n\t    NewTarget !== Wrapper &&\n\t    isObject(NewTargetPrototype = NewTarget.prototype) &&\n\t    NewTargetPrototype !== Wrapper.prototype\n\t  ) objectSetPrototypeOf($this, NewTargetPrototype);\n\t  return $this;\n\t};\n\n\t// `Object.defineProperties` method\n\t// https://tc39.es/ecma262/#sec-object.defineproperties\n\tvar objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var keys = objectKeys(Properties);\n\t  var length = keys.length;\n\t  var index = 0;\n\t  var key;\n\t  while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);\n\t  return O;\n\t};\n\n\tvar html = getBuiltIn('document', 'documentElement');\n\n\tvar GT = '>';\n\tvar LT = '<';\n\tvar PROTOTYPE = 'prototype';\n\tvar SCRIPT = 'script';\n\tvar IE_PROTO$1 = sharedKey('IE_PROTO');\n\n\tvar EmptyConstructor = function () { /* empty */ };\n\n\tvar scriptTag = function (content) {\n\t  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n\t};\n\n\t// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\n\tvar NullProtoObjectViaActiveX = function (activeXDocument) {\n\t  activeXDocument.write(scriptTag(''));\n\t  activeXDocument.close();\n\t  var temp = activeXDocument.parentWindow.Object;\n\t  activeXDocument = null; // avoid memory leak\n\t  return temp;\n\t};\n\n\t// Create object with fake `null` prototype: use iframe Object with cleared prototype\n\tvar NullProtoObjectViaIFrame = function () {\n\t  // Thrash, waste and sodomy: IE GC bug\n\t  var iframe = documentCreateElement('iframe');\n\t  var JS = 'java' + SCRIPT + ':';\n\t  var iframeDocument;\n\t  iframe.style.display = 'none';\n\t  html.appendChild(iframe);\n\t  // https://github.com/zloirock/core-js/issues/475\n\t  iframe.src = String(JS);\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(scriptTag('document.F=Object'));\n\t  iframeDocument.close();\n\t  return iframeDocument.F;\n\t};\n\n\t// Check for document.domain and active x support\n\t// No need to use active x approach when document.domain is not set\n\t// see https://github.com/es-shims/es5-shim/issues/150\n\t// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n\t// avoid IE GC bug\n\tvar activeXDocument;\n\tvar NullProtoObject = function () {\n\t  try {\n\t    /* global ActiveXObject */\n\t    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n\t  } catch (error) { /* ignore */ }\n\t  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n\t  var length = enumBugKeys.length;\n\t  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n\t  return NullProtoObject();\n\t};\n\n\thiddenKeys[IE_PROTO$1] = true;\n\n\t// `Object.create` method\n\t// https://tc39.es/ecma262/#sec-object.create\n\tvar objectCreate = Object.create || function create(O, Properties) {\n\t  var result;\n\t  if (O !== null) {\n\t    EmptyConstructor[PROTOTYPE] = anObject(O);\n\t    result = new EmptyConstructor();\n\t    EmptyConstructor[PROTOTYPE] = null;\n\t    // add \"__proto__\" for Object.getPrototypeOf polyfill\n\t    result[IE_PROTO$1] = O;\n\t  } else result = NullProtoObject();\n\t  return Properties === undefined ? result : objectDefineProperties(result, Properties);\n\t};\n\n\t// a string of all valid unicode whitespaces\n\t// eslint-disable-next-line max-len\n\tvar whitespaces = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\n\tvar whitespace = '[' + whitespaces + ']';\n\tvar ltrim = RegExp('^' + whitespace + whitespace + '*');\n\tvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n\t// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\n\tvar createMethod$2 = function (TYPE) {\n\t  return function ($this) {\n\t    var string = String(requireObjectCoercible($this));\n\t    if (TYPE & 1) string = string.replace(ltrim, '');\n\t    if (TYPE & 2) string = string.replace(rtrim, '');\n\t    return string;\n\t  };\n\t};\n\n\tvar stringTrim = {\n\t  // `String.prototype.{ trimLeft, trimStart }` methods\n\t  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n\t  start: createMethod$2(1),\n\t  // `String.prototype.{ trimRight, trimEnd }` methods\n\t  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n\t  end: createMethod$2(2),\n\t  // `String.prototype.trim` method\n\t  // https://tc39.es/ecma262/#sec-string.prototype.trim\n\t  trim: createMethod$2(3)\n\t};\n\n\tvar getOwnPropertyNames = objectGetOwnPropertyNames.f;\n\tvar getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;\n\tvar defineProperty$3 = objectDefineProperty.f;\n\tvar trim = stringTrim.trim;\n\n\tvar NUMBER = 'Number';\n\tvar NativeNumber = global_1[NUMBER];\n\tvar NumberPrototype = NativeNumber.prototype;\n\n\t// Opera ~12 has broken Object#toString\n\tvar BROKEN_CLASSOF = classofRaw(objectCreate(NumberPrototype)) == NUMBER;\n\n\t// `ToNumber` abstract operation\n\t// https://tc39.es/ecma262/#sec-tonumber\n\tvar toNumber = function (argument) {\n\t  var it = toPrimitive(argument, false);\n\t  var first, third, radix, maxCode, digits, length, index, code;\n\t  if (typeof it == 'string' && it.length > 2) {\n\t    it = trim(it);\n\t    first = it.charCodeAt(0);\n\t    if (first === 43 || first === 45) {\n\t      third = it.charCodeAt(2);\n\t      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n\t    } else if (first === 48) {\n\t      switch (it.charCodeAt(1)) {\n\t        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n\t        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n\t        default: return +it;\n\t      }\n\t      digits = it.slice(2);\n\t      length = digits.length;\n\t      for (index = 0; index < length; index++) {\n\t        code = digits.charCodeAt(index);\n\t        // parseInt parses a string to a first unavailable symbol\n\t        // but ToNumber should return NaN if a string contains unavailable symbols\n\t        if (code < 48 || code > maxCode) return NaN;\n\t      } return parseInt(digits, radix);\n\t    }\n\t  } return +it;\n\t};\n\n\t// `Number` constructor\n\t// https://tc39.es/ecma262/#sec-number-constructor\n\tif (isForced_1(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n\t  var NumberWrapper = function Number(value) {\n\t    var it = arguments.length < 1 ? 0 : value;\n\t    var dummy = this;\n\t    return dummy instanceof NumberWrapper\n\t      // check on 1..constructor(foo) case\n\t      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classofRaw(dummy) != NUMBER)\n\t        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n\t  };\n\t  for (var keys$1 = descriptors ? getOwnPropertyNames(NativeNumber) : (\n\t    // ES3:\n\t    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n\t    // ES2015 (in case, if modules with ES2015 Number statics required before):\n\t    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n\t    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n\t    // ESNext\n\t    'fromString,range'\n\t  ).split(','), j = 0, key; keys$1.length > j; j++) {\n\t    if (has(NativeNumber, key = keys$1[j]) && !has(NumberWrapper, key)) {\n\t      defineProperty$3(NumberWrapper, key, getOwnPropertyDescriptor$2(NativeNumber, key));\n\t    }\n\t  }\n\t  NumberWrapper.prototype = NumberPrototype;\n\t  NumberPrototype.constructor = NumberWrapper;\n\t  redefine(global_1, NUMBER, NumberWrapper);\n\t}\n\n\tvar nativeGetOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\n\n\n\tvar FAILS_ON_PRIMITIVES$2 = fails(function () { nativeGetOwnPropertyDescriptor$1(1); });\n\tvar FORCED$1 = !descriptors || FAILS_ON_PRIMITIVES$2;\n\n\t// `Object.getOwnPropertyDescriptor` method\n\t// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n\t_export({ target: 'Object', stat: true, forced: FORCED$1, sham: !descriptors }, {\n\t  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n\t    return nativeGetOwnPropertyDescriptor$1(toIndexedObject(it), key);\n\t  }\n\t});\n\n\tvar nativeGetOwnPropertyNames = objectGetOwnPropertyNames.f;\n\n\tvar toString$1 = {}.toString;\n\n\tvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n\t  ? Object.getOwnPropertyNames(window) : [];\n\n\tvar getWindowNames = function (it) {\n\t  try {\n\t    return nativeGetOwnPropertyNames(it);\n\t  } catch (error) {\n\t    return windowNames.slice();\n\t  }\n\t};\n\n\t// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\tvar f$5 = function getOwnPropertyNames(it) {\n\t  return windowNames && toString$1.call(it) == '[object Window]'\n\t    ? getWindowNames(it)\n\t    : nativeGetOwnPropertyNames(toIndexedObject(it));\n\t};\n\n\tvar objectGetOwnPropertyNamesExternal = {\n\t\tf: f$5\n\t};\n\n\tvar nativeGetOwnPropertyNames$1 = objectGetOwnPropertyNamesExternal.f;\n\n\tvar FAILS_ON_PRIMITIVES$3 = fails(function () { return !Object.getOwnPropertyNames(1); });\n\n\t// `Object.getOwnPropertyNames` method\n\t// https://tc39.es/ecma262/#sec-object.getownpropertynames\n\t_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$3 }, {\n\t  getOwnPropertyNames: nativeGetOwnPropertyNames$1\n\t});\n\n\tvar MATCH = wellKnownSymbol('match');\n\n\t// `IsRegExp` abstract operation\n\t// https://tc39.es/ecma262/#sec-isregexp\n\tvar isRegexp = function (it) {\n\t  var isRegExp;\n\t  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classofRaw(it) == 'RegExp');\n\t};\n\n\tvar SPECIES$3 = wellKnownSymbol('species');\n\n\tvar setSpecies = function (CONSTRUCTOR_NAME) {\n\t  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n\t  var defineProperty = objectDefineProperty.f;\n\n\t  if (descriptors && Constructor && !Constructor[SPECIES$3]) {\n\t    defineProperty(Constructor, SPECIES$3, {\n\t      configurable: true,\n\t      get: function () { return this; }\n\t    });\n\t  }\n\t};\n\n\tvar defineProperty$4 = objectDefineProperty.f;\n\tvar getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;\n\n\n\n\n\n\tvar setInternalState = internalState.set;\n\n\n\n\tvar MATCH$1 = wellKnownSymbol('match');\n\tvar NativeRegExp = global_1.RegExp;\n\tvar RegExpPrototype$1 = NativeRegExp.prototype;\n\tvar re1 = /a/g;\n\tvar re2 = /a/g;\n\n\t// \"new\" should create a new object, old webkit bug\n\tvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\n\tvar UNSUPPORTED_Y$2 = regexpStickyHelpers.UNSUPPORTED_Y;\n\n\tvar FORCED$2 = descriptors && isForced_1('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y$2 || fails(function () {\n\t  re2[MATCH$1] = false;\n\t  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n\t  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n\t})));\n\n\t// `RegExp` constructor\n\t// https://tc39.es/ecma262/#sec-regexp-constructor\n\tif (FORCED$2) {\n\t  var RegExpWrapper = function RegExp(pattern, flags) {\n\t    var thisIsRegExp = this instanceof RegExpWrapper;\n\t    var patternIsRegExp = isRegexp(pattern);\n\t    var flagsAreUndefined = flags === undefined;\n\t    var sticky;\n\n\t    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n\t      return pattern;\n\t    }\n\n\t    if (CORRECT_NEW) {\n\t      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n\t    } else if (pattern instanceof RegExpWrapper) {\n\t      if (flagsAreUndefined) flags = regexpFlags.call(pattern);\n\t      pattern = pattern.source;\n\t    }\n\n\t    if (UNSUPPORTED_Y$2) {\n\t      sticky = !!flags && flags.indexOf('y') > -1;\n\t      if (sticky) flags = flags.replace(/y/g, '');\n\t    }\n\n\t    var result = inheritIfRequired(\n\t      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n\t      thisIsRegExp ? this : RegExpPrototype$1,\n\t      RegExpWrapper\n\t    );\n\n\t    if (UNSUPPORTED_Y$2 && sticky) setInternalState(result, { sticky: sticky });\n\n\t    return result;\n\t  };\n\t  var proxy = function (key) {\n\t    key in RegExpWrapper || defineProperty$4(RegExpWrapper, key, {\n\t      configurable: true,\n\t      get: function () { return NativeRegExp[key]; },\n\t      set: function (it) { NativeRegExp[key] = it; }\n\t    });\n\t  };\n\t  var keys$2 = getOwnPropertyNames$1(NativeRegExp);\n\t  var index = 0;\n\t  while (keys$2.length > index) proxy(keys$2[index++]);\n\t  RegExpPrototype$1.constructor = RegExpWrapper;\n\t  RegExpWrapper.prototype = RegExpPrototype$1;\n\t  redefine(global_1, 'RegExp', RegExpWrapper);\n\t}\n\n\t// https://tc39.es/ecma262/#sec-get-regexp-@@species\n\tsetSpecies('RegExp');\n\n\t// `String.prototype.{ codePointAt, at }` methods implementation\n\tvar createMethod$3 = function (CONVERT_TO_STRING) {\n\t  return function ($this, pos) {\n\t    var S = String(requireObjectCoercible($this));\n\t    var position = toInteger(pos);\n\t    var size = S.length;\n\t    var first, second;\n\t    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n\t    first = S.charCodeAt(position);\n\t    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n\t      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n\t        ? CONVERT_TO_STRING ? S.charAt(position) : first\n\t        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n\t  };\n\t};\n\n\tvar stringMultibyte = {\n\t  // `String.prototype.codePointAt` method\n\t  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n\t  codeAt: createMethod$3(false),\n\t  // `String.prototype.at` method\n\t  // https://github.com/mathiasbynens/String.prototype.at\n\t  charAt: createMethod$3(true)\n\t};\n\n\tvar charAt = stringMultibyte.charAt;\n\n\t// `AdvanceStringIndex` abstract operation\n\t// https://tc39.es/ecma262/#sec-advancestringindex\n\tvar advanceStringIndex = function (S, index, unicode) {\n\t  return index + (unicode ? charAt(S, index).length : 1);\n\t};\n\n\t// @@match logic\n\tfixRegexpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n\t  return [\n\t    // `String.prototype.match` method\n\t    // https://tc39.es/ecma262/#sec-string.prototype.match\n\t    function match(regexp) {\n\t      var O = requireObjectCoercible(this);\n\t      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n\t      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n\t    },\n\t    // `RegExp.prototype[@@match]` method\n\t    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n\t    function (regexp) {\n\t      var res = maybeCallNative(nativeMatch, regexp, this);\n\t      if (res.done) return res.value;\n\n\t      var rx = anObject(regexp);\n\t      var S = String(this);\n\n\t      if (!rx.global) return regexpExecAbstract(rx, S);\n\n\t      var fullUnicode = rx.unicode;\n\t      rx.lastIndex = 0;\n\t      var A = [];\n\t      var n = 0;\n\t      var result;\n\t      while ((result = regexpExecAbstract(rx, S)) !== null) {\n\t        var matchStr = String(result[0]);\n\t        A[n] = matchStr;\n\t        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n\t        n++;\n\t      }\n\t      return n === 0 ? null : A;\n\t    }\n\t  ];\n\t});\n\n\tvar floor$1 = Math.floor;\n\tvar replace = ''.replace;\n\tvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\n\tvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n\t// https://tc39.es/ecma262/#sec-getsubstitution\n\tvar getSubstitution = function (matched, str, position, captures, namedCaptures, replacement) {\n\t  var tailPos = position + matched.length;\n\t  var m = captures.length;\n\t  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n\t  if (namedCaptures !== undefined) {\n\t    namedCaptures = toObject(namedCaptures);\n\t    symbols = SUBSTITUTION_SYMBOLS;\n\t  }\n\t  return replace.call(replacement, symbols, function (match, ch) {\n\t    var capture;\n\t    switch (ch.charAt(0)) {\n\t      case '$': return '$';\n\t      case '&': return matched;\n\t      case '`': return str.slice(0, position);\n\t      case \"'\": return str.slice(tailPos);\n\t      case '<':\n\t        capture = namedCaptures[ch.slice(1, -1)];\n\t        break;\n\t      default: // \\d\\d?\n\t        var n = +ch;\n\t        if (n === 0) return match;\n\t        if (n > m) {\n\t          var f = floor$1(n / 10);\n\t          if (f === 0) return match;\n\t          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n\t          return match;\n\t        }\n\t        capture = captures[n - 1];\n\t    }\n\t    return capture === undefined ? '' : capture;\n\t  });\n\t};\n\n\tvar max$2 = Math.max;\n\tvar min$3 = Math.min;\n\n\tvar maybeToString = function (it) {\n\t  return it === undefined ? it : String(it);\n\t};\n\n\t// @@replace logic\n\tfixRegexpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n\t  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n\t  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n\t  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n\t  return [\n\t    // `String.prototype.replace` method\n\t    // https://tc39.es/ecma262/#sec-string.prototype.replace\n\t    function replace(searchValue, replaceValue) {\n\t      var O = requireObjectCoercible(this);\n\t      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n\t      return replacer !== undefined\n\t        ? replacer.call(searchValue, O, replaceValue)\n\t        : nativeReplace.call(String(O), searchValue, replaceValue);\n\t    },\n\t    // `RegExp.prototype[@@replace]` method\n\t    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n\t    function (regexp, replaceValue) {\n\t      if (\n\t        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n\t        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n\t      ) {\n\t        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n\t        if (res.done) return res.value;\n\t      }\n\n\t      var rx = anObject(regexp);\n\t      var S = String(this);\n\n\t      var functionalReplace = typeof replaceValue === 'function';\n\t      if (!functionalReplace) replaceValue = String(replaceValue);\n\n\t      var global = rx.global;\n\t      if (global) {\n\t        var fullUnicode = rx.unicode;\n\t        rx.lastIndex = 0;\n\t      }\n\t      var results = [];\n\t      while (true) {\n\t        var result = regexpExecAbstract(rx, S);\n\t        if (result === null) break;\n\n\t        results.push(result);\n\t        if (!global) break;\n\n\t        var matchStr = String(result[0]);\n\t        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n\t      }\n\n\t      var accumulatedResult = '';\n\t      var nextSourcePosition = 0;\n\t      for (var i = 0; i < results.length; i++) {\n\t        result = results[i];\n\n\t        var matched = String(result[0]);\n\t        var position = max$2(min$3(toInteger(result.index), S.length), 0);\n\t        var captures = [];\n\t        // NOTE: This is equivalent to\n\t        //   captures = result.slice(1).map(maybeToString)\n\t        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n\t        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n\t        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n\t        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n\t        var namedCaptures = result.groups;\n\t        if (functionalReplace) {\n\t          var replacerArgs = [matched].concat(captures, position, S);\n\t          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n\t          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n\t        } else {\n\t          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n\t        }\n\t        if (position >= nextSourcePosition) {\n\t          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n\t          nextSourcePosition = position + matched.length;\n\t        }\n\t      }\n\t      return accumulatedResult + S.slice(nextSourcePosition);\n\t    }\n\t  ];\n\t});\n\n\tvar SPECIES$4 = wellKnownSymbol('species');\n\n\t// `SpeciesConstructor` abstract operation\n\t// https://tc39.es/ecma262/#sec-speciesconstructor\n\tvar speciesConstructor = function (O, defaultConstructor) {\n\t  var C = anObject(O).constructor;\n\t  var S;\n\t  return C === undefined || (S = anObject(C)[SPECIES$4]) == undefined ? defaultConstructor : aFunction$1(S);\n\t};\n\n\tvar arrayPush = [].push;\n\tvar min$4 = Math.min;\n\tvar MAX_UINT32 = 0xFFFFFFFF;\n\n\t// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\n\tvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n\t// @@split logic\n\tfixRegexpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n\t  var internalSplit;\n\t  if (\n\t    'abbc'.split(/(b)*/)[1] == 'c' ||\n\t    'test'.split(/(?:)/, -1).length != 4 ||\n\t    'ab'.split(/(?:ab)*/).length != 2 ||\n\t    '.'.split(/(.?)(.?)/).length != 4 ||\n\t    '.'.split(/()()/).length > 1 ||\n\t    ''.split(/.?/).length\n\t  ) {\n\t    // based on es5-shim implementation, need to rework it\n\t    internalSplit = function (separator, limit) {\n\t      var string = String(requireObjectCoercible(this));\n\t      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n\t      if (lim === 0) return [];\n\t      if (separator === undefined) return [string];\n\t      // If `separator` is not a regex, use native split\n\t      if (!isRegexp(separator)) {\n\t        return nativeSplit.call(string, separator, lim);\n\t      }\n\t      var output = [];\n\t      var flags = (separator.ignoreCase ? 'i' : '') +\n\t                  (separator.multiline ? 'm' : '') +\n\t                  (separator.unicode ? 'u' : '') +\n\t                  (separator.sticky ? 'y' : '');\n\t      var lastLastIndex = 0;\n\t      // Make `global` and avoid `lastIndex` issues by working with a copy\n\t      var separatorCopy = new RegExp(separator.source, flags + 'g');\n\t      var match, lastIndex, lastLength;\n\t      while (match = regexpExec.call(separatorCopy, string)) {\n\t        lastIndex = separatorCopy.lastIndex;\n\t        if (lastIndex > lastLastIndex) {\n\t          output.push(string.slice(lastLastIndex, match.index));\n\t          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n\t          lastLength = match[0].length;\n\t          lastLastIndex = lastIndex;\n\t          if (output.length >= lim) break;\n\t        }\n\t        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n\t      }\n\t      if (lastLastIndex === string.length) {\n\t        if (lastLength || !separatorCopy.test('')) output.push('');\n\t      } else output.push(string.slice(lastLastIndex));\n\t      return output.length > lim ? output.slice(0, lim) : output;\n\t    };\n\t  // Chakra, V8\n\t  } else if ('0'.split(undefined, 0).length) {\n\t    internalSplit = function (separator, limit) {\n\t      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n\t    };\n\t  } else internalSplit = nativeSplit;\n\n\t  return [\n\t    // `String.prototype.split` method\n\t    // https://tc39.es/ecma262/#sec-string.prototype.split\n\t    function split(separator, limit) {\n\t      var O = requireObjectCoercible(this);\n\t      var splitter = separator == undefined ? undefined : separator[SPLIT];\n\t      return splitter !== undefined\n\t        ? splitter.call(separator, O, limit)\n\t        : internalSplit.call(String(O), separator, limit);\n\t    },\n\t    // `RegExp.prototype[@@split]` method\n\t    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n\t    //\n\t    // NOTE: This cannot be properly polyfilled in engines that don't support\n\t    // the 'y' flag.\n\t    function (regexp, limit) {\n\t      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n\t      if (res.done) return res.value;\n\n\t      var rx = anObject(regexp);\n\t      var S = String(this);\n\t      var C = speciesConstructor(rx, RegExp);\n\n\t      var unicodeMatching = rx.unicode;\n\t      var flags = (rx.ignoreCase ? 'i' : '') +\n\t                  (rx.multiline ? 'm' : '') +\n\t                  (rx.unicode ? 'u' : '') +\n\t                  (SUPPORTS_Y ? 'y' : 'g');\n\n\t      // ^(? + rx + ) is needed, in combination with some S slicing, to\n\t      // simulate the 'y' flag.\n\t      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n\t      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n\t      if (lim === 0) return [];\n\t      if (S.length === 0) return regexpExecAbstract(splitter, S) === null ? [S] : [];\n\t      var p = 0;\n\t      var q = 0;\n\t      var A = [];\n\t      while (q < S.length) {\n\t        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n\t        var z = regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\n\t        var e;\n\t        if (\n\t          z === null ||\n\t          (e = min$4(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n\t        ) {\n\t          q = advanceStringIndex(S, q, unicodeMatching);\n\t        } else {\n\t          A.push(S.slice(p, q));\n\t          if (A.length === lim) return A;\n\t          for (var i = 1; i <= z.length - 1; i++) {\n\t            A.push(z[i]);\n\t            if (A.length === lim) return A;\n\t          }\n\t          q = p = e;\n\t        }\n\t      }\n\t      A.push(S.slice(p));\n\t      return A;\n\t    }\n\t  ];\n\t}, !SUPPORTS_Y);\n\n\tfunction _typeof(obj) {\n\t  \"@babel/helpers - typeof\";\n\n\t  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n\t    _typeof = function (obj) {\n\t      return typeof obj;\n\t    };\n\t  } else {\n\t    _typeof = function (obj) {\n\t      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n\t    };\n\t  }\n\n\t  return _typeof(obj);\n\t}\n\n\tfunction _asyncIterator(iterable) {\n\t  var method;\n\n\t  if (typeof Symbol !== \"undefined\") {\n\t    if (Symbol.asyncIterator) {\n\t      method = iterable[Symbol.asyncIterator];\n\t      if (method != null) return method.call(iterable);\n\t    }\n\n\t    if (Symbol.iterator) {\n\t      method = iterable[Symbol.iterator];\n\t      if (method != null) return method.call(iterable);\n\t    }\n\t  }\n\n\t  throw new TypeError(\"Object is not async iterable\");\n\t}\n\n\tfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n\t  try {\n\t    var info = gen[key](arg);\n\t    var value = info.value;\n\t  } catch (error) {\n\t    reject(error);\n\t    return;\n\t  }\n\n\t  if (info.done) {\n\t    resolve(value);\n\t  } else {\n\t    Promise.resolve(value).then(_next, _throw);\n\t  }\n\t}\n\n\tfunction _asyncToGenerator(fn) {\n\t  return function () {\n\t    var self = this,\n\t        args = arguments;\n\t    return new Promise(function (resolve, reject) {\n\t      var gen = fn.apply(self, args);\n\n\t      function _next(value) {\n\t        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n\t      }\n\n\t      function _throw(err) {\n\t        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n\t      }\n\n\t      _next(undefined);\n\t    });\n\t  };\n\t}\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\n\tfunction _defineProperty(obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\n\t  return obj;\n\t}\n\n\tfunction ownKeys$1(object, enumerableOnly) {\n\t  var keys = Object.keys(object);\n\n\t  if (Object.getOwnPropertySymbols) {\n\t    var symbols = Object.getOwnPropertySymbols(object);\n\t    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n\t      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n\t    });\n\t    keys.push.apply(keys, symbols);\n\t  }\n\n\t  return keys;\n\t}\n\n\tfunction _objectSpread2(target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i] != null ? arguments[i] : {};\n\n\t    if (i % 2) {\n\t      ownKeys$1(Object(source), true).forEach(function (key) {\n\t        _defineProperty(target, key, source[key]);\n\t      });\n\t    } else if (Object.getOwnPropertyDescriptors) {\n\t      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n\t    } else {\n\t      ownKeys$1(Object(source)).forEach(function (key) {\n\t        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n\t      });\n\t    }\n\t  }\n\n\t  return target;\n\t}\n\n\tfunction _inherits(subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function\");\n\t  }\n\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) _setPrototypeOf(subClass, superClass);\n\t}\n\n\tfunction _getPrototypeOf(o) {\n\t  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n\t    return o.__proto__ || Object.getPrototypeOf(o);\n\t  };\n\t  return _getPrototypeOf(o);\n\t}\n\n\tfunction _setPrototypeOf(o, p) {\n\t  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n\t    o.__proto__ = p;\n\t    return o;\n\t  };\n\n\t  return _setPrototypeOf(o, p);\n\t}\n\n\tfunction _isNativeReflectConstruct() {\n\t  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\t  if (Reflect.construct.sham) return false;\n\t  if (typeof Proxy === \"function\") return true;\n\n\t  try {\n\t    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\n\tfunction _assertThisInitialized(self) {\n\t  if (self === void 0) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\n\t  return self;\n\t}\n\n\tfunction _possibleConstructorReturn(self, call) {\n\t  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n\t    return call;\n\t  }\n\n\t  return _assertThisInitialized(self);\n\t}\n\n\tfunction _createSuper(Derived) {\n\t  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n\t  return function _createSuperInternal() {\n\t    var Super = _getPrototypeOf(Derived),\n\t        result;\n\n\t    if (hasNativeReflectConstruct) {\n\t      var NewTarget = _getPrototypeOf(this).constructor;\n\n\t      result = Reflect.construct(Super, arguments, NewTarget);\n\t    } else {\n\t      result = Super.apply(this, arguments);\n\t    }\n\n\t    return _possibleConstructorReturn(this, result);\n\t  };\n\t}\n\n\tfunction _toConsumableArray(arr) {\n\t  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n\t}\n\n\tfunction _arrayWithoutHoles(arr) {\n\t  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n\t}\n\n\tfunction _iterableToArray(iter) {\n\t  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n\t}\n\n\tfunction _unsupportedIterableToArray(o, minLen) {\n\t  if (!o) return;\n\t  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\t  var n = Object.prototype.toString.call(o).slice(8, -1);\n\t  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n\t  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n\t  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n\t}\n\n\tfunction _arrayLikeToArray(arr, len) {\n\t  if (len == null || len > arr.length) len = arr.length;\n\n\t  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n\t  return arr2;\n\t}\n\n\tfunction _nonIterableSpread() {\n\t  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\t}\n\n\tvar f$6 = wellKnownSymbol;\n\n\tvar wellKnownSymbolWrapped = {\n\t\tf: f$6\n\t};\n\n\tvar defineProperty$5 = objectDefineProperty.f;\n\n\tvar defineWellKnownSymbol = function (NAME) {\n\t  var Symbol = path.Symbol || (path.Symbol = {});\n\t  if (!has(Symbol, NAME)) defineProperty$5(Symbol, NAME, {\n\t    value: wellKnownSymbolWrapped.f(NAME)\n\t  });\n\t};\n\n\tvar defineProperty$6 = objectDefineProperty.f;\n\n\n\n\tvar TO_STRING_TAG$2 = wellKnownSymbol('toStringTag');\n\n\tvar setToStringTag = function (it, TAG, STATIC) {\n\t  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG$2)) {\n\t    defineProperty$6(it, TO_STRING_TAG$2, { configurable: true, value: TAG });\n\t  }\n\t};\n\n\tvar $forEach$1 = arrayIteration.forEach;\n\n\tvar HIDDEN = sharedKey('hidden');\n\tvar SYMBOL = 'Symbol';\n\tvar PROTOTYPE$1 = 'prototype';\n\tvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\tvar setInternalState$1 = internalState.set;\n\tvar getInternalState = internalState.getterFor(SYMBOL);\n\tvar ObjectPrototype$1 = Object[PROTOTYPE$1];\n\tvar $Symbol = global_1.Symbol;\n\tvar $stringify = getBuiltIn('JSON', 'stringify');\n\tvar nativeGetOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;\n\tvar nativeDefineProperty$1 = objectDefineProperty.f;\n\tvar nativeGetOwnPropertyNames$2 = objectGetOwnPropertyNamesExternal.f;\n\tvar nativePropertyIsEnumerable$1 = objectPropertyIsEnumerable.f;\n\tvar AllSymbols = shared('symbols');\n\tvar ObjectPrototypeSymbols = shared('op-symbols');\n\tvar StringToSymbolRegistry = shared('string-to-symbol-registry');\n\tvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\tvar WellKnownSymbolsStore$1 = shared('wks');\n\tvar QObject = global_1.QObject;\n\t// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n\tvar USE_SETTER = !QObject || !QObject[PROTOTYPE$1] || !QObject[PROTOTYPE$1].findChild;\n\n\t// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\tvar setSymbolDescriptor = descriptors && fails(function () {\n\t  return objectCreate(nativeDefineProperty$1({}, 'a', {\n\t    get: function () { return nativeDefineProperty$1(this, 'a', { value: 7 }).a; }\n\t  })).a != 7;\n\t}) ? function (O, P, Attributes) {\n\t  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$2(ObjectPrototype$1, P);\n\t  if (ObjectPrototypeDescriptor) delete ObjectPrototype$1[P];\n\t  nativeDefineProperty$1(O, P, Attributes);\n\t  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$1) {\n\t    nativeDefineProperty$1(ObjectPrototype$1, P, ObjectPrototypeDescriptor);\n\t  }\n\t} : nativeDefineProperty$1;\n\n\tvar wrap = function (tag, description) {\n\t  var symbol = AllSymbols[tag] = objectCreate($Symbol[PROTOTYPE$1]);\n\t  setInternalState$1(symbol, {\n\t    type: SYMBOL,\n\t    tag: tag,\n\t    description: description\n\t  });\n\t  if (!descriptors) symbol.description = description;\n\t  return symbol;\n\t};\n\n\tvar isSymbol = useSymbolAsUid ? function (it) {\n\t  return typeof it == 'symbol';\n\t} : function (it) {\n\t  return Object(it) instanceof $Symbol;\n\t};\n\n\tvar $defineProperty = function defineProperty(O, P, Attributes) {\n\t  if (O === ObjectPrototype$1) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n\t  anObject(O);\n\t  var key = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (has(AllSymbols, key)) {\n\t    if (!Attributes.enumerable) {\n\t      if (!has(O, HIDDEN)) nativeDefineProperty$1(O, HIDDEN, createPropertyDescriptor(1, {}));\n\t      O[HIDDEN][key] = true;\n\t    } else {\n\t      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n\t      Attributes = objectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n\t    } return setSymbolDescriptor(O, key, Attributes);\n\t  } return nativeDefineProperty$1(O, key, Attributes);\n\t};\n\n\tvar $defineProperties = function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var properties = toIndexedObject(Properties);\n\t  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n\t  $forEach$1(keys, function (key) {\n\t    if (!descriptors || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n\t  });\n\t  return O;\n\t};\n\n\tvar $create = function create(O, Properties) {\n\t  return Properties === undefined ? objectCreate(O) : $defineProperties(objectCreate(O), Properties);\n\t};\n\n\tvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n\t  var P = toPrimitive(V, true);\n\t  var enumerable = nativePropertyIsEnumerable$1.call(this, P);\n\t  if (this === ObjectPrototype$1 && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n\t  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n\t};\n\n\tvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n\t  var it = toIndexedObject(O);\n\t  var key = toPrimitive(P, true);\n\t  if (it === ObjectPrototype$1 && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n\t  var descriptor = nativeGetOwnPropertyDescriptor$2(it, key);\n\t  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n\t    descriptor.enumerable = true;\n\t  }\n\t  return descriptor;\n\t};\n\n\tvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n\t  var names = nativeGetOwnPropertyNames$2(toIndexedObject(O));\n\t  var result = [];\n\t  $forEach$1(names, function (key) {\n\t    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n\t  });\n\t  return result;\n\t};\n\n\tvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n\t  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$1;\n\t  var names = nativeGetOwnPropertyNames$2(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n\t  var result = [];\n\t  $forEach$1(names, function (key) {\n\t    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype$1, key))) {\n\t      result.push(AllSymbols[key]);\n\t    }\n\t  });\n\t  return result;\n\t};\n\n\t// `Symbol` constructor\n\t// https://tc39.es/ecma262/#sec-symbol-constructor\n\tif (!nativeSymbol) {\n\t  $Symbol = function Symbol() {\n\t    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n\t    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n\t    var tag = uid(description);\n\t    var setter = function (value) {\n\t      if (this === ObjectPrototype$1) setter.call(ObjectPrototypeSymbols, value);\n\t      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n\t      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n\t    };\n\t    if (descriptors && USE_SETTER) setSymbolDescriptor(ObjectPrototype$1, tag, { configurable: true, set: setter });\n\t    return wrap(tag, description);\n\t  };\n\n\t  redefine($Symbol[PROTOTYPE$1], 'toString', function toString() {\n\t    return getInternalState(this).tag;\n\t  });\n\n\t  redefine($Symbol, 'withoutSetter', function (description) {\n\t    return wrap(uid(description), description);\n\t  });\n\n\t  objectPropertyIsEnumerable.f = $propertyIsEnumerable;\n\t  objectDefineProperty.f = $defineProperty;\n\t  objectGetOwnPropertyDescriptor.f = $getOwnPropertyDescriptor;\n\t  objectGetOwnPropertyNames.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n\t  objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;\n\n\t  wellKnownSymbolWrapped.f = function (name) {\n\t    return wrap(wellKnownSymbol(name), name);\n\t  };\n\n\t  if (descriptors) {\n\t    // https://github.com/tc39/proposal-Symbol-description\n\t    nativeDefineProperty$1($Symbol[PROTOTYPE$1], 'description', {\n\t      configurable: true,\n\t      get: function description() {\n\t        return getInternalState(this).description;\n\t      }\n\t    });\n\t    {\n\t      redefine(ObjectPrototype$1, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n\t    }\n\t  }\n\t}\n\n\t_export({ global: true, wrap: true, forced: !nativeSymbol, sham: !nativeSymbol }, {\n\t  Symbol: $Symbol\n\t});\n\n\t$forEach$1(objectKeys(WellKnownSymbolsStore$1), function (name) {\n\t  defineWellKnownSymbol(name);\n\t});\n\n\t_export({ target: SYMBOL, stat: true, forced: !nativeSymbol }, {\n\t  // `Symbol.for` method\n\t  // https://tc39.es/ecma262/#sec-symbol.for\n\t  'for': function (key) {\n\t    var string = String(key);\n\t    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n\t    var symbol = $Symbol(string);\n\t    StringToSymbolRegistry[string] = symbol;\n\t    SymbolToStringRegistry[symbol] = string;\n\t    return symbol;\n\t  },\n\t  // `Symbol.keyFor` method\n\t  // https://tc39.es/ecma262/#sec-symbol.keyfor\n\t  keyFor: function keyFor(sym) {\n\t    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n\t    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n\t  },\n\t  useSetter: function () { USE_SETTER = true; },\n\t  useSimple: function () { USE_SETTER = false; }\n\t});\n\n\t_export({ target: 'Object', stat: true, forced: !nativeSymbol, sham: !descriptors }, {\n\t  // `Object.create` method\n\t  // https://tc39.es/ecma262/#sec-object.create\n\t  create: $create,\n\t  // `Object.defineProperty` method\n\t  // https://tc39.es/ecma262/#sec-object.defineproperty\n\t  defineProperty: $defineProperty,\n\t  // `Object.defineProperties` method\n\t  // https://tc39.es/ecma262/#sec-object.defineproperties\n\t  defineProperties: $defineProperties,\n\t  // `Object.getOwnPropertyDescriptor` method\n\t  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n\t  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n\t});\n\n\t_export({ target: 'Object', stat: true, forced: !nativeSymbol }, {\n\t  // `Object.getOwnPropertyNames` method\n\t  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n\t  getOwnPropertyNames: $getOwnPropertyNames,\n\t  // `Object.getOwnPropertySymbols` method\n\t  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n\t  getOwnPropertySymbols: $getOwnPropertySymbols\n\t});\n\n\t// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n\t// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n\t_export({ target: 'Object', stat: true, forced: fails(function () { objectGetOwnPropertySymbols.f(1); }) }, {\n\t  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n\t    return objectGetOwnPropertySymbols.f(toObject(it));\n\t  }\n\t});\n\n\t// `JSON.stringify` method behavior with symbols\n\t// https://tc39.es/ecma262/#sec-json.stringify\n\tif ($stringify) {\n\t  var FORCED_JSON_STRINGIFY = !nativeSymbol || fails(function () {\n\t    var symbol = $Symbol();\n\t    // MS Edge converts symbol values to JSON as {}\n\t    return $stringify([symbol]) != '[null]'\n\t      // WebKit converts symbol values to JSON as null\n\t      || $stringify({ a: symbol }) != '{}'\n\t      // V8 throws on boxed symbols\n\t      || $stringify(Object(symbol)) != '{}';\n\t  });\n\n\t  _export({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n\t    // eslint-disable-next-line no-unused-vars\n\t    stringify: function stringify(it, replacer, space) {\n\t      var args = [it];\n\t      var index = 1;\n\t      var $replacer;\n\t      while (arguments.length > index) args.push(arguments[index++]);\n\t      $replacer = replacer;\n\t      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n\t      if (!isArray(replacer)) replacer = function (key, value) {\n\t        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n\t        if (!isSymbol(value)) return value;\n\t      };\n\t      args[1] = replacer;\n\t      return $stringify.apply(null, args);\n\t    }\n\t  });\n\t}\n\n\t// `Symbol.prototype[@@toPrimitive]` method\n\t// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n\tif (!$Symbol[PROTOTYPE$1][TO_PRIMITIVE]) {\n\t  createNonEnumerableProperty($Symbol[PROTOTYPE$1], TO_PRIMITIVE, $Symbol[PROTOTYPE$1].valueOf);\n\t}\n\t// `Symbol.prototype[@@toStringTag]` property\n\t// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\n\tsetToStringTag($Symbol, SYMBOL);\n\n\thiddenKeys[HIDDEN] = true;\n\n\tvar defineProperty$7 = objectDefineProperty.f;\n\n\n\tvar NativeSymbol = global_1.Symbol;\n\n\tif (descriptors && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n\t  // Safari 12 bug\n\t  NativeSymbol().description !== undefined\n\t)) {\n\t  var EmptyStringDescriptionStore = {};\n\t  // wrap Symbol constructor for correct work with undefined description\n\t  var SymbolWrapper = function Symbol() {\n\t    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n\t    var result = this instanceof SymbolWrapper\n\t      ? new NativeSymbol(description)\n\t      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n\t      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n\t    if (description === '') EmptyStringDescriptionStore[result] = true;\n\t    return result;\n\t  };\n\t  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n\t  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n\t  symbolPrototype.constructor = SymbolWrapper;\n\n\t  var symbolToString = symbolPrototype.toString;\n\t  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n\t  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n\t  defineProperty$7(symbolPrototype, 'description', {\n\t    configurable: true,\n\t    get: function description() {\n\t      var symbol = isObject(this) ? this.valueOf() : this;\n\t      var string = symbolToString.call(symbol);\n\t      if (has(EmptyStringDescriptionStore, symbol)) return '';\n\t      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n\t      return desc === '' ? undefined : desc;\n\t    }\n\t  });\n\n\t  _export({ global: true, forced: true }, {\n\t    Symbol: SymbolWrapper\n\t  });\n\t}\n\n\t// `Symbol.species` well-known symbol\n\t// https://tc39.es/ecma262/#sec-symbol.species\n\tdefineWellKnownSymbol('species');\n\n\t// `Array.prototype.fill` method implementation\n\t// https://tc39.es/ecma262/#sec-array.prototype.fill\n\tvar arrayFill = function fill(value /* , start = 0, end = @length */) {\n\t  var O = toObject(this);\n\t  var length = toLength(O.length);\n\t  var argumentsLength = arguments.length;\n\t  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n\t  var end = argumentsLength > 2 ? arguments[2] : undefined;\n\t  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n\t  while (endPos > index) O[index++] = value;\n\t  return O;\n\t};\n\n\tvar UNSCOPABLES = wellKnownSymbol('unscopables');\n\tvar ArrayPrototype = Array.prototype;\n\n\t// Array.prototype[@@unscopables]\n\t// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\tif (ArrayPrototype[UNSCOPABLES] == undefined) {\n\t  objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {\n\t    configurable: true,\n\t    value: objectCreate(null)\n\t  });\n\t}\n\n\t// add a key to Array.prototype[@@unscopables]\n\tvar addToUnscopables = function (key) {\n\t  ArrayPrototype[UNSCOPABLES][key] = true;\n\t};\n\n\t// `Array.prototype.fill` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.fill\n\t_export({ target: 'Array', proto: true }, {\n\t  fill: arrayFill\n\t});\n\n\t// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\taddToUnscopables('fill');\n\n\tvar $includes = arrayIncludes.includes;\n\n\n\n\tvar USES_TO_LENGTH$4 = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n\t// `Array.prototype.includes` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.includes\n\t_export({ target: 'Array', proto: true, forced: !USES_TO_LENGTH$4 }, {\n\t  includes: function includes(el /* , fromIndex = 0 */) {\n\t    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\t// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\taddToUnscopables('includes');\n\n\tvar iterators = {};\n\n\tvar ITERATOR = wellKnownSymbol('iterator');\n\tvar BUGGY_SAFARI_ITERATORS = false;\n\n\tvar returnThis = function () { return this; };\n\n\t// `%IteratorPrototype%` object\n\t// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\n\tvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n\tif ([].keys) {\n\t  arrayIterator = [].keys();\n\t  // Safari 8 has buggy iterators w/o `next`\n\t  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n\t  else {\n\t    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));\n\t    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n\t  }\n\t}\n\n\tvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n\t  var test = {};\n\t  // FF44- legacy iterators case\n\t  return IteratorPrototype[ITERATOR].call(test) !== test;\n\t});\n\n\tif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\n\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\tif ( !has(IteratorPrototype, ITERATOR)) {\n\t  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n\t}\n\n\tvar iteratorsCore = {\n\t  IteratorPrototype: IteratorPrototype,\n\t  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n\t};\n\n\tvar IteratorPrototype$1 = iteratorsCore.IteratorPrototype;\n\n\n\n\n\n\tvar returnThis$1 = function () { return this; };\n\n\tvar createIteratorConstructor = function (IteratorConstructor, NAME, next) {\n\t  var TO_STRING_TAG = NAME + ' Iterator';\n\t  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(1, next) });\n\t  setToStringTag(IteratorConstructor, TO_STRING_TAG, false);\n\t  iterators[TO_STRING_TAG] = returnThis$1;\n\t  return IteratorConstructor;\n\t};\n\n\tvar IteratorPrototype$2 = iteratorsCore.IteratorPrototype;\n\tvar BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;\n\tvar ITERATOR$1 = wellKnownSymbol('iterator');\n\tvar KEYS = 'keys';\n\tvar VALUES = 'values';\n\tvar ENTRIES = 'entries';\n\n\tvar returnThis$2 = function () { return this; };\n\n\tvar defineIterator = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n\t  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n\t  var getIterationMethod = function (KIND) {\n\t    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n\t    if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];\n\t    switch (KIND) {\n\t      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n\t      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n\t      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n\t    } return function () { return new IteratorConstructor(this); };\n\t  };\n\n\t  var TO_STRING_TAG = NAME + ' Iterator';\n\t  var INCORRECT_VALUES_NAME = false;\n\t  var IterablePrototype = Iterable.prototype;\n\t  var nativeIterator = IterablePrototype[ITERATOR$1]\n\t    || IterablePrototype['@@iterator']\n\t    || DEFAULT && IterablePrototype[DEFAULT];\n\t  var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);\n\t  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n\t  var CurrentIteratorPrototype, methods, KEY;\n\n\t  // fix native\n\t  if (anyNativeIterator) {\n\t    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));\n\t    if (IteratorPrototype$2 !== Object.prototype && CurrentIteratorPrototype.next) {\n\t      if ( objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {\n\t        if (objectSetPrototypeOf) {\n\t          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);\n\t        } else if (typeof CurrentIteratorPrototype[ITERATOR$1] != 'function') {\n\t          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR$1, returnThis$2);\n\t        }\n\t      }\n\t      // Set @@toStringTag to native iterators\n\t      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);\n\t    }\n\t  }\n\n\t  // fix Array#{values, @@iterator}.name in V8 / FF\n\t  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n\t    INCORRECT_VALUES_NAME = true;\n\t    defaultIterator = function values() { return nativeIterator.call(this); };\n\t  }\n\n\t  // define iterator\n\t  if ( IterablePrototype[ITERATOR$1] !== defaultIterator) {\n\t    createNonEnumerableProperty(IterablePrototype, ITERATOR$1, defaultIterator);\n\t  }\n\t  iterators[NAME] = defaultIterator;\n\n\t  // export additional methods\n\t  if (DEFAULT) {\n\t    methods = {\n\t      values: getIterationMethod(VALUES),\n\t      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n\t      entries: getIterationMethod(ENTRIES)\n\t    };\n\t    if (FORCED) for (KEY in methods) {\n\t      if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n\t        redefine(IterablePrototype, KEY, methods[KEY]);\n\t      }\n\t    } else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME }, methods);\n\t  }\n\n\t  return methods;\n\t};\n\n\tvar ARRAY_ITERATOR = 'Array Iterator';\n\tvar setInternalState$2 = internalState.set;\n\tvar getInternalState$1 = internalState.getterFor(ARRAY_ITERATOR);\n\n\t// `Array.prototype.entries` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.entries\n\t// `Array.prototype.keys` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.keys\n\t// `Array.prototype.values` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.values\n\t// `Array.prototype[@@iterator]` method\n\t// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n\t// `CreateArrayIterator` internal method\n\t// https://tc39.es/ecma262/#sec-createarrayiterator\n\tvar es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {\n\t  setInternalState$2(this, {\n\t    type: ARRAY_ITERATOR,\n\t    target: toIndexedObject(iterated), // target\n\t    index: 0,                          // next index\n\t    kind: kind                         // kind\n\t  });\n\t// `%ArrayIteratorPrototype%.next` method\n\t// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n\t}, function () {\n\t  var state = getInternalState$1(this);\n\t  var target = state.target;\n\t  var kind = state.kind;\n\t  var index = state.index++;\n\t  if (!target || index >= target.length) {\n\t    state.target = undefined;\n\t    return { value: undefined, done: true };\n\t  }\n\t  if (kind == 'keys') return { value: index, done: false };\n\t  if (kind == 'values') return { value: target[index], done: false };\n\t  return { value: [index, target[index]], done: false };\n\t}, 'values');\n\n\t// argumentsList[@@iterator] is %ArrayProto_values%\n\t// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n\t// https://tc39.es/ecma262/#sec-createmappedargumentsobject\n\titerators.Arguments = iterators.Array;\n\n\t// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n\tvar HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport('slice');\n\tvar USES_TO_LENGTH$5 = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\n\tvar SPECIES$5 = wellKnownSymbol('species');\n\tvar nativeSlice = [].slice;\n\tvar max$3 = Math.max;\n\n\t// `Array.prototype.slice` method\n\t// https://tc39.es/ecma262/#sec-array.prototype.slice\n\t// fallback for not array-like ES3 strings and DOM objects\n\t_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$3 || !USES_TO_LENGTH$5 }, {\n\t  slice: function slice(start, end) {\n\t    var O = toIndexedObject(this);\n\t    var length = toLength(O.length);\n\t    var k = toAbsoluteIndex(start, length);\n\t    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n\t    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n\t    var Constructor, result, n;\n\t    if (isArray(O)) {\n\t      Constructor = O.constructor;\n\t      // cross-realm fallback\n\t      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n\t        Constructor = undefined;\n\t      } else if (isObject(Constructor)) {\n\t        Constructor = Constructor[SPECIES$5];\n\t        if (Constructor === null) Constructor = undefined;\n\t      }\n\t      if (Constructor === Array || Constructor === undefined) {\n\t        return nativeSlice.call(O, k, fin);\n\t      }\n\t    }\n\t    result = new (Constructor === undefined ? Array : Constructor)(max$3(fin - k, 0));\n\t    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n\t    result.length = n;\n\t    return result;\n\t  }\n\t});\n\n\t// `Array[@@species]` getter\n\t// https://tc39.es/ecma262/#sec-get-array-@@species\n\tsetSpecies('Array');\n\n\tvar arrayBufferNative = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';\n\n\tvar redefineAll = function (target, src, options) {\n\t  for (var key in src) redefine(target, key, src[key], options);\n\t  return target;\n\t};\n\n\tvar anInstance = function (it, Constructor, name) {\n\t  if (!(it instanceof Constructor)) {\n\t    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n\t  } return it;\n\t};\n\n\t// `ToIndex` abstract operation\n\t// https://tc39.es/ecma262/#sec-toindex\n\tvar toIndex = function (it) {\n\t  if (it === undefined) return 0;\n\t  var number = toInteger(it);\n\t  var length = toLength(number);\n\t  if (number !== length) throw RangeError('Wrong length or index');\n\t  return length;\n\t};\n\n\t// IEEE754 conversions based on https://github.com/feross/ieee754\n\t// eslint-disable-next-line no-shadow-restricted-names\n\tvar Infinity$1 = 1 / 0;\n\tvar abs = Math.abs;\n\tvar pow = Math.pow;\n\tvar floor$2 = Math.floor;\n\tvar log = Math.log;\n\tvar LN2 = Math.LN2;\n\n\tvar pack = function (number, mantissaLength, bytes) {\n\t  var buffer = new Array(bytes);\n\t  var exponentLength = bytes * 8 - mantissaLength - 1;\n\t  var eMax = (1 << exponentLength) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;\n\t  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;\n\t  var index = 0;\n\t  var exponent, mantissa, c;\n\t  number = abs(number);\n\t  // eslint-disable-next-line no-self-compare\n\t  if (number != number || number === Infinity$1) {\n\t    // eslint-disable-next-line no-self-compare\n\t    mantissa = number != number ? 1 : 0;\n\t    exponent = eMax;\n\t  } else {\n\t    exponent = floor$2(log(number) / LN2);\n\t    if (number * (c = pow(2, -exponent)) < 1) {\n\t      exponent--;\n\t      c *= 2;\n\t    }\n\t    if (exponent + eBias >= 1) {\n\t      number += rt / c;\n\t    } else {\n\t      number += rt * pow(2, 1 - eBias);\n\t    }\n\t    if (number * c >= 2) {\n\t      exponent++;\n\t      c /= 2;\n\t    }\n\t    if (exponent + eBias >= eMax) {\n\t      mantissa = 0;\n\t      exponent = eMax;\n\t    } else if (exponent + eBias >= 1) {\n\t      mantissa = (number * c - 1) * pow(2, mantissaLength);\n\t      exponent = exponent + eBias;\n\t    } else {\n\t      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);\n\t      exponent = 0;\n\t    }\n\t  }\n\t  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);\n\t  exponent = exponent << mantissaLength | mantissa;\n\t  exponentLength += mantissaLength;\n\t  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);\n\t  buffer[--index] |= sign * 128;\n\t  return buffer;\n\t};\n\n\tvar unpack = function (buffer, mantissaLength) {\n\t  var bytes = buffer.length;\n\t  var exponentLength = bytes * 8 - mantissaLength - 1;\n\t  var eMax = (1 << exponentLength) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = exponentLength - 7;\n\t  var index = bytes - 1;\n\t  var sign = buffer[index--];\n\t  var exponent = sign & 127;\n\t  var mantissa;\n\t  sign >>= 7;\n\t  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);\n\t  mantissa = exponent & (1 << -nBits) - 1;\n\t  exponent >>= -nBits;\n\t  nBits += mantissaLength;\n\t  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);\n\t  if (exponent === 0) {\n\t    exponent = 1 - eBias;\n\t  } else if (exponent === eMax) {\n\t    return mantissa ? NaN : sign ? -Infinity$1 : Infinity$1;\n\t  } else {\n\t    mantissa = mantissa + pow(2, mantissaLength);\n\t    exponent = exponent - eBias;\n\t  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);\n\t};\n\n\tvar ieee754 = {\n\t  pack: pack,\n\t  unpack: unpack\n\t};\n\n\tvar getOwnPropertyNames$2 = objectGetOwnPropertyNames.f;\n\tvar defineProperty$8 = objectDefineProperty.f;\n\n\n\n\n\tvar getInternalState$2 = internalState.get;\n\tvar setInternalState$3 = internalState.set;\n\tvar ARRAY_BUFFER = 'ArrayBuffer';\n\tvar DATA_VIEW = 'DataView';\n\tvar PROTOTYPE$2 = 'prototype';\n\tvar WRONG_LENGTH = 'Wrong length';\n\tvar WRONG_INDEX = 'Wrong index';\n\tvar NativeArrayBuffer = global_1[ARRAY_BUFFER];\n\tvar $ArrayBuffer = NativeArrayBuffer;\n\tvar $DataView = global_1[DATA_VIEW];\n\tvar $DataViewPrototype = $DataView && $DataView[PROTOTYPE$2];\n\tvar ObjectPrototype$2 = Object.prototype;\n\tvar RangeError$1 = global_1.RangeError;\n\n\tvar packIEEE754 = ieee754.pack;\n\tvar unpackIEEE754 = ieee754.unpack;\n\n\tvar packInt8 = function (number) {\n\t  return [number & 0xFF];\n\t};\n\n\tvar packInt16 = function (number) {\n\t  return [number & 0xFF, number >> 8 & 0xFF];\n\t};\n\n\tvar packInt32 = function (number) {\n\t  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];\n\t};\n\n\tvar unpackInt32 = function (buffer) {\n\t  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];\n\t};\n\n\tvar packFloat32 = function (number) {\n\t  return packIEEE754(number, 23, 4);\n\t};\n\n\tvar packFloat64 = function (number) {\n\t  return packIEEE754(number, 52, 8);\n\t};\n\n\tvar addGetter = function (Constructor, key) {\n\t  defineProperty$8(Constructor[PROTOTYPE$2], key, { get: function () { return getInternalState$2(this)[key]; } });\n\t};\n\n\tvar get$1 = function (view, count, index, isLittleEndian) {\n\t  var intIndex = toIndex(index);\n\t  var store = getInternalState$2(view);\n\t  if (intIndex + count > store.byteLength) throw RangeError$1(WRONG_INDEX);\n\t  var bytes = getInternalState$2(store.buffer).bytes;\n\t  var start = intIndex + store.byteOffset;\n\t  var pack = bytes.slice(start, start + count);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t};\n\n\tvar set$1 = function (view, count, index, conversion, value, isLittleEndian) {\n\t  var intIndex = toIndex(index);\n\t  var store = getInternalState$2(view);\n\t  if (intIndex + count > store.byteLength) throw RangeError$1(WRONG_INDEX);\n\t  var bytes = getInternalState$2(store.buffer).bytes;\n\t  var start = intIndex + store.byteOffset;\n\t  var pack = conversion(+value);\n\t  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];\n\t};\n\n\tif (!arrayBufferNative) {\n\t  $ArrayBuffer = function ArrayBuffer(length) {\n\t    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n\t    var byteLength = toIndex(length);\n\t    setInternalState$3(this, {\n\t      bytes: arrayFill.call(new Array(byteLength), 0),\n\t      byteLength: byteLength\n\t    });\n\t    if (!descriptors) this.byteLength = byteLength;\n\t  };\n\n\t  $DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = getInternalState$2(buffer).byteLength;\n\t    var offset = toInteger(byteOffset);\n\t    if (offset < 0 || offset > bufferLength) throw RangeError$1('Wrong offset');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if (offset + byteLength > bufferLength) throw RangeError$1(WRONG_LENGTH);\n\t    setInternalState$3(this, {\n\t      buffer: buffer,\n\t      byteLength: byteLength,\n\t      byteOffset: offset\n\t    });\n\t    if (!descriptors) {\n\t      this.buffer = buffer;\n\t      this.byteLength = byteLength;\n\t      this.byteOffset = offset;\n\t    }\n\t  };\n\n\t  if (descriptors) {\n\t    addGetter($ArrayBuffer, 'byteLength');\n\t    addGetter($DataView, 'buffer');\n\t    addGetter($DataView, 'byteLength');\n\t    addGetter($DataView, 'byteOffset');\n\t  }\n\n\t  redefineAll($DataView[PROTOTYPE$2], {\n\t    getInt8: function getInt8(byteOffset) {\n\t      return get$1(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset) {\n\t      return get$1(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n\t      var bytes = get$1(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n\t      var bytes = get$1(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n\t      return unpackInt32(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n\t      return unpackInt32(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n\t      return unpackIEEE754(get$1(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n\t      return unpackIEEE754(get$1(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      set$1(this, 1, byteOffset, packInt8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      set$1(this, 1, byteOffset, packInt8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n\t      set$1(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);\n\t    }\n\t  });\n\t} else {\n\t  if (!fails(function () {\n\t    NativeArrayBuffer(1);\n\t  }) || !fails(function () {\n\t    new NativeArrayBuffer(-1); // eslint-disable-line no-new\n\t  }) || fails(function () {\n\t    new NativeArrayBuffer(); // eslint-disable-line no-new\n\t    new NativeArrayBuffer(1.5); // eslint-disable-line no-new\n\t    new NativeArrayBuffer(NaN); // eslint-disable-line no-new\n\t    return NativeArrayBuffer.name != ARRAY_BUFFER;\n\t  })) {\n\t    $ArrayBuffer = function ArrayBuffer(length) {\n\t      anInstance(this, $ArrayBuffer);\n\t      return new NativeArrayBuffer(toIndex(length));\n\t    };\n\t    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE$2] = NativeArrayBuffer[PROTOTYPE$2];\n\t    for (var keys$3 = getOwnPropertyNames$2(NativeArrayBuffer), j$1 = 0, key$1; keys$3.length > j$1;) {\n\t      if (!((key$1 = keys$3[j$1++]) in $ArrayBuffer)) {\n\t        createNonEnumerableProperty($ArrayBuffer, key$1, NativeArrayBuffer[key$1]);\n\t      }\n\t    }\n\t    ArrayBufferPrototype.constructor = $ArrayBuffer;\n\t  }\n\n\t  // WebKit bug - the same parent prototype for typed arrays and data view\n\t  if (objectSetPrototypeOf && objectGetPrototypeOf($DataViewPrototype) !== ObjectPrototype$2) {\n\t    objectSetPrototypeOf($DataViewPrototype, ObjectPrototype$2);\n\t  }\n\n\t  // iOS Safari 7.x bug\n\t  var testView = new $DataView(new $ArrayBuffer(2));\n\t  var nativeSetInt8 = $DataViewPrototype.setInt8;\n\t  testView.setInt8(0, 2147483648);\n\t  testView.setInt8(1, 2147483649);\n\t  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, { unsafe: true });\n\t}\n\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\n\tvar arrayBuffer = {\n\t  ArrayBuffer: $ArrayBuffer,\n\t  DataView: $DataView\n\t};\n\n\tvar ARRAY_BUFFER$1 = 'ArrayBuffer';\n\tvar ArrayBuffer$1 = arrayBuffer[ARRAY_BUFFER$1];\n\tvar NativeArrayBuffer$1 = global_1[ARRAY_BUFFER$1];\n\n\t// `ArrayBuffer` constructor\n\t// https://tc39.es/ecma262/#sec-arraybuffer-constructor\n\t_export({ global: true, forced: NativeArrayBuffer$1 !== ArrayBuffer$1 }, {\n\t  ArrayBuffer: ArrayBuffer$1\n\t});\n\n\tsetSpecies(ARRAY_BUFFER$1);\n\n\tvar notARegexp = function (it) {\n\t  if (isRegexp(it)) {\n\t    throw TypeError(\"The method doesn't accept regular expressions\");\n\t  } return it;\n\t};\n\n\tvar MATCH$2 = wellKnownSymbol('match');\n\n\tvar correctIsRegexpLogic = function (METHOD_NAME) {\n\t  var regexp = /./;\n\t  try {\n\t    '/./'[METHOD_NAME](regexp);\n\t  } catch (error1) {\n\t    try {\n\t      regexp[MATCH$2] = false;\n\t      return '/./'[METHOD_NAME](regexp);\n\t    } catch (error2) { /* empty */ }\n\t  } return false;\n\t};\n\n\t// `String.prototype.includes` method\n\t// https://tc39.es/ecma262/#sec-string.prototype.includes\n\t_export({ target: 'String', proto: true, forced: !correctIsRegexpLogic('includes') }, {\n\t  includes: function includes(searchString /* , position = 0 */) {\n\t    return !!~String(requireObjectCoercible(this))\n\t      .indexOf(notARegexp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n\t  }\n\t});\n\n\tvar non = '\\u200B\\u0085\\u180E';\n\n\t// check that a method works with the correct list\n\t// of whitespaces and has a correct name\n\tvar stringTrimForced = function (METHOD_NAME) {\n\t  return fails(function () {\n\t    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n\t  });\n\t};\n\n\tvar $trim = stringTrim.trim;\n\n\n\t// `String.prototype.trim` method\n\t// https://tc39.es/ecma262/#sec-string.prototype.trim\n\t_export({ target: 'String', proto: true, forced: stringTrimForced('trim') }, {\n\t  trim: function trim() {\n\t    return $trim(this);\n\t  }\n\t});\n\n\tvar ITERATOR$2 = wellKnownSymbol('iterator');\n\tvar SAFE_CLOSING = false;\n\n\ttry {\n\t  var called = 0;\n\t  var iteratorWithReturn = {\n\t    next: function () {\n\t      return { done: !!called++ };\n\t    },\n\t    'return': function () {\n\t      SAFE_CLOSING = true;\n\t    }\n\t  };\n\t  iteratorWithReturn[ITERATOR$2] = function () {\n\t    return this;\n\t  };\n\t  // eslint-disable-next-line no-throw-literal\n\t  Array.from(iteratorWithReturn, function () { throw 2; });\n\t} catch (error) { /* empty */ }\n\n\tvar checkCorrectnessOfIteration = function (exec, SKIP_CLOSING) {\n\t  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n\t  var ITERATION_SUPPORT = false;\n\t  try {\n\t    var object = {};\n\t    object[ITERATOR$2] = function () {\n\t      return {\n\t        next: function () {\n\t          return { done: ITERATION_SUPPORT = true };\n\t        }\n\t      };\n\t    };\n\t    exec(object);\n\t  } catch (error) { /* empty */ }\n\t  return ITERATION_SUPPORT;\n\t};\n\n\tvar defineProperty$9 = objectDefineProperty.f;\n\n\n\n\n\n\tvar Int8Array$1 = global_1.Int8Array;\n\tvar Int8ArrayPrototype = Int8Array$1 && Int8Array$1.prototype;\n\tvar Uint8ClampedArray = global_1.Uint8ClampedArray;\n\tvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\n\tvar TypedArray = Int8Array$1 && objectGetPrototypeOf(Int8Array$1);\n\tvar TypedArrayPrototype = Int8ArrayPrototype && objectGetPrototypeOf(Int8ArrayPrototype);\n\tvar ObjectPrototype$3 = Object.prototype;\n\tvar isPrototypeOf = ObjectPrototype$3.isPrototypeOf;\n\n\tvar TO_STRING_TAG$3 = wellKnownSymbol('toStringTag');\n\tvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\n\t// Fixing native typed arrays in Opera Presto crashes the browser, see #595\n\tvar NATIVE_ARRAY_BUFFER_VIEWS = arrayBufferNative && !!objectSetPrototypeOf && classof(global_1.opera) !== 'Opera';\n\tvar TYPED_ARRAY_TAG_REQIRED = false;\n\tvar NAME$1;\n\n\tvar TypedArrayConstructorsList = {\n\t  Int8Array: 1,\n\t  Uint8Array: 1,\n\t  Uint8ClampedArray: 1,\n\t  Int16Array: 2,\n\t  Uint16Array: 2,\n\t  Int32Array: 4,\n\t  Uint32Array: 4,\n\t  Float32Array: 4,\n\t  Float64Array: 8\n\t};\n\n\tvar BigIntArrayConstructorsList = {\n\t  BigInt64Array: 8,\n\t  BigUint64Array: 8\n\t};\n\n\tvar isView = function isView(it) {\n\t  if (!isObject(it)) return false;\n\t  var klass = classof(it);\n\t  return klass === 'DataView'\n\t    || has(TypedArrayConstructorsList, klass)\n\t    || has(BigIntArrayConstructorsList, klass);\n\t};\n\n\tvar isTypedArray = function (it) {\n\t  if (!isObject(it)) return false;\n\t  var klass = classof(it);\n\t  return has(TypedArrayConstructorsList, klass)\n\t    || has(BigIntArrayConstructorsList, klass);\n\t};\n\n\tvar aTypedArray = function (it) {\n\t  if (isTypedArray(it)) return it;\n\t  throw TypeError('Target is not a typed array');\n\t};\n\n\tvar aTypedArrayConstructor = function (C) {\n\t  if (objectSetPrototypeOf) {\n\t    if (isPrototypeOf.call(TypedArray, C)) return C;\n\t  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME$1)) {\n\t    var TypedArrayConstructor = global_1[ARRAY];\n\t    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {\n\t      return C;\n\t    }\n\t  } throw TypeError('Target is not a typed array constructor');\n\t};\n\n\tvar exportTypedArrayMethod = function (KEY, property, forced) {\n\t  if (!descriptors) return;\n\t  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n\t    var TypedArrayConstructor = global_1[ARRAY];\n\t    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {\n\t      delete TypedArrayConstructor.prototype[KEY];\n\t    }\n\t  }\n\t  if (!TypedArrayPrototype[KEY] || forced) {\n\t    redefine(TypedArrayPrototype, KEY, forced ? property\n\t      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);\n\t  }\n\t};\n\n\tvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n\t  var ARRAY, TypedArrayConstructor;\n\t  if (!descriptors) return;\n\t  if (objectSetPrototypeOf) {\n\t    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n\t      TypedArrayConstructor = global_1[ARRAY];\n\t      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {\n\t        delete TypedArrayConstructor[KEY];\n\t      }\n\t    }\n\t    if (!TypedArray[KEY] || forced) {\n\t      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n\t      try {\n\t        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array$1[KEY] || property);\n\t      } catch (error) { /* empty */ }\n\t    } else return;\n\t  }\n\t  for (ARRAY in TypedArrayConstructorsList) {\n\t    TypedArrayConstructor = global_1[ARRAY];\n\t    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n\t      redefine(TypedArrayConstructor, KEY, property);\n\t    }\n\t  }\n\t};\n\n\tfor (NAME$1 in TypedArrayConstructorsList) {\n\t  if (!global_1[NAME$1]) NATIVE_ARRAY_BUFFER_VIEWS = false;\n\t}\n\n\t// WebKit bug - typed arrays constructors prototype is Object.prototype\n\tif (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {\n\t  // eslint-disable-next-line no-shadow\n\t  TypedArray = function TypedArray() {\n\t    throw TypeError('Incorrect invocation');\n\t  };\n\t  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME$1 in TypedArrayConstructorsList) {\n\t    if (global_1[NAME$1]) objectSetPrototypeOf(global_1[NAME$1], TypedArray);\n\t  }\n\t}\n\n\tif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype$3) {\n\t  TypedArrayPrototype = TypedArray.prototype;\n\t  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME$1 in TypedArrayConstructorsList) {\n\t    if (global_1[NAME$1]) objectSetPrototypeOf(global_1[NAME$1].prototype, TypedArrayPrototype);\n\t  }\n\t}\n\n\t// WebKit bug - one more object in Uint8ClampedArray prototype chain\n\tif (NATIVE_ARRAY_BUFFER_VIEWS && objectGetPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n\t  objectSetPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n\t}\n\n\tif (descriptors && !has(TypedArrayPrototype, TO_STRING_TAG$3)) {\n\t  TYPED_ARRAY_TAG_REQIRED = true;\n\t  defineProperty$9(TypedArrayPrototype, TO_STRING_TAG$3, { get: function () {\n\t    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n\t  } });\n\t  for (NAME$1 in TypedArrayConstructorsList) if (global_1[NAME$1]) {\n\t    createNonEnumerableProperty(global_1[NAME$1], TYPED_ARRAY_TAG, NAME$1);\n\t  }\n\t}\n\n\tvar arrayBufferViewCore = {\n\t  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n\t  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,\n\t  aTypedArray: aTypedArray,\n\t  aTypedArrayConstructor: aTypedArrayConstructor,\n\t  exportTypedArrayMethod: exportTypedArrayMethod,\n\t  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n\t  isView: isView,\n\t  isTypedArray: isTypedArray,\n\t  TypedArray: TypedArray,\n\t  TypedArrayPrototype: TypedArrayPrototype\n\t};\n\n\t/* eslint-disable no-new */\n\n\n\n\tvar NATIVE_ARRAY_BUFFER_VIEWS$1 = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n\n\tvar ArrayBuffer$2 = global_1.ArrayBuffer;\n\tvar Int8Array$2 = global_1.Int8Array;\n\n\tvar typedArrayConstructorsRequireWrappers = !NATIVE_ARRAY_BUFFER_VIEWS$1 || !fails(function () {\n\t  Int8Array$2(1);\n\t}) || !fails(function () {\n\t  new Int8Array$2(-1);\n\t}) || !checkCorrectnessOfIteration(function (iterable) {\n\t  new Int8Array$2();\n\t  new Int8Array$2(null);\n\t  new Int8Array$2(1.5);\n\t  new Int8Array$2(iterable);\n\t}, true) || fails(function () {\n\t  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill\n\t  return new Int8Array$2(new ArrayBuffer$2(2), 1, undefined).length !== 1;\n\t});\n\n\tvar toPositiveInteger = function (it) {\n\t  var result = toInteger(it);\n\t  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n\t  return result;\n\t};\n\n\tvar toOffset = function (it, BYTES) {\n\t  var offset = toPositiveInteger(it);\n\t  if (offset % BYTES) throw RangeError('Wrong offset');\n\t  return offset;\n\t};\n\n\tvar ITERATOR$3 = wellKnownSymbol('iterator');\n\n\tvar getIteratorMethod = function (it) {\n\t  if (it != undefined) return it[ITERATOR$3]\n\t    || it['@@iterator']\n\t    || iterators[classof(it)];\n\t};\n\n\tvar ITERATOR$4 = wellKnownSymbol('iterator');\n\tvar ArrayPrototype$1 = Array.prototype;\n\n\t// check on default Array iterator\n\tvar isArrayIteratorMethod = function (it) {\n\t  return it !== undefined && (iterators.Array === it || ArrayPrototype$1[ITERATOR$4] === it);\n\t};\n\n\tvar aTypedArrayConstructor$1 = arrayBufferViewCore.aTypedArrayConstructor;\n\n\tvar typedArrayFrom = function from(source /* , mapfn, thisArg */) {\n\t  var O = toObject(source);\n\t  var argumentsLength = arguments.length;\n\t  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n\t  var mapping = mapfn !== undefined;\n\t  var iteratorMethod = getIteratorMethod(O);\n\t  var i, length, result, step, iterator, next;\n\t  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {\n\t    iterator = iteratorMethod.call(O);\n\t    next = iterator.next;\n\t    O = [];\n\t    while (!(step = next.call(iterator)).done) {\n\t      O.push(step.value);\n\t    }\n\t  }\n\t  if (mapping && argumentsLength > 2) {\n\t    mapfn = functionBindContext(mapfn, arguments[2], 2);\n\t  }\n\t  length = toLength(O.length);\n\t  result = new (aTypedArrayConstructor$1(this))(length);\n\t  for (i = 0; length > i; i++) {\n\t    result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t  }\n\t  return result;\n\t};\n\n\tvar typedArrayConstructor = createCommonjsModule(function (module) {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tvar getOwnPropertyNames = objectGetOwnPropertyNames.f;\n\n\tvar forEach = arrayIteration.forEach;\n\n\n\n\n\n\n\tvar getInternalState = internalState.get;\n\tvar setInternalState = internalState.set;\n\tvar nativeDefineProperty = objectDefineProperty.f;\n\tvar nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n\tvar round = Math.round;\n\tvar RangeError = global_1.RangeError;\n\tvar ArrayBuffer = arrayBuffer.ArrayBuffer;\n\tvar DataView = arrayBuffer.DataView;\n\tvar NATIVE_ARRAY_BUFFER_VIEWS = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;\n\tvar TYPED_ARRAY_TAG = arrayBufferViewCore.TYPED_ARRAY_TAG;\n\tvar TypedArray = arrayBufferViewCore.TypedArray;\n\tvar TypedArrayPrototype = arrayBufferViewCore.TypedArrayPrototype;\n\tvar aTypedArrayConstructor = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar isTypedArray = arrayBufferViewCore.isTypedArray;\n\tvar BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n\tvar WRONG_LENGTH = 'Wrong length';\n\n\tvar fromList = function (C, list) {\n\t  var index = 0;\n\t  var length = list.length;\n\t  var result = new (aTypedArrayConstructor(C))(length);\n\t  while (length > index) result[index] = list[index++];\n\t  return result;\n\t};\n\n\tvar addGetter = function (it, key) {\n\t  nativeDefineProperty(it, key, { get: function () {\n\t    return getInternalState(this)[key];\n\t  } });\n\t};\n\n\tvar isArrayBuffer = function (it) {\n\t  var klass;\n\t  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';\n\t};\n\n\tvar isTypedArrayIndex = function (target, key) {\n\t  return isTypedArray(target)\n\t    && typeof key != 'symbol'\n\t    && key in target\n\t    && String(+key) == String(key);\n\t};\n\n\tvar wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {\n\t  return isTypedArrayIndex(target, key = toPrimitive(key, true))\n\t    ? createPropertyDescriptor(2, target[key])\n\t    : nativeGetOwnPropertyDescriptor(target, key);\n\t};\n\n\tvar wrappedDefineProperty = function defineProperty(target, key, descriptor) {\n\t  if (isTypedArrayIndex(target, key = toPrimitive(key, true))\n\t    && isObject(descriptor)\n\t    && has(descriptor, 'value')\n\t    && !has(descriptor, 'get')\n\t    && !has(descriptor, 'set')\n\t    // TODO: add validation descriptor w/o calling accessors\n\t    && !descriptor.configurable\n\t    && (!has(descriptor, 'writable') || descriptor.writable)\n\t    && (!has(descriptor, 'enumerable') || descriptor.enumerable)\n\t  ) {\n\t    target[key] = descriptor.value;\n\t    return target;\n\t  } return nativeDefineProperty(target, key, descriptor);\n\t};\n\n\tif (descriptors) {\n\t  if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n\t    objectGetOwnPropertyDescriptor.f = wrappedGetOwnPropertyDescriptor;\n\t    objectDefineProperty.f = wrappedDefineProperty;\n\t    addGetter(TypedArrayPrototype, 'buffer');\n\t    addGetter(TypedArrayPrototype, 'byteOffset');\n\t    addGetter(TypedArrayPrototype, 'byteLength');\n\t    addGetter(TypedArrayPrototype, 'length');\n\t  }\n\n\t  _export({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {\n\t    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,\n\t    defineProperty: wrappedDefineProperty\n\t  });\n\n\t  module.exports = function (TYPE, wrapper, CLAMPED) {\n\t    var BYTES = TYPE.match(/\\d+$/)[0] / 8;\n\t    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';\n\t    var GETTER = 'get' + TYPE;\n\t    var SETTER = 'set' + TYPE;\n\t    var NativeTypedArrayConstructor = global_1[CONSTRUCTOR_NAME];\n\t    var TypedArrayConstructor = NativeTypedArrayConstructor;\n\t    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;\n\t    var exported = {};\n\n\t    var getter = function (that, index) {\n\t      var data = getInternalState(that);\n\t      return data.view[GETTER](index * BYTES + data.byteOffset, true);\n\t    };\n\n\t    var setter = function (that, index, value) {\n\t      var data = getInternalState(that);\n\t      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;\n\t      data.view[SETTER](index * BYTES + data.byteOffset, value, true);\n\t    };\n\n\t    var addElement = function (that, index) {\n\t      nativeDefineProperty(that, index, {\n\t        get: function () {\n\t          return getter(this, index);\n\t        },\n\t        set: function (value) {\n\t          return setter(this, index, value);\n\t        },\n\t        enumerable: true\n\t      });\n\t    };\n\n\t    if (!NATIVE_ARRAY_BUFFER_VIEWS) {\n\t      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {\n\t        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);\n\t        var index = 0;\n\t        var byteOffset = 0;\n\t        var buffer, byteLength, length;\n\t        if (!isObject(data)) {\n\t          length = toIndex(data);\n\t          byteLength = length * BYTES;\n\t          buffer = new ArrayBuffer(byteLength);\n\t        } else if (isArrayBuffer(data)) {\n\t          buffer = data;\n\t          byteOffset = toOffset(offset, BYTES);\n\t          var $len = data.byteLength;\n\t          if ($length === undefined) {\n\t            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n\t            byteLength = $len - byteOffset;\n\t            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n\t          } else {\n\t            byteLength = toLength($length) * BYTES;\n\t            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);\n\t          }\n\t          length = byteLength / BYTES;\n\t        } else if (isTypedArray(data)) {\n\t          return fromList(TypedArrayConstructor, data);\n\t        } else {\n\t          return typedArrayFrom.call(TypedArrayConstructor, data);\n\t        }\n\t        setInternalState(that, {\n\t          buffer: buffer,\n\t          byteOffset: byteOffset,\n\t          byteLength: byteLength,\n\t          length: length,\n\t          view: new DataView(buffer)\n\t        });\n\t        while (index < length) addElement(that, index++);\n\t      });\n\n\t      if (objectSetPrototypeOf) objectSetPrototypeOf(TypedArrayConstructor, TypedArray);\n\t      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = objectCreate(TypedArrayPrototype);\n\t    } else if (typedArrayConstructorsRequireWrappers) {\n\t      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {\n\t        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);\n\t        return inheritIfRequired(function () {\n\t          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));\n\t          if (isArrayBuffer(data)) return $length !== undefined\n\t            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)\n\t            : typedArrayOffset !== undefined\n\t              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))\n\t              : new NativeTypedArrayConstructor(data);\n\t          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);\n\t          return typedArrayFrom.call(TypedArrayConstructor, data);\n\t        }(), dummy, TypedArrayConstructor);\n\t      });\n\n\t      if (objectSetPrototypeOf) objectSetPrototypeOf(TypedArrayConstructor, TypedArray);\n\t      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {\n\t        if (!(key in TypedArrayConstructor)) {\n\t          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);\n\t        }\n\t      });\n\t      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;\n\t    }\n\n\t    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {\n\t      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);\n\t    }\n\n\t    if (TYPED_ARRAY_TAG) {\n\t      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);\n\t    }\n\n\t    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;\n\n\t    _export({\n\t      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS\n\t    }, exported);\n\n\t    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {\n\t      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);\n\t    }\n\n\t    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {\n\t      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);\n\t    }\n\n\t    setSpecies(CONSTRUCTOR_NAME);\n\t  };\n\t} else module.exports = function () { /* empty */ };\n\t});\n\n\t// `Uint8Array` constructor\n\t// https://tc39.es/ecma262/#sec-typedarray-objects\n\ttypedArrayConstructor('Uint8', function (init) {\n\t  return function Uint8Array(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t});\n\n\tvar min$5 = Math.min;\n\n\t// `Array.prototype.copyWithin` method implementation\n\t// https://tc39.es/ecma262/#sec-array.prototype.copywithin\n\tvar arrayCopyWithin = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n\t  var O = toObject(this);\n\t  var len = toLength(O.length);\n\t  var to = toAbsoluteIndex(target, len);\n\t  var from = toAbsoluteIndex(start, len);\n\t  var end = arguments.length > 2 ? arguments[2] : undefined;\n\t  var count = min$5((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n\t  var inc = 1;\n\t  if (from < to && to < from + count) {\n\t    inc = -1;\n\t    from += count - 1;\n\t    to += count - 1;\n\t  }\n\t  while (count-- > 0) {\n\t    if (from in O) O[to] = O[from];\n\t    else delete O[to];\n\t    to += inc;\n\t    from += inc;\n\t  } return O;\n\t};\n\n\tvar aTypedArray$1 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$1 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.copyWithin` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin\n\texportTypedArrayMethod$1('copyWithin', function copyWithin(target, start /* , end */) {\n\t  return arrayCopyWithin.call(aTypedArray$1(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t});\n\n\tvar $every = arrayIteration.every;\n\n\tvar aTypedArray$2 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$2 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.every` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every\n\texportTypedArrayMethod$2('every', function every(callbackfn /* , thisArg */) {\n\t  return $every(aTypedArray$2(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$3 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$3 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.fill` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill\n\t// eslint-disable-next-line no-unused-vars\n\texportTypedArrayMethod$3('fill', function fill(value /* , start, end */) {\n\t  return arrayFill.apply(aTypedArray$3(this), arguments);\n\t});\n\n\tvar $filter$1 = arrayIteration.filter;\n\n\n\tvar aTypedArray$4 = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$2 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$4 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.filter` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter\n\texportTypedArrayMethod$4('filter', function filter(callbackfn /* , thisArg */) {\n\t  var list = $filter$1(aTypedArray$4(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t  var C = speciesConstructor(this, this.constructor);\n\t  var index = 0;\n\t  var length = list.length;\n\t  var result = new (aTypedArrayConstructor$2(C))(length);\n\t  while (length > index) result[index] = list[index++];\n\t  return result;\n\t});\n\n\tvar $find = arrayIteration.find;\n\n\tvar aTypedArray$5 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$5 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.find` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find\n\texportTypedArrayMethod$5('find', function find(predicate /* , thisArg */) {\n\t  return $find(aTypedArray$5(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $findIndex = arrayIteration.findIndex;\n\n\tvar aTypedArray$6 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$6 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.findIndex` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex\n\texportTypedArrayMethod$6('findIndex', function findIndex(predicate /* , thisArg */) {\n\t  return $findIndex(aTypedArray$6(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $forEach$2 = arrayIteration.forEach;\n\n\tvar aTypedArray$7 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$7 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.forEach` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach\n\texportTypedArrayMethod$7('forEach', function forEach(callbackfn /* , thisArg */) {\n\t  $forEach$2(aTypedArray$7(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $includes$1 = arrayIncludes.includes;\n\n\tvar aTypedArray$8 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$8 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.includes` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes\n\texportTypedArrayMethod$8('includes', function includes(searchElement /* , fromIndex */) {\n\t  return $includes$1(aTypedArray$8(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $indexOf = arrayIncludes.indexOf;\n\n\tvar aTypedArray$9 = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$9 = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.indexOf` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof\n\texportTypedArrayMethod$9('indexOf', function indexOf(searchElement /* , fromIndex */) {\n\t  return $indexOf(aTypedArray$9(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar ITERATOR$5 = wellKnownSymbol('iterator');\n\tvar Uint8Array$1 = global_1.Uint8Array;\n\tvar arrayValues = es_array_iterator.values;\n\tvar arrayKeys = es_array_iterator.keys;\n\tvar arrayEntries = es_array_iterator.entries;\n\tvar aTypedArray$a = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$a = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar nativeTypedArrayIterator = Uint8Array$1 && Uint8Array$1.prototype[ITERATOR$5];\n\n\tvar CORRECT_ITER_NAME = !!nativeTypedArrayIterator\n\t  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);\n\n\tvar typedArrayValues = function values() {\n\t  return arrayValues.call(aTypedArray$a(this));\n\t};\n\n\t// `%TypedArray%.prototype.entries` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries\n\texportTypedArrayMethod$a('entries', function entries() {\n\t  return arrayEntries.call(aTypedArray$a(this));\n\t});\n\t// `%TypedArray%.prototype.keys` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys\n\texportTypedArrayMethod$a('keys', function keys() {\n\t  return arrayKeys.call(aTypedArray$a(this));\n\t});\n\t// `%TypedArray%.prototype.values` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values\n\texportTypedArrayMethod$a('values', typedArrayValues, !CORRECT_ITER_NAME);\n\t// `%TypedArray%.prototype[@@iterator]` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator\n\texportTypedArrayMethod$a(ITERATOR$5, typedArrayValues, !CORRECT_ITER_NAME);\n\n\tvar aTypedArray$b = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$b = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $join = [].join;\n\n\t// `%TypedArray%.prototype.join` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join\n\t// eslint-disable-next-line no-unused-vars\n\texportTypedArrayMethod$b('join', function join(separator) {\n\t  return $join.apply(aTypedArray$b(this), arguments);\n\t});\n\n\tvar min$6 = Math.min;\n\tvar nativeLastIndexOf = [].lastIndexOf;\n\tvar NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;\n\tvar STRICT_METHOD$2 = arrayMethodIsStrict('lastIndexOf');\n\t// For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method\n\tvar USES_TO_LENGTH$6 = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\tvar FORCED$3 = NEGATIVE_ZERO || !STRICT_METHOD$2 || !USES_TO_LENGTH$6;\n\n\t// `Array.prototype.lastIndexOf` method implementation\n\t// https://tc39.es/ecma262/#sec-array.prototype.lastindexof\n\tvar arrayLastIndexOf = FORCED$3 ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {\n\t  // convert -0 to +0\n\t  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;\n\t  var O = toIndexedObject(this);\n\t  var length = toLength(O.length);\n\t  var index = length - 1;\n\t  if (arguments.length > 1) index = min$6(index, toInteger(arguments[1]));\n\t  if (index < 0) index = length + index;\n\t  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;\n\t  return -1;\n\t} : nativeLastIndexOf;\n\n\tvar aTypedArray$c = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$c = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.lastIndexOf` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof\n\t// eslint-disable-next-line no-unused-vars\n\texportTypedArrayMethod$c('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {\n\t  return arrayLastIndexOf.apply(aTypedArray$c(this), arguments);\n\t});\n\n\tvar $map$1 = arrayIteration.map;\n\n\n\tvar aTypedArray$d = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$3 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$d = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.map` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map\n\texportTypedArrayMethod$d('map', function map(mapfn /* , thisArg */) {\n\t  return $map$1(aTypedArray$d(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {\n\t    return new (aTypedArrayConstructor$3(speciesConstructor(O, O.constructor)))(length);\n\t  });\n\t});\n\n\t// `Array.prototype.{ reduce, reduceRight }` methods implementation\n\tvar createMethod$4 = function (IS_RIGHT) {\n\t  return function (that, callbackfn, argumentsLength, memo) {\n\t    aFunction$1(callbackfn);\n\t    var O = toObject(that);\n\t    var self = indexedObject(O);\n\t    var length = toLength(O.length);\n\t    var index = IS_RIGHT ? length - 1 : 0;\n\t    var i = IS_RIGHT ? -1 : 1;\n\t    if (argumentsLength < 2) while (true) {\n\t      if (index in self) {\n\t        memo = self[index];\n\t        index += i;\n\t        break;\n\t      }\n\t      index += i;\n\t      if (IS_RIGHT ? index < 0 : length <= index) {\n\t        throw TypeError('Reduce of empty array with no initial value');\n\t      }\n\t    }\n\t    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n\t      memo = callbackfn(memo, self[index], index, O);\n\t    }\n\t    return memo;\n\t  };\n\t};\n\n\tvar arrayReduce = {\n\t  // `Array.prototype.reduce` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n\t  left: createMethod$4(false),\n\t  // `Array.prototype.reduceRight` method\n\t  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n\t  right: createMethod$4(true)\n\t};\n\n\tvar $reduce = arrayReduce.left;\n\n\tvar aTypedArray$e = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$e = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.reduce` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce\n\texportTypedArrayMethod$e('reduce', function reduce(callbackfn /* , initialValue */) {\n\t  return $reduce(aTypedArray$e(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar $reduceRight = arrayReduce.right;\n\n\tvar aTypedArray$f = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$f = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.reduceRicht` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright\n\texportTypedArrayMethod$f('reduceRight', function reduceRight(callbackfn /* , initialValue */) {\n\t  return $reduceRight(aTypedArray$f(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$g = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$g = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar floor$3 = Math.floor;\n\n\t// `%TypedArray%.prototype.reverse` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse\n\texportTypedArrayMethod$g('reverse', function reverse() {\n\t  var that = this;\n\t  var length = aTypedArray$g(that).length;\n\t  var middle = floor$3(length / 2);\n\t  var index = 0;\n\t  var value;\n\t  while (index < middle) {\n\t    value = that[index];\n\t    that[index++] = that[--length];\n\t    that[length] = value;\n\t  } return that;\n\t});\n\n\tvar aTypedArray$h = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$h = arrayBufferViewCore.exportTypedArrayMethod;\n\n\tvar FORCED$4 = fails(function () {\n\t  // eslint-disable-next-line no-undef\n\t  new Int8Array(1).set({});\n\t});\n\n\t// `%TypedArray%.prototype.set` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\n\texportTypedArrayMethod$h('set', function set(arrayLike /* , offset */) {\n\t  aTypedArray$h(this);\n\t  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n\t  var length = this.length;\n\t  var src = toObject(arrayLike);\n\t  var len = toLength(src.length);\n\t  var index = 0;\n\t  if (len + offset > length) throw RangeError('Wrong length');\n\t  while (index < len) this[offset + index] = src[index++];\n\t}, FORCED$4);\n\n\tvar aTypedArray$i = arrayBufferViewCore.aTypedArray;\n\tvar aTypedArrayConstructor$4 = arrayBufferViewCore.aTypedArrayConstructor;\n\tvar exportTypedArrayMethod$i = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $slice = [].slice;\n\n\tvar FORCED$5 = fails(function () {\n\t  // eslint-disable-next-line no-undef\n\t  new Int8Array(1).slice();\n\t});\n\n\t// `%TypedArray%.prototype.slice` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice\n\texportTypedArrayMethod$i('slice', function slice(start, end) {\n\t  var list = $slice.call(aTypedArray$i(this), start, end);\n\t  var C = speciesConstructor(this, this.constructor);\n\t  var index = 0;\n\t  var length = list.length;\n\t  var result = new (aTypedArrayConstructor$4(C))(length);\n\t  while (length > index) result[index] = list[index++];\n\t  return result;\n\t}, FORCED$5);\n\n\tvar $some = arrayIteration.some;\n\n\tvar aTypedArray$j = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$j = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.some` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some\n\texportTypedArrayMethod$j('some', function some(callbackfn /* , thisArg */) {\n\t  return $some(aTypedArray$j(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t});\n\n\tvar aTypedArray$k = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$k = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $sort = [].sort;\n\n\t// `%TypedArray%.prototype.sort` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n\texportTypedArrayMethod$k('sort', function sort(comparefn) {\n\t  return $sort.call(aTypedArray$k(this), comparefn);\n\t});\n\n\tvar aTypedArray$l = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$l = arrayBufferViewCore.exportTypedArrayMethod;\n\n\t// `%TypedArray%.prototype.subarray` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray\n\texportTypedArrayMethod$l('subarray', function subarray(begin, end) {\n\t  var O = aTypedArray$l(this);\n\t  var length = O.length;\n\t  var beginIndex = toAbsoluteIndex(begin, length);\n\t  return new (speciesConstructor(O, O.constructor))(\n\t    O.buffer,\n\t    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,\n\t    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)\n\t  );\n\t});\n\n\tvar Int8Array$3 = global_1.Int8Array;\n\tvar aTypedArray$m = arrayBufferViewCore.aTypedArray;\n\tvar exportTypedArrayMethod$m = arrayBufferViewCore.exportTypedArrayMethod;\n\tvar $toLocaleString = [].toLocaleString;\n\tvar $slice$1 = [].slice;\n\n\t// iOS Safari 6.x fails here\n\tvar TO_LOCALE_STRING_BUG = !!Int8Array$3 && fails(function () {\n\t  $toLocaleString.call(new Int8Array$3(1));\n\t});\n\n\tvar FORCED$6 = fails(function () {\n\t  return [1, 2].toLocaleString() != new Int8Array$3([1, 2]).toLocaleString();\n\t}) || !fails(function () {\n\t  Int8Array$3.prototype.toLocaleString.call([1, 2]);\n\t});\n\n\t// `%TypedArray%.prototype.toLocaleString` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring\n\texportTypedArrayMethod$m('toLocaleString', function toLocaleString() {\n\t  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice$1.call(aTypedArray$m(this)) : aTypedArray$m(this), arguments);\n\t}, FORCED$6);\n\n\tvar exportTypedArrayMethod$n = arrayBufferViewCore.exportTypedArrayMethod;\n\n\n\n\tvar Uint8Array$2 = global_1.Uint8Array;\n\tvar Uint8ArrayPrototype = Uint8Array$2 && Uint8Array$2.prototype || {};\n\tvar arrayToString = [].toString;\n\tvar arrayJoin = [].join;\n\n\tif (fails(function () { arrayToString.call({}); })) {\n\t  arrayToString = function toString() {\n\t    return arrayJoin.call(this);\n\t  };\n\t}\n\n\tvar IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;\n\n\t// `%TypedArray%.prototype.toString` method\n\t// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring\n\texportTypedArrayMethod$n('toString', arrayToString, IS_NOT_ARRAY_METHOD);\n\n\t// `URL.prototype.toJSON` method\n\t// https://url.spec.whatwg.org/#dom-url-tojson\n\t_export({ target: 'URL', proto: true, enumerable: true }, {\n\t  toJSON: function toJSON() {\n\t    return URL.prototype.toString.call(this);\n\t  }\n\t});\n\n\tvar lookup = [];\n\tvar revLookup = [];\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\tvar inited = false;\n\n\tfunction init() {\n\t  inited = true;\n\t  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t  for (var i = 0, len = code.length; i < len; ++i) {\n\t    lookup[i] = code[i];\n\t    revLookup[code.charCodeAt(i)] = i;\n\t  }\n\n\t  revLookup['-'.charCodeAt(0)] = 62;\n\t  revLookup['_'.charCodeAt(0)] = 63;\n\t}\n\n\tfunction toByteArray(b64) {\n\t  if (!inited) {\n\t    init();\n\t  }\n\n\t  var i, j, l, tmp, placeHolders, arr;\n\t  var len = b64.length;\n\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4');\n\t  } // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\n\n\t  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0; // base64 is 4/3 + up to two characters of the original data\n\n\t  arr = new Arr(len * 3 / 4 - placeHolders); // if there are placeholders, only get up to the last complete 4 chars\n\n\t  l = placeHolders > 0 ? len - 4 : len;\n\t  var L = 0;\n\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n\t    arr[L++] = tmp >> 16 & 0xFF;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\n\t  if (placeHolders === 2) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n\t    arr[L++] = tmp & 0xFF;\n\t  } else if (placeHolders === 1) {\n\t    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\n\t  return arr;\n\t}\n\n\tfunction tripletToBase64(num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n\t}\n\n\tfunction encodeChunk(uint8, start, end) {\n\t  var tmp;\n\t  var output = [];\n\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t    output.push(tripletToBase64(tmp));\n\t  }\n\n\t  return output.join('');\n\t}\n\n\tfunction fromByteArray(uint8) {\n\t  if (!inited) {\n\t    init();\n\t  }\n\n\t  var tmp;\n\t  var len = uint8.length;\n\t  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n\t  var output = '';\n\t  var parts = [];\n\t  var maxChunkLength = 16383; // must be multiple of 3\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n\t  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1];\n\t    output += lookup[tmp >> 2];\n\t    output += lookup[tmp << 4 & 0x3F];\n\t    output += '==';\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n\t    output += lookup[tmp >> 10];\n\t    output += lookup[tmp >> 4 & 0x3F];\n\t    output += lookup[tmp << 2 & 0x3F];\n\t    output += '=';\n\t  }\n\n\t  parts.push(output);\n\t  return parts.join('');\n\t}\n\n\tfunction read(buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = -7;\n\t  var i = isLE ? nBytes - 1 : 0;\n\t  var d = isLE ? -1 : 1;\n\t  var s = buffer[offset + i];\n\t  i += d;\n\t  e = s & (1 << -nBits) - 1;\n\t  s >>= -nBits;\n\t  nBits += eLen;\n\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : (s ? -1 : 1) * Infinity;\n\t  } else {\n\t    m = m + Math.pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t}\n\tfunction write(buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n\t  var i = isLE ? 0 : nBytes - 1;\n\t  var d = isLE ? 1 : -1;\n\t  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t  value = Math.abs(value);\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2);\n\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias);\n\t    }\n\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n\t  buffer[offset + i - d] |= s * 128;\n\t}\n\n\tvar toString$2 = {}.toString;\n\tvar isArray$1 = Array.isArray || function (arr) {\n\t  return toString$2.call(arr) == '[object Array]';\n\t};\n\n\tvar INSPECT_MAX_BYTES = 50;\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\n\tBuffer.TYPED_ARRAY_SUPPORT = global$2.TYPED_ARRAY_SUPPORT !== undefined ? global$2.TYPED_ARRAY_SUPPORT : true;\n\n\tfunction kMaxLength() {\n\t  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n\t}\n\n\tfunction createBuffer(that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length');\n\t  }\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length);\n\t    that.__proto__ = Buffer.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length);\n\t    }\n\n\t    that.length = length;\n\t  }\n\n\t  return that;\n\t}\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\n\n\tfunction Buffer(arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length);\n\t  } // Common case.\n\n\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error('If encoding is specified then the first argument must be a string');\n\t    }\n\n\t    return allocUnsafe(this, arg);\n\t  }\n\n\t  return from(this, arg, encodingOrOffset, length);\n\t}\n\tBuffer.poolSize = 8192; // not used by this implementation\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype;\n\t  return arr;\n\t};\n\n\tfunction from(that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number');\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length);\n\t  }\n\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset);\n\t  }\n\n\t  return fromObject(that, value);\n\t}\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\n\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length);\n\t};\n\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype;\n\t  Buffer.__proto__ = Uint8Array;\n\t}\n\n\tfunction assertSize(size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number');\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative');\n\t  }\n\t}\n\n\tfunction alloc(that, size, fill, encoding) {\n\t  assertSize(size);\n\n\t  if (size <= 0) {\n\t    return createBuffer(that, size);\n\t  }\n\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n\t  }\n\n\t  return createBuffer(that, size);\n\t}\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\n\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding);\n\t};\n\n\tfunction allocUnsafe(that, size) {\n\t  assertSize(size);\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0;\n\t    }\n\t  }\n\n\t  return that;\n\t}\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\n\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size);\n\t};\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\n\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size);\n\t};\n\n\tfunction fromString(that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8';\n\t  }\n\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding');\n\t  }\n\n\t  var length = byteLength(string, encoding) | 0;\n\t  that = createBuffer(that, length);\n\t  var actual = that.write(string, encoding);\n\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual);\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromArrayLike(that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n\t  that = createBuffer(that, length);\n\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255;\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromArrayBuffer(that, array, byteOffset, length) {\n\t  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds');\n\t  }\n\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds');\n\t  }\n\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array);\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset);\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length);\n\t  }\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array;\n\t    that.__proto__ = Buffer.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array);\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromObject(that, obj) {\n\t  if (internalIsBuffer(obj)) {\n\t    var len = checked(obj.length) | 0;\n\t    that = createBuffer(that, len);\n\n\t    if (that.length === 0) {\n\t      return that;\n\t    }\n\n\t    obj.copy(that, 0, 0, len);\n\t    return that;\n\t  }\n\n\t  if (obj) {\n\t    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0);\n\t      }\n\n\t      return fromArrayLike(that, obj);\n\t    }\n\n\t    if (obj.type === 'Buffer' && isArray$1(obj.data)) {\n\t      return fromArrayLike(that, obj.data);\n\t    }\n\t  }\n\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n\t}\n\n\tfunction checked(length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n\t  }\n\n\t  return length | 0;\n\t}\n\tBuffer.isBuffer = isBuffer;\n\n\tfunction internalIsBuffer(b) {\n\t  return !!(b != null && b._isBuffer);\n\t}\n\n\tBuffer.compare = function compare(a, b) {\n\t  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers');\n\t  }\n\n\t  if (a === b) return 0;\n\t  var x = a.length;\n\t  var y = b.length;\n\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t};\n\n\tBuffer.isEncoding = function isEncoding(encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true;\n\n\t    default:\n\t      return false;\n\t  }\n\t};\n\n\tBuffer.concat = function concat(list, length) {\n\t  if (!isArray$1(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t  }\n\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0);\n\t  }\n\n\t  var i;\n\n\t  if (length === undefined) {\n\t    length = 0;\n\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length;\n\t    }\n\t  }\n\n\t  var buffer = Buffer.allocUnsafe(length);\n\t  var pos = 0;\n\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i];\n\n\t    if (!internalIsBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t    }\n\n\t    buf.copy(buffer, pos);\n\t    pos += buf.length;\n\t  }\n\n\t  return buffer;\n\t};\n\n\tfunction byteLength(string, encoding) {\n\t  if (internalIsBuffer(string)) {\n\t    return string.length;\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength;\n\t  }\n\n\t  if (typeof string !== 'string') {\n\t    string = '' + string;\n\t  }\n\n\t  var len = string.length;\n\t  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n\t  var loweredCase = false;\n\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len;\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length;\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2;\n\n\t      case 'hex':\n\t        return len >>> 1;\n\n\t      case 'base64':\n\t        return base64ToBytes(string).length;\n\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\n\tBuffer.byteLength = byteLength;\n\n\tfunction slowToString(encoding, start, end) {\n\t  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n\t  if (start === undefined || start < 0) {\n\t    start = 0;\n\t  } // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\n\n\t  if (start > this.length) {\n\t    return '';\n\t  }\n\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length;\n\t  }\n\n\t  if (end <= 0) {\n\t    return '';\n\t  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n\t  end >>>= 0;\n\t  start >>>= 0;\n\n\t  if (end <= start) {\n\t    return '';\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end);\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end);\n\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end);\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end);\n\n\t      case 'base64':\n\t        return base64Slice(this, start, end);\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end);\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = (encoding + '').toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\n\n\tBuffer.prototype._isBuffer = true;\n\n\tfunction swap(b, n, m) {\n\t  var i = b[n];\n\t  b[n] = b[m];\n\t  b[m] = i;\n\t}\n\n\tBuffer.prototype.swap16 = function swap16() {\n\t  var len = this.length;\n\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer.prototype.swap32 = function swap32() {\n\t  var len = this.length;\n\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3);\n\t    swap(this, i + 1, i + 2);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer.prototype.swap64 = function swap64() {\n\t  var len = this.length;\n\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7);\n\t    swap(this, i + 1, i + 6);\n\t    swap(this, i + 2, i + 5);\n\t    swap(this, i + 3, i + 4);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer.prototype.toString = function toString() {\n\t  var length = this.length | 0;\n\t  if (length === 0) return '';\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length);\n\t  return slowToString.apply(this, arguments);\n\t};\n\n\tBuffer.prototype.equals = function equals(b) {\n\t  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer');\n\t  if (this === b) return true;\n\t  return Buffer.compare(this, b) === 0;\n\t};\n\n\tBuffer.prototype.inspect = function inspect() {\n\t  var str = '';\n\t  var max = INSPECT_MAX_BYTES;\n\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n\t    if (this.length > max) str += ' ... ';\n\t  }\n\n\t  return '<Buffer ' + str + '>';\n\t};\n\n\tBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n\t  if (!internalIsBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer');\n\t  }\n\n\t  if (start === undefined) {\n\t    start = 0;\n\t  }\n\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0;\n\t  }\n\n\t  if (thisStart === undefined) {\n\t    thisStart = 0;\n\t  }\n\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length;\n\t  }\n\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index');\n\t  }\n\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0;\n\t  }\n\n\t  if (thisStart >= thisEnd) {\n\t    return -1;\n\t  }\n\n\t  if (start >= end) {\n\t    return 1;\n\t  }\n\n\t  start >>>= 0;\n\t  end >>>= 0;\n\t  thisStart >>>= 0;\n\t  thisEnd >>>= 0;\n\t  if (this === target) return 0;\n\t  var x = thisEnd - thisStart;\n\t  var y = end - start;\n\t  var len = Math.min(x, y);\n\t  var thisCopy = this.slice(thisStart, thisEnd);\n\t  var targetCopy = target.slice(start, end);\n\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i];\n\t      y = targetCopy[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\n\n\tfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset;\n\t    byteOffset = 0;\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff;\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000;\n\t  }\n\n\t  byteOffset = +byteOffset; // Coerce to Number.\n\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : buffer.length - 1;\n\t  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1;else byteOffset = buffer.length - 1;\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0;else return -1;\n\t  } // Normalize val\n\n\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding);\n\t  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n\t  if (internalIsBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1;\n\t    }\n\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF; // Search for a byte value [0-255]\n\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n\t      }\n\t    }\n\n\t    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer');\n\t}\n\n\tfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1;\n\t  var arrLength = arr.length;\n\t  var valLength = val.length;\n\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase();\n\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1;\n\t      }\n\n\t      indexSize = 2;\n\t      arrLength /= 2;\n\t      valLength /= 2;\n\t      byteOffset /= 2;\n\t    }\n\t  }\n\n\t  function read(buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i];\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize);\n\t    }\n\t  }\n\n\t  var i;\n\n\t  if (dir) {\n\t    var foundIndex = -1;\n\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i;\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex;\n\t        foundIndex = -1;\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true;\n\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (found) return i;\n\t    }\n\t  }\n\n\t  return -1;\n\t}\n\n\tBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1;\n\t};\n\n\tBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n\t};\n\n\tBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n\t};\n\n\tfunction hexWrite(buf, string, offset, length) {\n\t  offset = Number(offset) || 0;\n\t  var remaining = buf.length - offset;\n\n\t  if (!length) {\n\t    length = remaining;\n\t  } else {\n\t    length = Number(length);\n\n\t    if (length > remaining) {\n\t      length = remaining;\n\t    }\n\t  } // must be an even number of digits\n\n\n\t  var strLen = string.length;\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2;\n\t  }\n\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16);\n\t    if (isNaN(parsed)) return i;\n\t    buf[offset + i] = parsed;\n\t  }\n\n\t  return i;\n\t}\n\n\tfunction utf8Write(buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n\t}\n\n\tfunction asciiWrite(buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length);\n\t}\n\n\tfunction latin1Write(buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length);\n\t}\n\n\tfunction base64Write(buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length);\n\t}\n\n\tfunction ucs2Write(buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n\t}\n\n\tBuffer.prototype.write = function write(string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8';\n\t    length = this.length;\n\t    offset = 0; // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset;\n\t    length = this.length;\n\t    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0;\n\n\t    if (isFinite(length)) {\n\t      length = length | 0;\n\t      if (encoding === undefined) encoding = 'utf8';\n\t    } else {\n\t      encoding = length;\n\t      length = undefined;\n\t    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n\t  } else {\n\t    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n\t  }\n\n\t  var remaining = this.length - offset;\n\t  if (length === undefined || length > remaining) length = remaining;\n\n\t  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds');\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\t  var loweredCase = false;\n\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length);\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length);\n\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length);\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length);\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length);\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length);\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t};\n\n\tBuffer.prototype.toJSON = function toJSON() {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  };\n\t};\n\n\tfunction base64Slice(buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return fromByteArray(buf);\n\t  } else {\n\t    return fromByteArray(buf.slice(start, end));\n\t  }\n\t}\n\n\tfunction utf8Slice(buf, start, end) {\n\t  end = Math.min(buf.length, end);\n\t  var res = [];\n\t  var i = start;\n\n\t  while (i < end) {\n\t    var firstByte = buf[i];\n\t    var codePoint = null;\n\t    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte;\n\t          }\n\n\t          break;\n\n\t        case 2:\n\t          secondByte = buf[i + 1];\n\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t          break;\n\n\t        case 3:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t          break;\n\n\t        case 4:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          fourthByte = buf[i + 3];\n\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t      }\n\t    }\n\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD;\n\t      bytesPerSequence = 1;\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000;\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n\t      codePoint = 0xDC00 | codePoint & 0x3FF;\n\t    }\n\n\t    res.push(codePoint);\n\t    i += bytesPerSequence;\n\t  }\n\n\t  return decodeCodePointsArray(res);\n\t} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\n\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\n\tfunction decodeCodePointsArray(codePoints) {\n\t  var len = codePoints.length;\n\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n\t  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n\t  var res = '';\n\t  var i = 0;\n\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n\t  }\n\n\t  return res;\n\t}\n\n\tfunction asciiSlice(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F);\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction latin1Slice(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i]);\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction hexSlice(buf, start, end) {\n\t  var len = buf.length;\n\t  if (!start || start < 0) start = 0;\n\t  if (!end || end < 0 || end > len) end = len;\n\t  var out = '';\n\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i]);\n\t  }\n\n\t  return out;\n\t}\n\n\tfunction utf16leSlice(buf, start, end) {\n\t  var bytes = buf.slice(start, end);\n\t  var res = '';\n\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n\t  }\n\n\t  return res;\n\t}\n\n\tBuffer.prototype.slice = function slice(start, end) {\n\t  var len = this.length;\n\t  start = ~~start;\n\t  end = end === undefined ? len : ~~end;\n\n\t  if (start < 0) {\n\t    start += len;\n\t    if (start < 0) start = 0;\n\t  } else if (start > len) {\n\t    start = len;\n\t  }\n\n\t  if (end < 0) {\n\t    end += len;\n\t    if (end < 0) end = 0;\n\t  } else if (end > len) {\n\t    end = len;\n\t  }\n\n\t  if (end < start) end = start;\n\t  var newBuf;\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end);\n\t    newBuf.__proto__ = Buffer.prototype;\n\t  } else {\n\t    var sliceLen = end - start;\n\t    newBuf = new Buffer(sliceLen, undefined);\n\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start];\n\t    }\n\t  }\n\n\t  return newBuf;\n\t};\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\n\n\tfunction checkOffset(offset, ext, length) {\n\t  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n\t}\n\n\tBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\n\t  return val;\n\t};\n\n\tBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length);\n\t  }\n\n\t  var val = this[offset + --byteLength];\n\t  var mul = 1;\n\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul;\n\t  }\n\n\t  return val;\n\t};\n\n\tBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  return this[offset];\n\t};\n\n\tBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return this[offset] | this[offset + 1] << 8;\n\t};\n\n\tBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  return this[offset] << 8 | this[offset + 1];\n\t};\n\n\tBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n\t};\n\n\tBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n\t};\n\n\tBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\n\t  mul *= 0x80;\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t  return val;\n\t};\n\n\tBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t  var i = byteLength;\n\t  var mul = 1;\n\t  var val = this[offset + --i];\n\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul;\n\t  }\n\n\t  mul *= 0x80;\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t  return val;\n\t};\n\n\tBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length);\n\t  if (!(this[offset] & 0x80)) return this[offset];\n\t  return (0xff - this[offset] + 1) * -1;\n\t};\n\n\tBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  var val = this[offset] | this[offset + 1] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\n\tBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length);\n\t  var val = this[offset + 1] | this[offset] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\n\tBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n\t};\n\n\tBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n\t};\n\n\tBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return read(this, offset, true, 23, 4);\n\t};\n\n\tBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length);\n\t  return read(this, offset, false, 23, 4);\n\t};\n\n\tBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return read(this, offset, true, 52, 8);\n\t};\n\n\tBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length);\n\t  return read(this, offset, false, 52, 8);\n\t};\n\n\tfunction checkInt(buf, value, offset, ext, max, min) {\n\t  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t}\n\n\tBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  var mul = 1;\n\t  var i = 0;\n\t  this[offset] = value & 0xFF;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  this[offset + i] = value & 0xFF;\n\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\n\tfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1;\n\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n\t  }\n\t}\n\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = value >>> 24;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  var i = 0;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset] = value & 0xFF;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1;\n\t    }\n\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset + i] = value & 0xFF;\n\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1;\n\t    }\n\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  if (value < 0) value = 0xff + value + 1;\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\n\tBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 3] = value >>> 24;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tfunction checkIEEE754(buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t  if (offset < 0) throw new RangeError('Index out of range');\n\t}\n\n\tfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4);\n\t  }\n\n\t  write(buf, value, offset, littleEndian, 23, 4);\n\t  return offset + 4;\n\t}\n\n\tBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert);\n\t};\n\n\tBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert);\n\t};\n\n\tfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8);\n\t  }\n\n\t  write(buf, value, offset, littleEndian, 52, 8);\n\t  return offset + 8;\n\t}\n\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert);\n\t};\n\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert);\n\t}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n\tBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n\t  if (!start) start = 0;\n\t  if (!end && end !== 0) end = this.length;\n\t  if (targetStart >= target.length) targetStart = target.length;\n\t  if (!targetStart) targetStart = 0;\n\t  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n\t  if (end === start) return 0;\n\t  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds');\n\t  }\n\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n\t  if (end > this.length) end = this.length;\n\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start;\n\t  }\n\n\t  var len = end - start;\n\t  var i;\n\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n\t  }\n\n\t  return len;\n\t}; // Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\n\n\tBuffer.prototype.fill = function fill(val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start;\n\t      start = 0;\n\t      end = this.length;\n\t    } else if (typeof end === 'string') {\n\t      encoding = end;\n\t      end = this.length;\n\t    }\n\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0);\n\n\t      if (code < 256) {\n\t        val = code;\n\t      }\n\t    }\n\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string');\n\t    }\n\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding);\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255;\n\t  } // Invalid ranges are not set to a default, so can range check early.\n\n\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index');\n\t  }\n\n\t  if (end <= start) {\n\t    return this;\n\t  }\n\n\t  start = start >>> 0;\n\t  end = end === undefined ? this.length : end >>> 0;\n\t  if (!val) val = 0;\n\t  var i;\n\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val;\n\t    }\n\t  } else {\n\t    var bytes = internalIsBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n\t    var len = bytes.length;\n\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len];\n\t    }\n\t  }\n\n\t  return this;\n\t}; // HELPER FUNCTIONS\n\t// ================\n\n\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\n\tfunction base64clean(str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n\t  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '=';\n\t  }\n\n\t  return str;\n\t}\n\n\tfunction stringtrim(str) {\n\t  if (str.trim) return str.trim();\n\t  return str.replace(/^\\s+|\\s+$/g, '');\n\t}\n\n\tfunction toHex(n) {\n\t  if (n < 16) return '0' + n.toString(16);\n\t  return n.toString(16);\n\t}\n\n\tfunction utf8ToBytes(string, units) {\n\t  units = units || Infinity;\n\t  var codePoint;\n\t  var length = string.length;\n\t  var leadSurrogate = null;\n\t  var bytes = [];\n\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i); // is surrogate component\n\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        } // valid lead\n\n\n\t        leadSurrogate = codePoint;\n\t        continue;\n\t      } // 2 leads in a row\n\n\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t        leadSurrogate = codePoint;\n\t        continue;\n\t      } // valid surrogate pair\n\n\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t    }\n\n\t    leadSurrogate = null; // encode utf8\n\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break;\n\t      bytes.push(codePoint);\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break;\n\t      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break;\n\t      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break;\n\t      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else {\n\t      throw new Error('Invalid code point');\n\t    }\n\t  }\n\n\t  return bytes;\n\t}\n\n\tfunction asciiToBytes(str) {\n\t  var byteArray = [];\n\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF);\n\t  }\n\n\t  return byteArray;\n\t}\n\n\tfunction utf16leToBytes(str, units) {\n\t  var c, hi, lo;\n\t  var byteArray = [];\n\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break;\n\t    c = str.charCodeAt(i);\n\t    hi = c >> 8;\n\t    lo = c % 256;\n\t    byteArray.push(lo);\n\t    byteArray.push(hi);\n\t  }\n\n\t  return byteArray;\n\t}\n\n\tfunction base64ToBytes(str) {\n\t  return toByteArray(base64clean(str));\n\t}\n\n\tfunction blitBuffer(src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if (i + offset >= dst.length || i >= src.length) break;\n\t    dst[i + offset] = src[i];\n\t  }\n\n\t  return i;\n\t}\n\n\tfunction isnan(val) {\n\t  return val !== val; // eslint-disable-line no-self-compare\n\t} // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n\t// The _isBuffer check is for Safari 5-7 support, because it's missing\n\t// Object.prototype.constructor. Remove this eventually\n\n\n\tfunction isBuffer(obj) {\n\t  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj));\n\t}\n\n\tfunction isFastBuffer(obj) {\n\t  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n\t} // For Node v0.10 support. Remove this eventually.\n\n\n\tfunction isSlowBuffer(obj) {\n\t  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0));\n\t}\n\n\t// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n\tfunction defaultSetTimout$1() {\n\t  throw new Error('setTimeout has not been defined');\n\t}\n\n\tfunction defaultClearTimeout$1() {\n\t  throw new Error('clearTimeout has not been defined');\n\t}\n\n\tvar cachedSetTimeout$1 = defaultSetTimout$1;\n\tvar cachedClearTimeout$1 = defaultClearTimeout$1;\n\n\tif (typeof global$2.setTimeout === 'function') {\n\t  cachedSetTimeout$1 = setTimeout;\n\t}\n\n\tif (typeof global$2.clearTimeout === 'function') {\n\t  cachedClearTimeout$1 = clearTimeout;\n\t}\n\n\tfunction runTimeout$1(fun) {\n\t  if (cachedSetTimeout$1 === setTimeout) {\n\t    //normal enviroments in sane situations\n\t    return setTimeout(fun, 0);\n\t  } // if setTimeout wasn't available but was latter defined\n\n\n\t  if ((cachedSetTimeout$1 === defaultSetTimout$1 || !cachedSetTimeout$1) && setTimeout) {\n\t    cachedSetTimeout$1 = setTimeout;\n\t    return setTimeout(fun, 0);\n\t  }\n\n\t  try {\n\t    // when when somebody has screwed with setTimeout but no I.E. maddness\n\t    return cachedSetTimeout$1(fun, 0);\n\t  } catch (e) {\n\t    try {\n\t      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t      return cachedSetTimeout$1.call(null, fun, 0);\n\t    } catch (e) {\n\t      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t      return cachedSetTimeout$1.call(this, fun, 0);\n\t    }\n\t  }\n\t}\n\n\tfunction runClearTimeout$1(marker) {\n\t  if (cachedClearTimeout$1 === clearTimeout) {\n\t    //normal enviroments in sane situations\n\t    return clearTimeout(marker);\n\t  } // if clearTimeout wasn't available but was latter defined\n\n\n\t  if ((cachedClearTimeout$1 === defaultClearTimeout$1 || !cachedClearTimeout$1) && clearTimeout) {\n\t    cachedClearTimeout$1 = clearTimeout;\n\t    return clearTimeout(marker);\n\t  }\n\n\t  try {\n\t    // when when somebody has screwed with setTimeout but no I.E. maddness\n\t    return cachedClearTimeout$1(marker);\n\t  } catch (e) {\n\t    try {\n\t      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t      return cachedClearTimeout$1.call(null, marker);\n\t    } catch (e) {\n\t      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t      return cachedClearTimeout$1.call(this, marker);\n\t    }\n\t  }\n\t}\n\n\tvar queue$1 = [];\n\tvar draining$1 = false;\n\tvar currentQueue$1;\n\tvar queueIndex$1 = -1;\n\n\tfunction cleanUpNextTick$1() {\n\t  if (!draining$1 || !currentQueue$1) {\n\t    return;\n\t  }\n\n\t  draining$1 = false;\n\n\t  if (currentQueue$1.length) {\n\t    queue$1 = currentQueue$1.concat(queue$1);\n\t  } else {\n\t    queueIndex$1 = -1;\n\t  }\n\n\t  if (queue$1.length) {\n\t    drainQueue$1();\n\t  }\n\t}\n\n\tfunction drainQueue$1() {\n\t  if (draining$1) {\n\t    return;\n\t  }\n\n\t  var timeout = runTimeout$1(cleanUpNextTick$1);\n\t  draining$1 = true;\n\t  var len = queue$1.length;\n\n\t  while (len) {\n\t    currentQueue$1 = queue$1;\n\t    queue$1 = [];\n\n\t    while (++queueIndex$1 < len) {\n\t      if (currentQueue$1) {\n\t        currentQueue$1[queueIndex$1].run();\n\t      }\n\t    }\n\n\t    queueIndex$1 = -1;\n\t    len = queue$1.length;\n\t  }\n\n\t  currentQueue$1 = null;\n\t  draining$1 = false;\n\t  runClearTimeout$1(timeout);\n\t}\n\n\tfunction nextTick$1(fun) {\n\t  var args = new Array(arguments.length - 1);\n\n\t  if (arguments.length > 1) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t  }\n\n\t  queue$1.push(new Item$1(fun, args));\n\n\t  if (queue$1.length === 1 && !draining$1) {\n\t    runTimeout$1(drainQueue$1);\n\t  }\n\t} // v8 likes predictible objects\n\n\n\tfunction Item$1(fun, array) {\n\t  this.fun = fun;\n\t  this.array = array;\n\t}\n\n\tItem$1.prototype.run = function () {\n\t  this.fun.apply(null, this.array);\n\t};\n\n\n\tvar performance$1 = global$2.performance || {};\n\n\tperformance$1.now || performance$1.mozNow || performance$1.msNow || performance$1.oNow || performance$1.webkitNow || function () {\n\t  return new Date().getTime();\n\t}; // generate timestamp or delta\n\n\tvar inherits;\n\n\tif (typeof Object.create === 'function') {\n\t  inherits = function inherits(ctor, superCtor) {\n\t    // implementation from standard node.js 'util' module\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  inherits = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\n\t    var TempCtor = function TempCtor() {};\n\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  };\n\t}\n\n\tvar inherits$1 = inherits;\n\n\tvar formatRegExp = /%[sdj%]/g;\n\tfunction format(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\n\t    return objects.join(' ');\n\t  }\n\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function (x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\n\t    switch (x) {\n\t      case '%s':\n\t        return String(args[i++]);\n\n\t      case '%d':\n\t        return Number(args[i++]);\n\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject$1(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\n\t  return str;\n\t}\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\n\tfunction deprecate(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global$2.process)) {\n\t    return function () {\n\t      return deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\n\t  var warned = false;\n\n\t  function deprecated() {\n\t    if (!warned) {\n\t      {\n\t        console.error(msg);\n\t      }\n\n\t      warned = true;\n\t    }\n\n\t    return fn.apply(this, arguments);\n\t  }\n\n\t  return deprecated;\n\t}\n\tvar debugs = {};\n\tvar debugEnviron;\n\tfunction debuglog(set) {\n\t  if (isUndefined(debugEnviron)) debugEnviron =  '';\n\t  set = set.toUpperCase();\n\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = 0;\n\n\t      debugs[set] = function () {\n\t        var msg = format.apply(null, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function () {};\n\t    }\n\t  }\n\n\t  return debugs[set];\n\t}\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\n\t/* legacy: obj, showHidden, depth, colors*/\n\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  }; // legacy...\n\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    _extend(ctx, opts);\n\t  } // set default options\n\n\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n\tinspect.colors = {\n\t  'bold': [1, 22],\n\t  'italic': [3, 23],\n\t  'underline': [4, 24],\n\t  'inverse': [7, 27],\n\t  'white': [37, 39],\n\t  'grey': [90, 39],\n\t  'black': [30, 39],\n\t  'blue': [34, 39],\n\t  'cyan': [36, 39],\n\t  'green': [32, 39],\n\t  'magenta': [35, 39],\n\t  'red': [31, 39],\n\t  'yellow': [33, 39]\n\t}; // Don't use 'blue' not visible on cmd.exe\n\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\n\t  if (style) {\n\t    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t  array.forEach(function (val, idx) {\n\t    hash[val] = true;\n\t  });\n\t  return hash;\n\t}\n\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n\t  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.\n\t  !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\n\t    return ret;\n\t  } // Primitive types cannot have properties\n\n\n\t  var primitive = formatPrimitive(ctx, value);\n\n\t  if (primitive) {\n\t    return primitive;\n\t  } // Look up the keys of the object.\n\n\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  } // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n\t  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  } // Some type of object without properties can be shortcutted.\n\n\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\n\t  var base = '',\n\t      array = false,\n\t      braces = ['{', '}']; // Make Array say that they are Array\n\n\t  if (isArray$2(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  } // Make functions say that they are functions\n\n\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  } // Make RegExps say that they are RegExps\n\n\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  } // Make dates with properties first say the date\n\n\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  } // Make error with message first say the error\n\n\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\n\t  ctx.seen.push(value);\n\t  var output;\n\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function (key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\n\t  ctx.seen.pop();\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\n\t  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n\t  if (isNull(value)) return ctx.stylize('null', 'null');\n\t}\n\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty$1(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\n\t  keys.forEach(function (key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || {\n\t    value: value[key]\n\t  };\n\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\n\t  if (!hasOwnProperty$1(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function (line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function (line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\n\t    name = JSON.stringify('' + key);\n\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\n\t  return name + ': ' + str;\n\t}\n\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var length = output.reduce(function (prev, cur) {\n\t    if (cur.indexOf('\\n') >= 0) ;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\n\t  if (length > 60) {\n\t    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n\t  }\n\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t} // NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\n\n\tfunction isArray$2(ar) {\n\t  return Array.isArray(ar);\n\t}\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\tfunction isSymbol$1(arg) {\n\t  return _typeof(arg) === 'symbol';\n\t}\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\tfunction isRegExp(re) {\n\t  return isObject$1(re) && objectToString$1(re) === '[object RegExp]';\n\t}\n\tfunction isObject$1(arg) {\n\t  return _typeof(arg) === 'object' && arg !== null;\n\t}\n\tfunction isDate(d) {\n\t  return isObject$1(d) && objectToString$1(d) === '[object Date]';\n\t}\n\tfunction isError(e) {\n\t  return isObject$1(e) && (objectToString$1(e) === '[object Error]' || e instanceof Error);\n\t}\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\tfunction isPrimitive(arg) {\n\t  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || _typeof(arg) === 'symbol' || // ES6 symbol\n\t  typeof arg === 'undefined';\n\t}\n\tfunction isBuffer$1(maybeBuf) {\n\t  return isBuffer(maybeBuf);\n\t}\n\n\tfunction objectToString$1(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\n\tfunction log$1() {\n\t  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n\t}\n\tfunction _extend(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject$1(add)) return origin;\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\n\t  return origin;\n\t}\n\n\tfunction hasOwnProperty$1(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\tvar util = {\n\t  inherits: inherits$1,\n\t  _extend: _extend,\n\t  log: log$1,\n\t  isBuffer: isBuffer$1,\n\t  isPrimitive: isPrimitive,\n\t  isFunction: isFunction,\n\t  isError: isError,\n\t  isDate: isDate,\n\t  isObject: isObject$1,\n\t  isRegExp: isRegExp,\n\t  isUndefined: isUndefined,\n\t  isSymbol: isSymbol$1,\n\t  isString: isString,\n\t  isNumber: isNumber,\n\t  isNullOrUndefined: isNullOrUndefined,\n\t  isNull: isNull,\n\t  isBoolean: isBoolean,\n\t  isArray: isArray$2,\n\t  inspect: inspect,\n\t  deprecate: deprecate,\n\t  format: format,\n\t  debuglog: debuglog\n\t};\n\n\tvar lookup$1 = [];\n\tvar revLookup$1 = [];\n\tvar Arr$1 = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\tvar inited$1 = false;\n\n\tfunction init$1() {\n\t  inited$1 = true;\n\t  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n\t  for (var i = 0, len = code.length; i < len; ++i) {\n\t    lookup$1[i] = code[i];\n\t    revLookup$1[code.charCodeAt(i)] = i;\n\t  }\n\n\t  revLookup$1['-'.charCodeAt(0)] = 62;\n\t  revLookup$1['_'.charCodeAt(0)] = 63;\n\t}\n\n\tfunction toByteArray$1(b64) {\n\t  if (!inited$1) {\n\t    init$1();\n\t  }\n\n\t  var i, j, l, tmp, placeHolders, arr;\n\t  var len = b64.length;\n\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4');\n\t  } // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\n\n\t  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0; // base64 is 4/3 + up to two characters of the original data\n\n\t  arr = new Arr$1(len * 3 / 4 - placeHolders); // if there are placeholders, only get up to the last complete 4 chars\n\n\t  l = placeHolders > 0 ? len - 4 : len;\n\t  var L = 0;\n\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = revLookup$1[b64.charCodeAt(i)] << 18 | revLookup$1[b64.charCodeAt(i + 1)] << 12 | revLookup$1[b64.charCodeAt(i + 2)] << 6 | revLookup$1[b64.charCodeAt(i + 3)];\n\t    arr[L++] = tmp >> 16 & 0xFF;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\n\t  if (placeHolders === 2) {\n\t    tmp = revLookup$1[b64.charCodeAt(i)] << 2 | revLookup$1[b64.charCodeAt(i + 1)] >> 4;\n\t    arr[L++] = tmp & 0xFF;\n\t  } else if (placeHolders === 1) {\n\t    tmp = revLookup$1[b64.charCodeAt(i)] << 10 | revLookup$1[b64.charCodeAt(i + 1)] << 4 | revLookup$1[b64.charCodeAt(i + 2)] >> 2;\n\t    arr[L++] = tmp >> 8 & 0xFF;\n\t    arr[L++] = tmp & 0xFF;\n\t  }\n\n\t  return arr;\n\t}\n\n\tfunction tripletToBase64$1(num) {\n\t  return lookup$1[num >> 18 & 0x3F] + lookup$1[num >> 12 & 0x3F] + lookup$1[num >> 6 & 0x3F] + lookup$1[num & 0x3F];\n\t}\n\n\tfunction encodeChunk$1(uint8, start, end) {\n\t  var tmp;\n\t  var output = [];\n\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t    output.push(tripletToBase64$1(tmp));\n\t  }\n\n\t  return output.join('');\n\t}\n\n\tfunction fromByteArray$1(uint8) {\n\t  if (!inited$1) {\n\t    init$1();\n\t  }\n\n\t  var tmp;\n\t  var len = uint8.length;\n\t  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n\t  var output = '';\n\t  var parts = [];\n\t  var maxChunkLength = 16383; // must be multiple of 3\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk$1(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n\t  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1];\n\t    output += lookup$1[tmp >> 2];\n\t    output += lookup$1[tmp << 4 & 0x3F];\n\t    output += '==';\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n\t    output += lookup$1[tmp >> 10];\n\t    output += lookup$1[tmp >> 4 & 0x3F];\n\t    output += lookup$1[tmp << 2 & 0x3F];\n\t    output += '=';\n\t  }\n\n\t  parts.push(output);\n\t  return parts.join('');\n\t}\n\n\tfunction read$1(buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = -7;\n\t  var i = isLE ? nBytes - 1 : 0;\n\t  var d = isLE ? -1 : 1;\n\t  var s = buffer[offset + i];\n\t  i += d;\n\t  e = s & (1 << -nBits) - 1;\n\t  s >>= -nBits;\n\t  nBits += eLen;\n\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : (s ? -1 : 1) * Infinity;\n\t  } else {\n\t    m = m + Math.pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t}\n\n\tfunction write$1(buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c;\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n\t  var i = isLE ? 0 : nBytes - 1;\n\t  var d = isLE ? 1 : -1;\n\t  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t  value = Math.abs(value);\n\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2);\n\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias);\n\t    }\n\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n\t  buffer[offset + i - d] |= s * 128;\n\t}\n\n\tvar toString$3 = {}.toString;\n\n\tvar isArray$3 = Array.isArray || function (arr) {\n\t  return toString$3.call(arr) == '[object Array]';\n\t};\n\t/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\n\n\tvar INSPECT_MAX_BYTES$1 = 50;\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\n\tBuffer$1.TYPED_ARRAY_SUPPORT = global$2.TYPED_ARRAY_SUPPORT !== undefined ? global$2.TYPED_ARRAY_SUPPORT : true;\n\n\tfunction kMaxLength$1() {\n\t  return Buffer$1.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n\t}\n\n\tfunction createBuffer$1(that, length) {\n\t  if (kMaxLength$1() < length) {\n\t    throw new RangeError('Invalid typed array length');\n\t  }\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length);\n\t    that.__proto__ = Buffer$1.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer$1(length);\n\t    }\n\n\t    that.length = length;\n\t  }\n\n\t  return that;\n\t}\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\n\n\tfunction Buffer$1(arg, encodingOrOffset, length) {\n\t  if (!Buffer$1.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$1)) {\n\t    return new Buffer$1(arg, encodingOrOffset, length);\n\t  } // Common case.\n\n\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error('If encoding is specified then the first argument must be a string');\n\t    }\n\n\t    return allocUnsafe$1(this, arg);\n\t  }\n\n\t  return from$1(this, arg, encodingOrOffset, length);\n\t}\n\n\tBuffer$1.poolSize = 8192; // not used by this implementation\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\n\tBuffer$1._augment = function (arr) {\n\t  arr.__proto__ = Buffer$1.prototype;\n\t  return arr;\n\t};\n\n\tfunction from$1(that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number');\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer$1(that, value, encodingOrOffset, length);\n\t  }\n\n\t  if (typeof value === 'string') {\n\t    return fromString$1(that, value, encodingOrOffset);\n\t  }\n\n\t  return fromObject$1(that, value);\n\t}\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\n\n\tBuffer$1.from = function (value, encodingOrOffset, length) {\n\t  return from$1(null, value, encodingOrOffset, length);\n\t};\n\n\tif (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t  Buffer$1.prototype.__proto__ = Uint8Array.prototype;\n\t  Buffer$1.__proto__ = Uint8Array;\n\t}\n\n\tfunction assertSize$1(size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number');\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative');\n\t  }\n\t}\n\n\tfunction alloc$1(that, size, fill, encoding) {\n\t  assertSize$1(size);\n\n\t  if (size <= 0) {\n\t    return createBuffer$1(that, size);\n\t  }\n\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string' ? createBuffer$1(that, size).fill(fill, encoding) : createBuffer$1(that, size).fill(fill);\n\t  }\n\n\t  return createBuffer$1(that, size);\n\t}\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\n\n\tBuffer$1.alloc = function (size, fill, encoding) {\n\t  return alloc$1(null, size, fill, encoding);\n\t};\n\n\tfunction allocUnsafe$1(that, size) {\n\t  assertSize$1(size);\n\t  that = createBuffer$1(that, size < 0 ? 0 : checked$1(size) | 0);\n\n\t  if (!Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0;\n\t    }\n\t  }\n\n\t  return that;\n\t}\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\n\n\tBuffer$1.allocUnsafe = function (size) {\n\t  return allocUnsafe$1(null, size);\n\t};\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\n\n\tBuffer$1.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe$1(null, size);\n\t};\n\n\tfunction fromString$1(that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8';\n\t  }\n\n\t  if (!Buffer$1.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding');\n\t  }\n\n\t  var length = byteLength$1(string, encoding) | 0;\n\t  that = createBuffer$1(that, length);\n\t  var actual = that.write(string, encoding);\n\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual);\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromArrayLike$1(that, array) {\n\t  var length = array.length < 0 ? 0 : checked$1(array.length) | 0;\n\t  that = createBuffer$1(that, length);\n\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255;\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromArrayBuffer$1(that, array, byteOffset, length) {\n\t  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds');\n\t  }\n\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds');\n\t  }\n\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array);\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset);\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length);\n\t  }\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array;\n\t    that.__proto__ = Buffer$1.prototype;\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike$1(that, array);\n\t  }\n\n\t  return that;\n\t}\n\n\tfunction fromObject$1(that, obj) {\n\t  if (internalIsBuffer$1(obj)) {\n\t    var len = checked$1(obj.length) | 0;\n\t    that = createBuffer$1(that, len);\n\n\t    if (that.length === 0) {\n\t      return that;\n\t    }\n\n\t    obj.copy(that, 0, 0, len);\n\t    return that;\n\t  }\n\n\t  if (obj) {\n\t    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan$1(obj.length)) {\n\t        return createBuffer$1(that, 0);\n\t      }\n\n\t      return fromArrayLike$1(that, obj);\n\t    }\n\n\t    if (obj.type === 'Buffer' && isArray$3(obj.data)) {\n\t      return fromArrayLike$1(that, obj.data);\n\t    }\n\t  }\n\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n\t}\n\n\tfunction checked$1(length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength$1()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength$1().toString(16) + ' bytes');\n\t  }\n\n\t  return length | 0;\n\t}\n\n\tBuffer$1.isBuffer = isBuffer$2;\n\n\tfunction internalIsBuffer$1(b) {\n\t  return !!(b != null && b._isBuffer);\n\t}\n\n\tBuffer$1.compare = function compare(a, b) {\n\t  if (!internalIsBuffer$1(a) || !internalIsBuffer$1(b)) {\n\t    throw new TypeError('Arguments must be Buffers');\n\t  }\n\n\t  if (a === b) return 0;\n\t  var x = a.length;\n\t  var y = b.length;\n\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t};\n\n\tBuffer$1.isEncoding = function isEncoding(encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true;\n\n\t    default:\n\t      return false;\n\t  }\n\t};\n\n\tBuffer$1.concat = function concat(list, length) {\n\t  if (!isArray$3(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t  }\n\n\t  if (list.length === 0) {\n\t    return Buffer$1.alloc(0);\n\t  }\n\n\t  var i;\n\n\t  if (length === undefined) {\n\t    length = 0;\n\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length;\n\t    }\n\t  }\n\n\t  var buffer = Buffer$1.allocUnsafe(length);\n\t  var pos = 0;\n\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i];\n\n\t    if (!internalIsBuffer$1(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t    }\n\n\t    buf.copy(buffer, pos);\n\t    pos += buf.length;\n\t  }\n\n\t  return buffer;\n\t};\n\n\tfunction byteLength$1(string, encoding) {\n\t  if (internalIsBuffer$1(string)) {\n\t    return string.length;\n\t  }\n\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength;\n\t  }\n\n\t  if (typeof string !== 'string') {\n\t    string = '' + string;\n\t  }\n\n\t  var len = string.length;\n\t  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n\t  var loweredCase = false;\n\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len;\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes$1(string).length;\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2;\n\n\t      case 'hex':\n\t        return len >>> 1;\n\n\t      case 'base64':\n\t        return base64ToBytes$1(string).length;\n\n\t      default:\n\t        if (loweredCase) return utf8ToBytes$1(string).length; // assume utf8\n\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t}\n\n\tBuffer$1.byteLength = byteLength$1;\n\n\tfunction slowToString$1(encoding, start, end) {\n\t  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n\t  if (start === undefined || start < 0) {\n\t    start = 0;\n\t  } // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\n\n\t  if (start > this.length) {\n\t    return '';\n\t  }\n\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length;\n\t  }\n\n\t  if (end <= 0) {\n\t    return '';\n\t  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n\t  end >>>= 0;\n\t  start >>>= 0;\n\n\t  if (end <= start) {\n\t    return '';\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice$1(this, start, end);\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice$1(this, start, end);\n\n\t      case 'ascii':\n\t        return asciiSlice$1(this, start, end);\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice$1(this, start, end);\n\n\t      case 'base64':\n\t        return base64Slice$1(this, start, end);\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice$1(this, start, end);\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = (encoding + '').toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\n\n\tBuffer$1.prototype._isBuffer = true;\n\n\tfunction swap$1(b, n, m) {\n\t  var i = b[n];\n\t  b[n] = b[m];\n\t  b[m] = i;\n\t}\n\n\tBuffer$1.prototype.swap16 = function swap16() {\n\t  var len = this.length;\n\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap$1(this, i, i + 1);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer$1.prototype.swap32 = function swap32() {\n\t  var len = this.length;\n\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap$1(this, i, i + 3);\n\t    swap$1(this, i + 1, i + 2);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer$1.prototype.swap64 = function swap64() {\n\t  var len = this.length;\n\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits');\n\t  }\n\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap$1(this, i, i + 7);\n\t    swap$1(this, i + 1, i + 6);\n\t    swap$1(this, i + 2, i + 5);\n\t    swap$1(this, i + 3, i + 4);\n\t  }\n\n\t  return this;\n\t};\n\n\tBuffer$1.prototype.toString = function toString() {\n\t  var length = this.length | 0;\n\t  if (length === 0) return '';\n\t  if (arguments.length === 0) return utf8Slice$1(this, 0, length);\n\t  return slowToString$1.apply(this, arguments);\n\t};\n\n\tBuffer$1.prototype.equals = function equals(b) {\n\t  if (!internalIsBuffer$1(b)) throw new TypeError('Argument must be a Buffer');\n\t  if (this === b) return true;\n\t  return Buffer$1.compare(this, b) === 0;\n\t};\n\n\tBuffer$1.prototype.inspect = function inspect() {\n\t  var str = '';\n\t  var max = INSPECT_MAX_BYTES$1;\n\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n\t    if (this.length > max) str += ' ... ';\n\t  }\n\n\t  return '<Buffer ' + str + '>';\n\t};\n\n\tBuffer$1.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n\t  if (!internalIsBuffer$1(target)) {\n\t    throw new TypeError('Argument must be a Buffer');\n\t  }\n\n\t  if (start === undefined) {\n\t    start = 0;\n\t  }\n\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0;\n\t  }\n\n\t  if (thisStart === undefined) {\n\t    thisStart = 0;\n\t  }\n\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length;\n\t  }\n\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index');\n\t  }\n\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0;\n\t  }\n\n\t  if (thisStart >= thisEnd) {\n\t    return -1;\n\t  }\n\n\t  if (start >= end) {\n\t    return 1;\n\t  }\n\n\t  start >>>= 0;\n\t  end >>>= 0;\n\t  thisStart >>>= 0;\n\t  thisEnd >>>= 0;\n\t  if (this === target) return 0;\n\t  var x = thisEnd - thisStart;\n\t  var y = end - start;\n\t  var len = Math.min(x, y);\n\t  var thisCopy = this.slice(thisStart, thisEnd);\n\t  var targetCopy = target.slice(start, end);\n\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i];\n\t      y = targetCopy[i];\n\t      break;\n\t    }\n\t  }\n\n\t  if (x < y) return -1;\n\t  if (y < x) return 1;\n\t  return 0;\n\t}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\n\n\tfunction bidirectionalIndexOf$1(buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset;\n\t    byteOffset = 0;\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff;\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000;\n\t  }\n\n\t  byteOffset = +byteOffset; // Coerce to Number.\n\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : buffer.length - 1;\n\t  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1;else byteOffset = buffer.length - 1;\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0;else return -1;\n\t  } // Normalize val\n\n\n\t  if (typeof val === 'string') {\n\t    val = Buffer$1.from(val, encoding);\n\t  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n\t  if (internalIsBuffer$1(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1;\n\t    }\n\n\t    return arrayIndexOf$1(buffer, val, byteOffset, encoding, dir);\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF; // Search for a byte value [0-255]\n\n\t    if (Buffer$1.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n\t      }\n\t    }\n\n\t    return arrayIndexOf$1(buffer, [val], byteOffset, encoding, dir);\n\t  }\n\n\t  throw new TypeError('val must be string, number or Buffer');\n\t}\n\n\tfunction arrayIndexOf$1(arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1;\n\t  var arrLength = arr.length;\n\t  var valLength = val.length;\n\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase();\n\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1;\n\t      }\n\n\t      indexSize = 2;\n\t      arrLength /= 2;\n\t      valLength /= 2;\n\t      byteOffset /= 2;\n\t    }\n\t  }\n\n\t  function read(buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i];\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize);\n\t    }\n\t  }\n\n\t  var i;\n\n\t  if (dir) {\n\t    var foundIndex = -1;\n\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i;\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex;\n\t        foundIndex = -1;\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true;\n\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (found) return i;\n\t    }\n\t  }\n\n\t  return -1;\n\t}\n\n\tBuffer$1.prototype.includes = function includes(val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1;\n\t};\n\n\tBuffer$1.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf$1(this, val, byteOffset, encoding, true);\n\t};\n\n\tBuffer$1.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf$1(this, val, byteOffset, encoding, false);\n\t};\n\n\tfunction hexWrite$1(buf, string, offset, length) {\n\t  offset = Number(offset) || 0;\n\t  var remaining = buf.length - offset;\n\n\t  if (!length) {\n\t    length = remaining;\n\t  } else {\n\t    length = Number(length);\n\n\t    if (length > remaining) {\n\t      length = remaining;\n\t    }\n\t  } // must be an even number of digits\n\n\n\t  var strLen = string.length;\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2;\n\t  }\n\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16);\n\t    if (isNaN(parsed)) return i;\n\t    buf[offset + i] = parsed;\n\t  }\n\n\t  return i;\n\t}\n\n\tfunction utf8Write$1(buf, string, offset, length) {\n\t  return blitBuffer$1(utf8ToBytes$1(string, buf.length - offset), buf, offset, length);\n\t}\n\n\tfunction asciiWrite$1(buf, string, offset, length) {\n\t  return blitBuffer$1(asciiToBytes$1(string), buf, offset, length);\n\t}\n\n\tfunction latin1Write$1(buf, string, offset, length) {\n\t  return asciiWrite$1(buf, string, offset, length);\n\t}\n\n\tfunction base64Write$1(buf, string, offset, length) {\n\t  return blitBuffer$1(base64ToBytes$1(string), buf, offset, length);\n\t}\n\n\tfunction ucs2Write$1(buf, string, offset, length) {\n\t  return blitBuffer$1(utf16leToBytes$1(string, buf.length - offset), buf, offset, length);\n\t}\n\n\tBuffer$1.prototype.write = function write(string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8';\n\t    length = this.length;\n\t    offset = 0; // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset;\n\t    length = this.length;\n\t    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0;\n\n\t    if (isFinite(length)) {\n\t      length = length | 0;\n\t      if (encoding === undefined) encoding = 'utf8';\n\t    } else {\n\t      encoding = length;\n\t      length = undefined;\n\t    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n\t  } else {\n\t    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n\t  }\n\n\t  var remaining = this.length - offset;\n\t  if (length === undefined || length > remaining) length = remaining;\n\n\t  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds');\n\t  }\n\n\t  if (!encoding) encoding = 'utf8';\n\t  var loweredCase = false;\n\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite$1(this, string, offset, length);\n\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write$1(this, string, offset, length);\n\n\t      case 'ascii':\n\t        return asciiWrite$1(this, string, offset, length);\n\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write$1(this, string, offset, length);\n\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write$1(this, string, offset, length);\n\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write$1(this, string, offset, length);\n\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n\t        encoding = ('' + encoding).toLowerCase();\n\t        loweredCase = true;\n\t    }\n\t  }\n\t};\n\n\tBuffer$1.prototype.toJSON = function toJSON() {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  };\n\t};\n\n\tfunction base64Slice$1(buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return fromByteArray$1(buf);\n\t  } else {\n\t    return fromByteArray$1(buf.slice(start, end));\n\t  }\n\t}\n\n\tfunction utf8Slice$1(buf, start, end) {\n\t  end = Math.min(buf.length, end);\n\t  var res = [];\n\t  var i = start;\n\n\t  while (i < end) {\n\t    var firstByte = buf[i];\n\t    var codePoint = null;\n\t    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte;\n\t          }\n\n\t          break;\n\n\t        case 2:\n\t          secondByte = buf[i + 1];\n\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t          break;\n\n\t        case 3:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t          break;\n\n\t        case 4:\n\t          secondByte = buf[i + 1];\n\t          thirdByte = buf[i + 2];\n\t          fourthByte = buf[i + 3];\n\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint;\n\t            }\n\t          }\n\n\t      }\n\t    }\n\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD;\n\t      bytesPerSequence = 1;\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000;\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n\t      codePoint = 0xDC00 | codePoint & 0x3FF;\n\t    }\n\n\t    res.push(codePoint);\n\t    i += bytesPerSequence;\n\t  }\n\n\t  return decodeCodePointsArray$1(res);\n\t} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\n\n\tvar MAX_ARGUMENTS_LENGTH$1 = 0x1000;\n\n\tfunction decodeCodePointsArray$1(codePoints) {\n\t  var len = codePoints.length;\n\n\t  if (len <= MAX_ARGUMENTS_LENGTH$1) {\n\t    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n\t  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n\t  var res = '';\n\t  var i = 0;\n\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH$1));\n\t  }\n\n\t  return res;\n\t}\n\n\tfunction asciiSlice$1(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F);\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction latin1Slice$1(buf, start, end) {\n\t  var ret = '';\n\t  end = Math.min(buf.length, end);\n\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i]);\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction hexSlice$1(buf, start, end) {\n\t  var len = buf.length;\n\t  if (!start || start < 0) start = 0;\n\t  if (!end || end < 0 || end > len) end = len;\n\t  var out = '';\n\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex$1(buf[i]);\n\t  }\n\n\t  return out;\n\t}\n\n\tfunction utf16leSlice$1(buf, start, end) {\n\t  var bytes = buf.slice(start, end);\n\t  var res = '';\n\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n\t  }\n\n\t  return res;\n\t}\n\n\tBuffer$1.prototype.slice = function slice(start, end) {\n\t  var len = this.length;\n\t  start = ~~start;\n\t  end = end === undefined ? len : ~~end;\n\n\t  if (start < 0) {\n\t    start += len;\n\t    if (start < 0) start = 0;\n\t  } else if (start > len) {\n\t    start = len;\n\t  }\n\n\t  if (end < 0) {\n\t    end += len;\n\t    if (end < 0) end = 0;\n\t  } else if (end > len) {\n\t    end = len;\n\t  }\n\n\t  if (end < start) end = start;\n\t  var newBuf;\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end);\n\t    newBuf.__proto__ = Buffer$1.prototype;\n\t  } else {\n\t    var sliceLen = end - start;\n\t    newBuf = new Buffer$1(sliceLen, undefined);\n\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start];\n\t    }\n\t  }\n\n\t  return newBuf;\n\t};\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\n\n\tfunction checkOffset$1(offset, ext, length) {\n\t  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n\t}\n\n\tBuffer$1.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\n\t  return val;\n\t};\n\n\tBuffer$1.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    checkOffset$1(offset, byteLength, this.length);\n\t  }\n\n\t  var val = this[offset + --byteLength];\n\t  var mul = 1;\n\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul;\n\t  }\n\n\t  return val;\n\t};\n\n\tBuffer$1.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 1, this.length);\n\t  return this[offset];\n\t};\n\n\tBuffer$1.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 2, this.length);\n\t  return this[offset] | this[offset + 1] << 8;\n\t};\n\n\tBuffer$1.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 2, this.length);\n\t  return this[offset] << 8 | this[offset + 1];\n\t};\n\n\tBuffer$1.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n\t};\n\n\tBuffer$1.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n\t};\n\n\tBuffer$1.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\t  var val = this[offset];\n\t  var mul = 1;\n\t  var i = 0;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul;\n\t  }\n\n\t  mul *= 0x80;\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t  return val;\n\t};\n\n\tBuffer$1.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\t  if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\t  var i = byteLength;\n\t  var mul = 1;\n\t  var val = this[offset + --i];\n\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul;\n\t  }\n\n\t  mul *= 0x80;\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t  return val;\n\t};\n\n\tBuffer$1.prototype.readInt8 = function readInt8(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 1, this.length);\n\t  if (!(this[offset] & 0x80)) return this[offset];\n\t  return (0xff - this[offset] + 1) * -1;\n\t};\n\n\tBuffer$1.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 2, this.length);\n\t  var val = this[offset] | this[offset + 1] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\n\tBuffer$1.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 2, this.length);\n\t  var val = this[offset + 1] | this[offset] << 8;\n\t  return val & 0x8000 ? val | 0xFFFF0000 : val;\n\t};\n\n\tBuffer$1.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n\t};\n\n\tBuffer$1.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n\t};\n\n\tBuffer$1.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return read$1(this, offset, true, 23, 4);\n\t};\n\n\tBuffer$1.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 4, this.length);\n\t  return read$1(this, offset, false, 23, 4);\n\t};\n\n\tBuffer$1.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 8, this.length);\n\t  return read$1(this, offset, true, 52, 8);\n\t};\n\n\tBuffer$1.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n\t  if (!noAssert) checkOffset$1(offset, 8, this.length);\n\t  return read$1(this, offset, false, 52, 8);\n\t};\n\n\tfunction checkInt$1(buf, value, offset, ext, max, min) {\n\t  if (!internalIsBuffer$1(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t}\n\n\tBuffer$1.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt$1(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  var mul = 1;\n\t  var i = 0;\n\t  this[offset] = value & 0xFF;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer$1.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  byteLength = byteLength | 0;\n\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t    checkInt$1(this, value, offset, byteLength, maxBytes, 0);\n\t  }\n\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  this[offset + i] = value & 0xFF;\n\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = value / mul & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer$1.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 1, 0xff, 0);\n\t  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\n\tfunction objectWriteUInt16$1(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1;\n\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n\t  }\n\t}\n\n\tBuffer$1.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 2, 0xffff, 0);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16$1(this, value, offset, true);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer$1.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 2, 0xffff, 0);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16$1(this, value, offset, false);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tfunction objectWriteUInt32$1(buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n\t  }\n\t}\n\n\tBuffer$1.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 4, 0xffffffff, 0);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = value >>> 24;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32$1(this, value, offset, true);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer$1.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 4, 0xffffffff, 0);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32$1(this, value, offset, false);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer$1.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t    checkInt$1(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  var i = 0;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset] = value & 0xFF;\n\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1;\n\t    }\n\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer$1.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1);\n\t    checkInt$1(this, value, offset, byteLength, limit - 1, -limit);\n\t  }\n\n\t  var i = byteLength - 1;\n\t  var mul = 1;\n\t  var sub = 0;\n\t  this[offset + i] = value & 0xFF;\n\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1;\n\t    }\n\n\t    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n\t  }\n\n\t  return offset + byteLength;\n\t};\n\n\tBuffer$1.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 1, 0x7f, -0x80);\n\t  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t  if (value < 0) value = 0xff + value + 1;\n\t  this[offset] = value & 0xff;\n\t  return offset + 1;\n\t};\n\n\tBuffer$1.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 2, 0x7fff, -0x8000);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t  } else {\n\t    objectWriteUInt16$1(this, value, offset, true);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer$1.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 2, 0x7fff, -0x8000);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 8;\n\t    this[offset + 1] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt16$1(this, value, offset, false);\n\t  }\n\n\t  return offset + 2;\n\t};\n\n\tBuffer$1.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value & 0xff;\n\t    this[offset + 1] = value >>> 8;\n\t    this[offset + 2] = value >>> 16;\n\t    this[offset + 3] = value >>> 24;\n\t  } else {\n\t    objectWriteUInt32$1(this, value, offset, true);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tBuffer$1.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n\t  value = +value;\n\t  offset = offset | 0;\n\t  if (!noAssert) checkInt$1(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\t  if (value < 0) value = 0xffffffff + value + 1;\n\n\t  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = value >>> 24;\n\t    this[offset + 1] = value >>> 16;\n\t    this[offset + 2] = value >>> 8;\n\t    this[offset + 3] = value & 0xff;\n\t  } else {\n\t    objectWriteUInt32$1(this, value, offset, false);\n\t  }\n\n\t  return offset + 4;\n\t};\n\n\tfunction checkIEEE754$1(buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n\t  if (offset < 0) throw new RangeError('Index out of range');\n\t}\n\n\tfunction writeFloat$1(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754$1(buf, value, offset, 4);\n\t  }\n\n\t  write$1(buf, value, offset, littleEndian, 23, 4);\n\t  return offset + 4;\n\t}\n\n\tBuffer$1.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n\t  return writeFloat$1(this, value, offset, true, noAssert);\n\t};\n\n\tBuffer$1.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n\t  return writeFloat$1(this, value, offset, false, noAssert);\n\t};\n\n\tfunction writeDouble$1(buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754$1(buf, value, offset, 8);\n\t  }\n\n\t  write$1(buf, value, offset, littleEndian, 52, 8);\n\t  return offset + 8;\n\t}\n\n\tBuffer$1.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n\t  return writeDouble$1(this, value, offset, true, noAssert);\n\t};\n\n\tBuffer$1.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n\t  return writeDouble$1(this, value, offset, false, noAssert);\n\t}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n\tBuffer$1.prototype.copy = function copy(target, targetStart, start, end) {\n\t  if (!start) start = 0;\n\t  if (!end && end !== 0) end = this.length;\n\t  if (targetStart >= target.length) targetStart = target.length;\n\t  if (!targetStart) targetStart = 0;\n\t  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n\t  if (end === start) return 0;\n\t  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds');\n\t  }\n\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n\t  if (end > this.length) end = this.length;\n\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start;\n\t  }\n\n\t  var len = end - start;\n\t  var i;\n\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else if (len < 1000 || !Buffer$1.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start];\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n\t  }\n\n\t  return len;\n\t}; // Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\n\n\tBuffer$1.prototype.fill = function fill(val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start;\n\t      start = 0;\n\t      end = this.length;\n\t    } else if (typeof end === 'string') {\n\t      encoding = end;\n\t      end = this.length;\n\t    }\n\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0);\n\n\t      if (code < 256) {\n\t        val = code;\n\t      }\n\t    }\n\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string');\n\t    }\n\n\t    if (typeof encoding === 'string' && !Buffer$1.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding);\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255;\n\t  } // Invalid ranges are not set to a default, so can range check early.\n\n\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index');\n\t  }\n\n\t  if (end <= start) {\n\t    return this;\n\t  }\n\n\t  start = start >>> 0;\n\t  end = end === undefined ? this.length : end >>> 0;\n\t  if (!val) val = 0;\n\t  var i;\n\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val;\n\t    }\n\t  } else {\n\t    var bytes = internalIsBuffer$1(val) ? val : utf8ToBytes$1(new Buffer$1(val, encoding).toString());\n\t    var len = bytes.length;\n\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len];\n\t    }\n\t  }\n\n\t  return this;\n\t}; // HELPER FUNCTIONS\n\t// ================\n\n\n\tvar INVALID_BASE64_RE$1 = /[^+\\/0-9A-Za-z-_]/g;\n\n\tfunction base64clean$1(str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim$1(str).replace(INVALID_BASE64_RE$1, ''); // Node converts strings with length < 2 to ''\n\n\t  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '=';\n\t  }\n\n\t  return str;\n\t}\n\n\tfunction stringtrim$1(str) {\n\t  if (str.trim) return str.trim();\n\t  return str.replace(/^\\s+|\\s+$/g, '');\n\t}\n\n\tfunction toHex$1(n) {\n\t  if (n < 16) return '0' + n.toString(16);\n\t  return n.toString(16);\n\t}\n\n\tfunction utf8ToBytes$1(string, units) {\n\t  units = units || Infinity;\n\t  var codePoint;\n\t  var length = string.length;\n\t  var leadSurrogate = null;\n\t  var bytes = [];\n\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i); // is surrogate component\n\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t          continue;\n\t        } // valid lead\n\n\n\t        leadSurrogate = codePoint;\n\t        continue;\n\t      } // 2 leads in a row\n\n\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t        leadSurrogate = codePoint;\n\t        continue;\n\t      } // valid surrogate pair\n\n\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n\t    }\n\n\t    leadSurrogate = null; // encode utf8\n\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break;\n\t      bytes.push(codePoint);\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break;\n\t      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break;\n\t      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break;\n\t      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n\t    } else {\n\t      throw new Error('Invalid code point');\n\t    }\n\t  }\n\n\t  return bytes;\n\t}\n\n\tfunction asciiToBytes$1(str) {\n\t  var byteArray = [];\n\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF);\n\t  }\n\n\t  return byteArray;\n\t}\n\n\tfunction utf16leToBytes$1(str, units) {\n\t  var c, hi, lo;\n\t  var byteArray = [];\n\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break;\n\t    c = str.charCodeAt(i);\n\t    hi = c >> 8;\n\t    lo = c % 256;\n\t    byteArray.push(lo);\n\t    byteArray.push(hi);\n\t  }\n\n\t  return byteArray;\n\t}\n\n\tfunction base64ToBytes$1(str) {\n\t  return toByteArray$1(base64clean$1(str));\n\t}\n\n\tfunction blitBuffer$1(src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if (i + offset >= dst.length || i >= src.length) break;\n\t    dst[i + offset] = src[i];\n\t  }\n\n\t  return i;\n\t}\n\n\tfunction isnan$1(val) {\n\t  return val !== val; // eslint-disable-line no-self-compare\n\t} // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n\t// The _isBuffer check is for Safari 5-7 support, because it's missing\n\t// Object.prototype.constructor. Remove this eventually\n\n\n\tfunction isBuffer$2(obj) {\n\t  return obj != null && (!!obj._isBuffer || isFastBuffer$1(obj) || isSlowBuffer$1(obj));\n\t}\n\n\tfunction isFastBuffer$1(obj) {\n\t  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n\t} // For Node v0.10 support. Remove this eventually.\n\n\n\tfunction isSlowBuffer$1(obj) {\n\t  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer$1(obj.slice(0, 0));\n\t}\n\n\tfunction BufferList() {\n\t  this.head = null;\n\t  this.tail = null;\n\t  this.length = 0;\n\t}\n\n\tBufferList.prototype.push = function (v) {\n\t  var entry = {\n\t    data: v,\n\t    next: null\n\t  };\n\t  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n\t  this.tail = entry;\n\t  ++this.length;\n\t};\n\n\tBufferList.prototype.unshift = function (v) {\n\t  var entry = {\n\t    data: v,\n\t    next: this.head\n\t  };\n\t  if (this.length === 0) this.tail = entry;\n\t  this.head = entry;\n\t  ++this.length;\n\t};\n\n\tBufferList.prototype.shift = function () {\n\t  if (this.length === 0) return;\n\t  var ret = this.head.data;\n\t  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n\t  --this.length;\n\t  return ret;\n\t};\n\n\tBufferList.prototype.clear = function () {\n\t  this.head = this.tail = null;\n\t  this.length = 0;\n\t};\n\n\tBufferList.prototype.join = function (s) {\n\t  if (this.length === 0) return '';\n\t  var p = this.head;\n\t  var ret = '' + p.data;\n\n\t  while (p = p.next) {\n\t    ret += s + p.data;\n\t  }\n\n\t  return ret;\n\t};\n\n\tBufferList.prototype.concat = function (n) {\n\t  if (this.length === 0) return Buffer$1.alloc(0);\n\t  if (this.length === 1) return this.head.data;\n\t  var ret = Buffer$1.allocUnsafe(n >>> 0);\n\t  var p = this.head;\n\t  var i = 0;\n\n\t  while (p) {\n\t    p.data.copy(ret, i);\n\t    i += p.data.length;\n\t    p = p.next;\n\t  }\n\n\t  return ret;\n\t};\n\n\tvar isBufferEncoding = Buffer$1.isEncoding || function (encoding) {\n\t  switch (encoding && encoding.toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t    case 'raw':\n\t      return true;\n\n\t    default:\n\t      return false;\n\t  }\n\t};\n\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t} // StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\n\n\tfunction StringDecoder(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  } // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\n\n\t  this.charBuffer = new Buffer$1(6); // Number of bytes received for the current incomplete multi-byte character.\n\n\t  this.charReceived = 0; // Number of bytes expected for the current incomplete multi-byte character.\n\n\t  this.charLength = 0;\n\t}\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\n\tStringDecoder.prototype.write = function (buffer) {\n\t  var charStr = ''; // if our last write ended with an incomplete multibyte character\n\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length; // add the new bytes to the char buffer\n\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    } // remove bytes belonging to the current character from the buffer\n\n\n\t    buffer = buffer.slice(available, buffer.length); // get the character that was split\n\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding); // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\n\t    this.charReceived = this.charLength = 0; // if there are no more bytes in this buffer, just emit our char\n\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\n\t    break;\n\t  } // determine and set charLength / charReceived\n\n\n\t  this.detectIncompleteChar(buffer);\n\t  var end = buffer.length;\n\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end); // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  } // or just emit the charStr\n\n\n\t  return charStr;\n\t}; // detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\n\n\tStringDecoder.prototype.detectIncompleteChar = function (buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = buffer.length >= 3 ? 3 : buffer.length; // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i]; // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t    // 110XXXXX\n\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    } // 1110XXXX\n\n\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    } // 11110XXX\n\n\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\n\t  this.charReceived = i;\n\t};\n\n\tStringDecoder.prototype.end = function (buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length) res = this.write(buffer);\n\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\n\t  return res;\n\t};\n\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\tReadable.ReadableState = ReadableState;\n\tvar debug = debuglog('stream');\n\tinherits$1(Readable, EventEmitter);\n\n\tfunction prependListener(emitter, event, fn) {\n\t  // Sadly this is not cacheable as some libraries bundle their own\n\t  // event emitter implementation with them.\n\t  if (typeof emitter.prependListener === 'function') {\n\t    return emitter.prependListener(event, fn);\n\t  } else {\n\t    // This is a hack to make sure that our error handler is attached before any\n\t    // userland ones.  NEVER DO THIS. This is here only because this code needs\n\t    // to continue to work with older versions of Node.js that do not include\n\t    // the prependListener() method. The goal is to eventually remove this hack.\n\t    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n\t  }\n\t}\n\n\tfunction listenerCount$1(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t}\n\n\tfunction ReadableState(options, stream) {\n\t  options = options || {}; // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\n\t  this.objectMode = !!options.objectMode;\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm; // cast to ints.\n\n\t  this.highWaterMark = ~~this.highWaterMark; // A linked list is used to store data chunks instead of an array because the\n\t  // linked list can remove elements from the beginning faster than\n\t  // array.shift()\n\n\t  this.buffer = new BufferList();\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false; // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\n\t  this.sync = true; // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t  this.resumeScheduled = false; // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8'; // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\n\t  this.ranOut = false; // the number of writers that are awaiting a drain event in .pipe()s\n\n\t  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n\t  this.readingMore = false;\n\t  this.decoder = null;\n\t  this.encoding = null;\n\n\t  if (options.encoding) {\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\tfunction Readable(options) {\n\t  if (!(this instanceof Readable)) return new Readable(options);\n\t  this._readableState = new ReadableState(options, this); // legacy\n\n\t  this.readable = true;\n\t  if (options && typeof options.read === 'function') this._read = options.read;\n\t  EventEmitter.call(this);\n\t} // Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\n\tReadable.prototype.push = function (chunk, encoding) {\n\t  var state = this._readableState;\n\n\t  if (!state.objectMode && typeof chunk === 'string') {\n\t    encoding = encoding || state.defaultEncoding;\n\n\t    if (encoding !== state.encoding) {\n\t      chunk = Buffer.from(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t}; // Unshift should *always* be something directly out of read()\n\n\n\tReadable.prototype.unshift = function (chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\n\tReadable.prototype.isPaused = function () {\n\t  return this._readableState.flowing === false;\n\t};\n\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (chunk === null) {\n\t    state.reading = false;\n\t    onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var _e = new Error('stream.unshift() after end event');\n\n\t      stream.emit('error', _e);\n\t    } else {\n\t      var skipAdd;\n\n\t      if (state.decoder && !addToFront && !encoding) {\n\t        chunk = state.decoder.write(chunk);\n\t        skipAdd = !state.objectMode && chunk.length === 0;\n\t      }\n\n\t      if (!addToFront) state.reading = false; // Don't add to the buffer if we've decoded to an empty string chunk and\n\t      // we're not in object mode\n\n\t      if (!skipAdd) {\n\t        // if we want the data now, just emit it.\n\t        if (state.flowing && state.length === 0 && !state.sync) {\n\t          stream.emit('data', chunk);\n\t          stream.read(0);\n\t        } else {\n\t          // update the buffer info.\n\t          state.length += state.objectMode ? 1 : chunk.length;\n\t          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\t          if (state.needReadable) emitReadable(stream);\n\t        }\n\t      }\n\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\n\t  return needMoreData(state);\n\t} // if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\n\n\tfunction needMoreData(state) {\n\t  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n\t} // backwards compatibility.\n\n\n\tReadable.prototype.setEncoding = function (enc) {\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t}; // Don't raise the hwm > 8MB\n\n\n\tvar MAX_HWM = 0x800000;\n\n\tfunction computeNewHighWaterMark(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2 to prevent increasing hwm excessively in\n\t    // tiny amounts\n\t    n--;\n\t    n |= n >>> 1;\n\t    n |= n >>> 2;\n\t    n |= n >>> 4;\n\t    n |= n >>> 8;\n\t    n |= n >>> 16;\n\t    n++;\n\t  }\n\n\t  return n;\n\t} // This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\n\n\tfunction howMuchToRead(n, state) {\n\t  if (n <= 0 || state.length === 0 && state.ended) return 0;\n\t  if (state.objectMode) return 1;\n\n\t  if (n !== n) {\n\t    // Only flow one buffer at a time\n\t    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n\t  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n\t  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n\t  if (n <= state.length) return n; // Don't have enough\n\n\t  if (!state.ended) {\n\t    state.needReadable = true;\n\t    return 0;\n\t  }\n\n\t  return state.length;\n\t} // you can override either this method, or the async _read(n) below.\n\n\n\tReadable.prototype.read = function (n) {\n\t  debug('read', n);\n\t  n = parseInt(n, 10);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\n\t  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n\t    return null;\n\t  }\n\n\t  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0) endReadable(this);\n\t    return null;\n\t  } // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t  // if we need a readable event, then we need to do some reading.\n\n\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  } // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\n\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  } else if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n\t    if (state.length === 0) state.needReadable = true; // call internal read method\n\n\t    this._read(state.highWaterMark);\n\n\t    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n\t    // and we need to re-evaluate how much data we can return to the user.\n\n\t    if (!state.reading) n = howMuchToRead(nOrig, state);\n\t  }\n\n\t  var ret;\n\t  if (n > 0) ret = fromList(n, state);else ret = null;\n\n\t  if (ret === null) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  } else {\n\t    state.length -= n;\n\t  }\n\n\t  if (state.length === 0) {\n\t    // If we have nothing in the buffer, then we want to know\n\t    // as soon as we *do* get something into the buffer.\n\t    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n\t    if (nOrig !== n && state.ended) endReadable(this);\n\t  }\n\n\t  if (ret !== null) this.emit('data', ret);\n\t  return ret;\n\t};\n\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\n\t  if (!isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\n\t  return er;\n\t}\n\n\tfunction onEofChunk(stream, state) {\n\t  if (state.ended) return;\n\n\t  if (state.decoder) {\n\t    var chunk = state.decoder.end();\n\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\n\t  state.ended = true; // emit 'readable' now to make sure it gets picked up.\n\n\t  emitReadable(stream);\n\t} // Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\n\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync) nextTick$1(emitReadable_, stream);else emitReadable_(stream);\n\t  }\n\t}\n\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t} // at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\n\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    nextTick$1(maybeReadMore_, stream, state);\n\t  }\n\t}\n\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\n\t  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length) // didn't get any data, stop spinning.\n\t      break;else len = state.length;\n\t  }\n\n\t  state.readingMore = false;\n\t} // abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\n\n\tReadable.prototype._read = function (n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\n\tReadable.prototype.pipe = function (dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t  var doEnd = !pipeOpts || pipeOpts.end !== false;\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted) nextTick$1(endFn);else src.once('end', endFn);\n\t  dest.on('unpipe', onunpipe);\n\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  } // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\n\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t  var cleanedUp = false;\n\n\t  function cleanup() {\n\t    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t    cleanedUp = true; // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\n\t    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n\t  } // If the user pushes more data while we're writing to dest then we'll end up\n\t  // in ondata again. However, we only want to increase awaitDrain once because\n\t  // dest will only emit one 'drain' event for the multiple writes.\n\t  // => Introduce a guard on increasing awaitDrain.\n\n\n\t  var increasedAwaitDrain = false;\n\t  src.on('data', ondata);\n\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    increasedAwaitDrain = false;\n\t    var ret = dest.write(chunk);\n\n\t    if (false === ret && !increasedAwaitDrain) {\n\t      // If the user unpiped during `dest.write()`, it is possible\n\t      // to get stuck in a permanently paused state if that write\n\t      // also returned false.\n\t      // => Check whether `dest` is still a piping destination.\n\t      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf$1(state.pipes, dest) !== -1) && !cleanedUp) {\n\t        debug('false write response, pause', src._readableState.awaitDrain);\n\t        src._readableState.awaitDrain++;\n\t        increasedAwaitDrain = true;\n\t      }\n\n\t      src.pause();\n\t    }\n\t  } // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\n\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (listenerCount$1(dest, 'error') === 0) dest.emit('error', er);\n\t  } // Make sure our error handler is attached before userland ones.\n\n\n\t  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\n\t  dest.once('close', onclose);\n\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\n\t  dest.once('finish', onfinish);\n\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  } // tell the dest that it's being piped to\n\n\n\t  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\n\t  return dest;\n\t};\n\n\tfunction pipeOnDrain(src) {\n\t  return function () {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain) state.awaitDrain--;\n\n\t    if (state.awaitDrain === 0 && src.listeners('data').length) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\n\tReadable.prototype.unpipe = function (dest) {\n\t  var state = this._readableState; // if we're not piping anywhere, then do nothing.\n\n\t  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes) return this;\n\t    if (!dest) dest = state.pipes; // got a match.\n\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest) dest.emit('unpipe', this);\n\t    return this;\n\t  } // slow case. multiple pipe destinations.\n\n\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\n\t    for (var _i = 0; _i < len; _i++) {\n\t      dests[_i].emit('unpipe', this);\n\t    }\n\n\t    return this;\n\t  } // try to find the right one.\n\n\n\t  var i = indexOf$1(state.pipes, dest);\n\t  if (i === -1) return this;\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\t  dest.emit('unpipe', this);\n\t  return this;\n\t}; // set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\n\n\tReadable.prototype.on = function (ev, fn) {\n\t  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n\t  if (ev === 'data') {\n\t    // Start flowing on next tick if stream isn't explicitly paused\n\t    if (this._readableState.flowing !== false) this.resume();\n\t  } else if (ev === 'readable') {\n\t    var state = this._readableState;\n\n\t    if (!state.endEmitted && !state.readableListening) {\n\t      state.readableListening = state.needReadable = true;\n\t      state.emittedReadable = false;\n\n\t      if (!state.reading) {\n\t        nextTick$1(nReadingNextTick, this);\n\t      } else if (state.length) {\n\t        emitReadable(this);\n\t      }\n\t    }\n\t  }\n\n\t  return res;\n\t};\n\n\tReadable.prototype.addListener = Readable.prototype.on;\n\n\tfunction nReadingNextTick(self) {\n\t  debug('readable nexttick read 0');\n\t  self.read(0);\n\t} // pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\n\n\tReadable.prototype.resume = function () {\n\t  var state = this._readableState;\n\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    resume(this, state);\n\t  }\n\n\t  return this;\n\t};\n\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    nextTick$1(resume_, stream, state);\n\t  }\n\t}\n\n\tfunction resume_(stream, state) {\n\t  if (!state.reading) {\n\t    debug('resume read 0');\n\t    stream.read(0);\n\t  }\n\n\t  state.resumeScheduled = false;\n\t  state.awaitDrain = 0;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading) stream.read(0);\n\t}\n\n\tReadable.prototype.pause = function () {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\n\t  return this;\n\t};\n\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\n\t  while (state.flowing && stream.read() !== null) {}\n\t} // wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\n\n\tReadable.prototype.wrap = function (stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t  var self = this;\n\t  stream.on('end', function () {\n\t    debug('wrapped end');\n\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length) self.push(chunk);\n\t    }\n\n\t    self.push(null);\n\t  });\n\t  stream.on('data', function (chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n\t    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\t    var ret = self.push(chunk);\n\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  }); // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\n\t  for (var i in stream) {\n\t    if (this[i] === undefined && typeof stream[i] === 'function') {\n\t      this[i] = function (method) {\n\t        return function () {\n\t          return stream[method].apply(stream, arguments);\n\t        };\n\t      }(i);\n\t    }\n\t  } // proxy certain important events.\n\n\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function (ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  }); // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\n\t  self._read = function (n) {\n\t    debug('wrapped _read', n);\n\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\n\t  return self;\n\t}; // exposed for testing purposes only.\n\n\n\tReadable._fromList = fromList; // Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\n\tfunction fromList(n, state) {\n\t  // nothing buffered\n\t  if (state.length === 0) return null;\n\t  var ret;\n\t  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n\t    // read it all, truncate the list\n\t    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n\t    state.buffer.clear();\n\t  } else {\n\t    // read part of list\n\t    ret = fromListPartial(n, state.buffer, state.decoder);\n\t  }\n\t  return ret;\n\t} // Extracts only enough buffered data to satisfy the amount requested.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\n\n\tfunction fromListPartial(n, list, hasStrings) {\n\t  var ret;\n\n\t  if (n < list.head.data.length) {\n\t    // slice is the same for buffers and strings\n\t    ret = list.head.data.slice(0, n);\n\t    list.head.data = list.head.data.slice(n);\n\t  } else if (n === list.head.data.length) {\n\t    // first chunk is a perfect match\n\t    ret = list.shift();\n\t  } else {\n\t    // result spans more than one buffer\n\t    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n\t  }\n\n\t  return ret;\n\t} // Copies a specified amount of characters from the list of buffered data\n\t// chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\n\n\tfunction copyFromBufferString(n, list) {\n\t  var p = list.head;\n\t  var c = 1;\n\t  var ret = p.data;\n\t  n -= ret.length;\n\n\t  while (p = p.next) {\n\t    var str = p.data;\n\t    var nb = n > str.length ? str.length : n;\n\t    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n\t    n -= nb;\n\n\t    if (n === 0) {\n\t      if (nb === str.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = str.slice(nb);\n\t      }\n\n\t      break;\n\t    }\n\n\t    ++c;\n\t  }\n\n\t  list.length -= c;\n\t  return ret;\n\t} // Copies a specified amount of bytes from the list of buffered data chunks.\n\t// This function is designed to be inlinable, so please take care when making\n\t// changes to the function body.\n\n\n\tfunction copyFromBuffer(n, list) {\n\t  var ret = Buffer.allocUnsafe(n);\n\t  var p = list.head;\n\t  var c = 1;\n\t  p.data.copy(ret);\n\t  n -= p.data.length;\n\n\t  while (p = p.next) {\n\t    var buf = p.data;\n\t    var nb = n > buf.length ? buf.length : n;\n\t    buf.copy(ret, ret.length - n, 0, nb);\n\t    n -= nb;\n\n\t    if (n === 0) {\n\t      if (nb === buf.length) {\n\t        ++c;\n\t        if (p.next) list.head = p.next;else list.head = list.tail = null;\n\t      } else {\n\t        list.head = p;\n\t        p.data = buf.slice(nb);\n\t      }\n\n\t      break;\n\t    }\n\n\t    ++c;\n\t  }\n\n\t  list.length -= c;\n\t  return ret;\n\t}\n\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState; // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\n\t  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    nextTick$1(endReadableNT, state, stream);\n\t  }\n\t}\n\n\tfunction endReadableNT(state, stream) {\n\t  // Check that we didn't get one last unshift.\n\t  if (!state.endEmitted && state.length === 0) {\n\t    state.endEmitted = true;\n\t    stream.readable = false;\n\t    stream.emit('end');\n\t  }\n\t}\n\n\tfunction forEach(xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\n\tfunction indexOf$1(xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\n\t  return -1;\n\t}\n\n\t// A bit simpler than readable streams.\n\tWritable.WritableState = WritableState;\n\tinherits$1(Writable, EventEmitter);\n\n\tfunction nop() {}\n\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t  this.next = null;\n\t}\n\n\tfunction WritableState(options, stream) {\n\t  Object.defineProperty(this, 'buffer', {\n\t    get: deprecate(function () {\n\t      return this.getBuffer();\n\t    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n\t  });\n\t  options = options || {}; // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\n\t  this.objectMode = !!options.objectMode;\n\t  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm; // cast to ints.\n\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t  this.needDrain = false; // at the start of calling end()\n\n\t  this.ending = false; // when end() has been called, and returned\n\n\t  this.ended = false; // when 'finish' is emitted\n\n\t  this.finished = false; // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\n\t  this.length = 0; // a flag to see when we're in the middle of a write.\n\n\t  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n\t  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\n\t  this.sync = true; // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\n\t  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n\t  this.onwrite = function (er) {\n\t    onwrite(stream, er);\n\t  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n\t  this.writecb = null; // the amount that is being written when _write is called.\n\n\t  this.writelen = 0;\n\t  this.bufferedRequest = null;\n\t  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\n\t  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\n\t  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n\t  this.errorEmitted = false; // count buffered requests\n\n\t  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n\t  // one allocated and free to use, and we maintain at most two\n\n\t  this.corkedRequestsFree = new CorkedRequest(this);\n\t}\n\n\tWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n\t  var current = this.bufferedRequest;\n\t  var out = [];\n\n\t  while (current) {\n\t    out.push(current);\n\t    current = current.next;\n\t  }\n\n\t  return out;\n\t};\n\tfunction Writable(options) {\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\t  this._writableState = new WritableState(options, this); // legacy.\n\n\t  this.writable = true;\n\n\t  if (options) {\n\t    if (typeof options.write === 'function') this._write = options.write;\n\t    if (typeof options.writev === 'function') this._writev = options.writev;\n\t  }\n\n\t  EventEmitter.call(this);\n\t} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\tWritable.prototype.pipe = function () {\n\t  this.emit('error', new Error('Cannot pipe, not readable'));\n\t};\n\n\tfunction writeAfterEnd(stream, cb) {\n\t  var er = new Error('write after end'); // TODO: defer error events consistently everywhere, not just the cb\n\n\t  stream.emit('error', er);\n\t  nextTick$1(cb, er);\n\t} // If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\n\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  var er = false; // Always throw error if a null is written\n\t  // if we are not in object mode then throw\n\t  // if it is not a buffer, string, or undefined.\n\n\t  if (chunk === null) {\n\t    er = new TypeError('May not write null values to stream');\n\t  } else if (!Buffer$1.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\n\t  if (er) {\n\t    stream.emit('error', er);\n\t    nextTick$1(cb, er);\n\t    valid = false;\n\t  }\n\n\t  return valid;\n\t}\n\n\tWritable.prototype.write = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\n\t  if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\n\t  if (Buffer$1.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\t  if (typeof cb !== 'function') cb = nop;\n\t  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t  return ret;\n\t};\n\n\tWritable.prototype.cork = function () {\n\t  var state = this._writableState;\n\t  state.corked++;\n\t};\n\n\tWritable.prototype.uncork = function () {\n\t  var state = this._writableState;\n\n\t  if (state.corked) {\n\t    state.corked--;\n\t    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n\t  }\n\t};\n\n\tWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n\t  // node::ParseEncoding() requires lower case.\n\t  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n\t  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n\t  this._writableState.defaultEncoding = encoding;\n\t  return this;\n\t};\n\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n\t    chunk = Buffer$1.from(chunk, encoding);\n\t  }\n\n\t  return chunk;\n\t} // if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\n\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (Buffer$1.isBuffer(chunk)) encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t  state.length += len;\n\t  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n\t  if (!ret) state.needDrain = true;\n\n\t  if (state.writing || state.corked) {\n\t    var last = state.lastBufferedRequest;\n\t    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n\n\t    if (last) {\n\t      last.next = state.lastBufferedRequest;\n\t    } else {\n\t      state.bufferedRequest = state.lastBufferedRequest;\n\t    }\n\n\t    state.bufferedRequestCount += 1;\n\t  } else {\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t  }\n\n\t  return ret;\n\t}\n\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  --state.pendingcb;\n\t  if (sync) nextTick$1(cb, er);else cb(er);\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t  onwriteStateUpdate(state);\n\t  if (er) onwriteError(stream, state, sync, er, cb);else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(state);\n\n\t    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n\t      clearBuffer(stream, state);\n\t    }\n\n\t    if (sync) {\n\t      /*<replacement>*/\n\t      nextTick$1(afterWrite, stream, state, finished, cb);\n\t      /*</replacement>*/\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished) onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t} // Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\n\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t} // if there's something in the buffer waiting, then process it\n\n\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t  var entry = state.bufferedRequest;\n\n\t  if (stream._writev && entry && entry.next) {\n\t    // Fast case, write everything using _writev()\n\t    var l = state.bufferedRequestCount;\n\t    var buffer = new Array(l);\n\t    var holder = state.corkedRequestsFree;\n\t    holder.entry = entry;\n\t    var count = 0;\n\n\t    while (entry) {\n\t      buffer[count] = entry;\n\t      entry = entry.next;\n\t      count += 1;\n\t    }\n\n\t    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n\t    // as the hot path ends with doWrite\n\n\t    state.pendingcb++;\n\t    state.lastBufferedRequest = null;\n\n\t    if (holder.next) {\n\t      state.corkedRequestsFree = holder.next;\n\t      holder.next = null;\n\t    } else {\n\t      state.corkedRequestsFree = new CorkedRequest(state);\n\t    }\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    while (entry) {\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t      entry = entry.next; // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\n\t      if (state.writing) {\n\t        break;\n\t      }\n\t    }\n\n\t    if (entry === null) state.lastBufferedRequest = null;\n\t  }\n\n\t  state.bufferedRequestCount = 0;\n\t  state.bufferedRequest = entry;\n\t  state.bufferProcessing = false;\n\t}\n\n\tWritable.prototype._write = function (chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\t};\n\n\tWritable.prototype._writev = null;\n\n\tWritable.prototype.end = function (chunk, encoding, cb) {\n\t  var state = this._writableState;\n\n\t  if (typeof chunk === 'function') {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (typeof encoding === 'function') {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\n\t  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  } // ignore unnecessary end() calls.\n\n\n\t  if (!state.ending && !state.finished) endWritable(this, state, cb);\n\t};\n\n\tfunction needFinish(state) {\n\t  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n\t}\n\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(state);\n\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else {\n\t      prefinish(stream, state);\n\t    }\n\t  }\n\n\t  return need;\n\t}\n\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\n\t  if (cb) {\n\t    if (state.finished) nextTick$1(cb);else stream.once('finish', cb);\n\t  }\n\n\t  state.ended = true;\n\t  stream.writable = false;\n\t} // It seems a linked list but it is not\n\t// there will be only 2 of these for each stream\n\n\n\tfunction CorkedRequest(state) {\n\t  var _this = this;\n\n\t  this.next = null;\n\t  this.entry = null;\n\n\t  this.finish = function (err) {\n\t    var entry = _this.entry;\n\t    _this.entry = null;\n\n\t    while (entry) {\n\t      var cb = entry.callback;\n\t      state.pendingcb--;\n\t      cb(err);\n\t      entry = entry.next;\n\t    }\n\n\t    if (state.corkedRequestsFree) {\n\t      state.corkedRequestsFree.next = _this;\n\t    } else {\n\t      state.corkedRequestsFree = _this;\n\t    }\n\t  };\n\t}\n\n\tinherits$1(Duplex, Readable);\n\tvar keys$4 = Object.keys(Writable.prototype);\n\n\tfor (var v = 0; v < keys$4.length; v++) {\n\t  var method = keys$4[v];\n\t  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n\t}\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex)) return new Duplex(options);\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t  if (options && options.readable === false) this.readable = false;\n\t  if (options && options.writable === false) this.writable = false;\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\t  this.once('end', onend);\n\t} // the no-half-open enforcer\n\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended) return; // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\n\t  nextTick$1(onEndNT, this);\n\t}\n\n\tfunction onEndNT(self) {\n\t  self.end();\n\t}\n\n\t// a transform stream is a readable/writable stream where you do\n\tinherits$1(Transform, Duplex);\n\n\tfunction TransformState(stream) {\n\t  this.afterTransform = function (er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t  this.writeencoding = null;\n\t}\n\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t  var cb = ts.writecb;\n\t  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t  if (data !== null && data !== undefined) stream.push(data);\n\t  cb(er);\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform)) return new Transform(options);\n\t  Duplex.call(this, options);\n\t  this._transformState = new TransformState(this); // when the writable side finishes, then flush out anything remaining.\n\n\t  var stream = this; // start out asking for a readable event once data is transformed.\n\n\t  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\n\t  this._readableState.sync = false;\n\n\t  if (options) {\n\t    if (typeof options.transform === 'function') this._transform = options.transform;\n\t    if (typeof options.flush === 'function') this._flush = options.flush;\n\t  }\n\n\t  this.once('prefinish', function () {\n\t    if (typeof this._flush === 'function') this._flush(function (er) {\n\t      done(stream, er);\n\t    });else done(stream);\n\t  });\n\t}\n\n\tTransform.prototype.push = function (chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t}; // This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\n\n\tTransform.prototype._transform = function (chunk, encoding, cb) {\n\t  throw new Error('Not implemented');\n\t};\n\n\tTransform.prototype._write = function (chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n\t  }\n\t}; // Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\n\n\tTransform.prototype._read = function (n) {\n\t  var ts = this._transformState;\n\n\t  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\n\tfunction done(stream, er) {\n\t  if (er) return stream.emit('error', er); // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\t  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\t  return stream.push(null);\n\t}\n\n\tinherits$1(PassThrough, Transform);\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\t  Transform.call(this, options);\n\t}\n\n\tPassThrough.prototype._transform = function (chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\tinherits$1(Stream, EventEmitter);\n\tStream.Readable = Readable;\n\tStream.Writable = Writable;\n\tStream.Duplex = Duplex;\n\tStream.Transform = Transform;\n\tStream.PassThrough = PassThrough; // Backwards-compat with node 0.4.x\n\n\tStream.Stream = Stream;\n\t// part of this class) is overridden in the Readable class.\n\n\tfunction Stream() {\n\t  EventEmitter.call(this);\n\t}\n\n\tStream.prototype.pipe = function (dest, options) {\n\t  var source = this;\n\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\n\t  source.on('data', ondata);\n\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\n\t  dest.on('drain', ondrain); // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\n\t  var didOnEnd = false;\n\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t    dest.end();\n\t  }\n\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  } // don't leave dangling pipes when there are errors.\n\n\n\t  function onerror(er) {\n\t    cleanup();\n\n\t    if (EventEmitter.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror); // remove all the event listeners that were added.\n\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t    dest.removeListener('close', cleanup);\n\t  }\n\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t  dest.on('close', cleanup);\n\t  dest.emit('pipe', source); // Allow for unix-like usage: A.pipe(B).pipe(C)\n\n\t  return dest;\n\t};\n\n\tvar WritableStream = Stream.Writable;\n\tvar inherits$2 = util.inherits;\n\tvar browserStdout = BrowserStdout;\n\tinherits$2(BrowserStdout, WritableStream);\n\n\tfunction BrowserStdout(opts) {\n\t  if (!(this instanceof BrowserStdout)) return new BrowserStdout(opts);\n\t  opts = opts || {};\n\t  WritableStream.call(this, opts);\n\t  this.label = opts.label !== undefined ? opts.label : 'stdout';\n\t}\n\n\tBrowserStdout.prototype._write = function (chunks, encoding, cb) {\n\t  var output = chunks.toString ? chunks.toString() : chunks;\n\n\t  if (this.label === false) {\n\t    console.log(output);\n\t  } else {\n\t    console.log(this.label + ':', output);\n\t  }\n\n\t  nextTick(cb);\n\t};\n\n\tvar parseQuery = function parseQuery(qs) {\n\t  return qs.replace('?', '').split('&').reduce(function (obj, pair) {\n\t    var i = pair.indexOf('=');\n\t    var key = pair.slice(0, i);\n\t    var val = pair.slice(++i); // Due to how the URLSearchParams API treats spaces\n\n\t    obj[key] = decodeURIComponent(val.replace(/\\+/g, '%20'));\n\t    return obj;\n\t  }, {});\n\t};\n\n\tfunction highlight(js) {\n\t  return js.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>').replace(/('.*?')/gm, '<span class=\"string\">$1</span>').replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>').replace(/(\\d+)/gm, '<span class=\"number\">$1</span>').replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>').replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n\t}\n\t/**\n\t * Highlight the contents of tag `name`.\n\t *\n\t * @private\n\t * @param {string} name\n\t */\n\n\n\tvar highlightTags = function highlightTags(name) {\n\t  var code = document.getElementById('mocha').getElementsByTagName(name);\n\n\t  for (var i = 0, len = code.length; i < len; ++i) {\n\t    code[i].innerHTML = highlight(code[i].innerHTML);\n\t  }\n\t};\n\n\tvar nativePromiseConstructor = global_1.Promise;\n\n\tvar iteratorClose = function (iterator) {\n\t  var returnMethod = iterator['return'];\n\t  if (returnMethod !== undefined) {\n\t    return anObject(returnMethod.call(iterator)).value;\n\t  }\n\t};\n\n\tvar Result = function (stopped, result) {\n\t  this.stopped = stopped;\n\t  this.result = result;\n\t};\n\n\tvar iterate = function (iterable, unboundFunction, options) {\n\t  var that = options && options.that;\n\t  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n\t  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n\t  var INTERRUPTED = !!(options && options.INTERRUPTED);\n\t  var fn = functionBindContext(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n\t  var iterator, iterFn, index, length, result, next, step;\n\n\t  var stop = function (condition) {\n\t    if (iterator) iteratorClose(iterator);\n\t    return new Result(true, condition);\n\t  };\n\n\t  var callFn = function (value) {\n\t    if (AS_ENTRIES) {\n\t      anObject(value);\n\t      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n\t    } return INTERRUPTED ? fn(value, stop) : fn(value);\n\t  };\n\n\t  if (IS_ITERATOR) {\n\t    iterator = iterable;\n\t  } else {\n\t    iterFn = getIteratorMethod(iterable);\n\t    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n\t    // optimisation for array iterators\n\t    if (isArrayIteratorMethod(iterFn)) {\n\t      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n\t        result = callFn(iterable[index]);\n\t        if (result && result instanceof Result) return result;\n\t      } return new Result(false);\n\t    }\n\t    iterator = iterFn.call(iterable);\n\t  }\n\n\t  next = iterator.next;\n\t  while (!(step = next.call(iterator)).done) {\n\t    try {\n\t      result = callFn(step.value);\n\t    } catch (error) {\n\t      iteratorClose(iterator);\n\t      throw error;\n\t    }\n\t    if (typeof result == 'object' && result && result instanceof Result) return result;\n\t  } return new Result(false);\n\t};\n\n\tvar engineIsIos = /(iphone|ipod|ipad).*applewebkit/i.test(engineUserAgent);\n\n\tvar engineIsNode = classofRaw(global_1.process) == 'process';\n\n\tvar location$1 = global_1.location;\n\tvar set$2 = global_1.setImmediate;\n\tvar clear = global_1.clearImmediate;\n\tvar process$2 = global_1.process;\n\tvar MessageChannel = global_1.MessageChannel;\n\tvar Dispatch = global_1.Dispatch;\n\tvar counter = 0;\n\tvar queue$2 = {};\n\tvar ONREADYSTATECHANGE = 'onreadystatechange';\n\tvar defer, channel, port;\n\n\tvar run = function (id) {\n\t  // eslint-disable-next-line no-prototype-builtins\n\t  if (queue$2.hasOwnProperty(id)) {\n\t    var fn = queue$2[id];\n\t    delete queue$2[id];\n\t    fn();\n\t  }\n\t};\n\n\tvar runner = function (id) {\n\t  return function () {\n\t    run(id);\n\t  };\n\t};\n\n\tvar listener = function (event) {\n\t  run(event.data);\n\t};\n\n\tvar post = function (id) {\n\t  // old engines have not location.origin\n\t  global_1.postMessage(id + '', location$1.protocol + '//' + location$1.host);\n\t};\n\n\t// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\tif (!set$2 || !clear) {\n\t  set$2 = function setImmediate(fn) {\n\t    var args = [];\n\t    var i = 1;\n\t    while (arguments.length > i) args.push(arguments[i++]);\n\t    queue$2[++counter] = function () {\n\t      // eslint-disable-next-line no-new-func\n\t      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n\t    };\n\t    defer(counter);\n\t    return counter;\n\t  };\n\t  clear = function clearImmediate(id) {\n\t    delete queue$2[id];\n\t  };\n\t  // Node.js 0.8-\n\t  if (engineIsNode) {\n\t    defer = function (id) {\n\t      process$2.nextTick(runner(id));\n\t    };\n\t  // Sphere (JS game engine) Dispatch API\n\t  } else if (Dispatch && Dispatch.now) {\n\t    defer = function (id) {\n\t      Dispatch.now(runner(id));\n\t    };\n\t  // Browsers with MessageChannel, includes WebWorkers\n\t  // except iOS - https://github.com/zloirock/core-js/issues/624\n\t  } else if (MessageChannel && !engineIsIos) {\n\t    channel = new MessageChannel();\n\t    port = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = functionBindContext(port.postMessage, port, 1);\n\t  // Browsers with postMessage, skip WebWorkers\n\t  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n\t  } else if (\n\t    global_1.addEventListener &&\n\t    typeof postMessage == 'function' &&\n\t    !global_1.importScripts &&\n\t    location$1 && location$1.protocol !== 'file:' &&\n\t    !fails(post)\n\t  ) {\n\t    defer = post;\n\t    global_1.addEventListener('message', listener, false);\n\t  // IE8-\n\t  } else if (ONREADYSTATECHANGE in documentCreateElement('script')) {\n\t    defer = function (id) {\n\t      html.appendChild(documentCreateElement('script'))[ONREADYSTATECHANGE] = function () {\n\t        html.removeChild(this);\n\t        run(id);\n\t      };\n\t    };\n\t  // Rest old browsers\n\t  } else {\n\t    defer = function (id) {\n\t      setTimeout(runner(id), 0);\n\t    };\n\t  }\n\t}\n\n\tvar task = {\n\t  set: set$2,\n\t  clear: clear\n\t};\n\n\tvar engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(engineUserAgent);\n\n\tvar getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;\n\tvar macrotask = task.set;\n\n\n\n\n\tvar MutationObserver = global_1.MutationObserver || global_1.WebKitMutationObserver;\n\tvar document$2 = global_1.document;\n\tvar process$3 = global_1.process;\n\tvar Promise$1 = global_1.Promise;\n\t// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\n\tvar queueMicrotaskDescriptor = getOwnPropertyDescriptor$3(global_1, 'queueMicrotask');\n\tvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\n\tvar flush, head, last, notify, toggle, node, promise, then;\n\n\t// modern engines have queueMicrotask method\n\tif (!queueMicrotask) {\n\t  flush = function () {\n\t    var parent, fn;\n\t    if (engineIsNode && (parent = process$3.domain)) parent.exit();\n\t    while (head) {\n\t      fn = head.fn;\n\t      head = head.next;\n\t      try {\n\t        fn();\n\t      } catch (error) {\n\t        if (head) notify();\n\t        else last = undefined;\n\t        throw error;\n\t      }\n\t    } last = undefined;\n\t    if (parent) parent.enter();\n\t  };\n\n\t  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n\t  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n\t  if (!engineIsIos && !engineIsNode && !engineIsWebosWebkit && MutationObserver && document$2) {\n\t    toggle = true;\n\t    node = document$2.createTextNode('');\n\t    new MutationObserver(flush).observe(node, { characterData: true });\n\t    notify = function () {\n\t      node.data = toggle = !toggle;\n\t    };\n\t  // environments with maybe non-completely correct, but existent Promise\n\t  } else if (Promise$1 && Promise$1.resolve) {\n\t    // Promise.resolve without an argument throws an error in LG WebOS 2\n\t    promise = Promise$1.resolve(undefined);\n\t    then = promise.then;\n\t    notify = function () {\n\t      then.call(promise, flush);\n\t    };\n\t  // Node.js without promises\n\t  } else if (engineIsNode) {\n\t    notify = function () {\n\t      process$3.nextTick(flush);\n\t    };\n\t  // for other environments - macrotask based on:\n\t  // - setImmediate\n\t  // - MessageChannel\n\t  // - window.postMessag\n\t  // - onreadystatechange\n\t  // - setTimeout\n\t  } else {\n\t    notify = function () {\n\t      // strange IE + webpack dev server bug - use .call(global)\n\t      macrotask.call(global_1, flush);\n\t    };\n\t  }\n\t}\n\n\tvar microtask = queueMicrotask || function (fn) {\n\t  var task = { fn: fn, next: undefined };\n\t  if (last) last.next = task;\n\t  if (!head) {\n\t    head = task;\n\t    notify();\n\t  } last = task;\n\t};\n\n\tvar PromiseCapability = function (C) {\n\t  var resolve, reject;\n\t  this.promise = new C(function ($$resolve, $$reject) {\n\t    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject = $$reject;\n\t  });\n\t  this.resolve = aFunction$1(resolve);\n\t  this.reject = aFunction$1(reject);\n\t};\n\n\t// 25.4.1.5 NewPromiseCapability(C)\n\tvar f$7 = function (C) {\n\t  return new PromiseCapability(C);\n\t};\n\n\tvar newPromiseCapability = {\n\t\tf: f$7\n\t};\n\n\tvar promiseResolve = function (C, x) {\n\t  anObject(C);\n\t  if (isObject(x) && x.constructor === C) return x;\n\t  var promiseCapability = newPromiseCapability.f(C);\n\t  var resolve = promiseCapability.resolve;\n\t  resolve(x);\n\t  return promiseCapability.promise;\n\t};\n\n\tvar hostReportErrors = function (a, b) {\n\t  var console = global_1.console;\n\t  if (console && console.error) {\n\t    arguments.length === 1 ? console.error(a) : console.error(a, b);\n\t  }\n\t};\n\n\tvar perform = function (exec) {\n\t  try {\n\t    return { error: false, value: exec() };\n\t  } catch (error) {\n\t    return { error: true, value: error };\n\t  }\n\t};\n\n\tvar task$1 = task.set;\n\n\n\n\n\n\n\n\n\n\n\n\tvar SPECIES$6 = wellKnownSymbol('species');\n\tvar PROMISE = 'Promise';\n\tvar getInternalState$3 = internalState.get;\n\tvar setInternalState$4 = internalState.set;\n\tvar getInternalPromiseState = internalState.getterFor(PROMISE);\n\tvar PromiseConstructor = nativePromiseConstructor;\n\tvar TypeError$1 = global_1.TypeError;\n\tvar document$3 = global_1.document;\n\tvar process$4 = global_1.process;\n\tvar $fetch = getBuiltIn('fetch');\n\tvar newPromiseCapability$1 = newPromiseCapability.f;\n\tvar newGenericPromiseCapability = newPromiseCapability$1;\n\tvar DISPATCH_EVENT = !!(document$3 && document$3.createEvent && global_1.dispatchEvent);\n\tvar NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';\n\tvar UNHANDLED_REJECTION = 'unhandledrejection';\n\tvar REJECTION_HANDLED = 'rejectionhandled';\n\tvar PENDING = 0;\n\tvar FULFILLED = 1;\n\tvar REJECTED = 2;\n\tvar HANDLED = 1;\n\tvar UNHANDLED = 2;\n\tvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\n\tvar FORCED$7 = isForced_1(PROMISE, function () {\n\t  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);\n\t  if (!GLOBAL_CORE_JS_PROMISE) {\n\t    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n\t    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n\t    // We can't detect it synchronously, so just check versions\n\t    if (engineV8Version === 66) return true;\n\t    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\t    if (!engineIsNode && !NATIVE_REJECTION_EVENT) return true;\n\t  }\n\t  // We can't use @@species feature detection in V8 since it causes\n\t  // deoptimization and performance degradation\n\t  // https://github.com/zloirock/core-js/issues/679\n\t  if (engineV8Version >= 51 && /native code/.test(PromiseConstructor)) return false;\n\t  // Detect correctness of subclassing with @@species support\n\t  var promise = PromiseConstructor.resolve(1);\n\t  var FakePromise = function (exec) {\n\t    exec(function () { /* empty */ }, function () { /* empty */ });\n\t  };\n\t  var constructor = promise.constructor = {};\n\t  constructor[SPECIES$6] = FakePromise;\n\t  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);\n\t});\n\n\tvar INCORRECT_ITERATION = FORCED$7 || !checkCorrectnessOfIteration(function (iterable) {\n\t  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n\t});\n\n\t// helpers\n\tvar isThenable = function (it) {\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\n\tvar notify$1 = function (state, isReject) {\n\t  if (state.notified) return;\n\t  state.notified = true;\n\t  var chain = state.reactions;\n\t  microtask(function () {\n\t    var value = state.value;\n\t    var ok = state.state == FULFILLED;\n\t    var index = 0;\n\t    // variable length - can't use forEach\n\t    while (chain.length > index) {\n\t      var reaction = chain[index++];\n\t      var handler = ok ? reaction.ok : reaction.fail;\n\t      var resolve = reaction.resolve;\n\t      var reject = reaction.reject;\n\t      var domain = reaction.domain;\n\t      var result, then, exited;\n\t      try {\n\t        if (handler) {\n\t          if (!ok) {\n\t            if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n\t            state.rejection = HANDLED;\n\t          }\n\t          if (handler === true) result = value;\n\t          else {\n\t            if (domain) domain.enter();\n\t            result = handler(value); // can throw\n\t            if (domain) {\n\t              domain.exit();\n\t              exited = true;\n\t            }\n\t          }\n\t          if (result === reaction.promise) {\n\t            reject(TypeError$1('Promise-chain cycle'));\n\t          } else if (then = isThenable(result)) {\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch (error) {\n\t        if (domain && !exited) domain.exit();\n\t        reject(error);\n\t      }\n\t    }\n\t    state.reactions = [];\n\t    state.notified = false;\n\t    if (isReject && !state.rejection) onUnhandled(state);\n\t  });\n\t};\n\n\tvar dispatchEvent = function (name, promise, reason) {\n\t  var event, handler;\n\t  if (DISPATCH_EVENT) {\n\t    event = document$3.createEvent('Event');\n\t    event.promise = promise;\n\t    event.reason = reason;\n\t    event.initEvent(name, false, true);\n\t    global_1.dispatchEvent(event);\n\t  } else event = { promise: promise, reason: reason };\n\t  if (!NATIVE_REJECTION_EVENT && (handler = global_1['on' + name])) handler(event);\n\t  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n\t};\n\n\tvar onUnhandled = function (state) {\n\t  task$1.call(global_1, function () {\n\t    var promise = state.facade;\n\t    var value = state.value;\n\t    var IS_UNHANDLED = isUnhandled(state);\n\t    var result;\n\t    if (IS_UNHANDLED) {\n\t      result = perform(function () {\n\t        if (engineIsNode) {\n\t          process$4.emit('unhandledRejection', value, promise);\n\t        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n\t      });\n\t      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\t      state.rejection = engineIsNode || isUnhandled(state) ? UNHANDLED : HANDLED;\n\t      if (result.error) throw result.value;\n\t    }\n\t  });\n\t};\n\n\tvar isUnhandled = function (state) {\n\t  return state.rejection !== HANDLED && !state.parent;\n\t};\n\n\tvar onHandleUnhandled = function (state) {\n\t  task$1.call(global_1, function () {\n\t    var promise = state.facade;\n\t    if (engineIsNode) {\n\t      process$4.emit('rejectionHandled', promise);\n\t    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n\t  });\n\t};\n\n\tvar bind = function (fn, state, unwrap) {\n\t  return function (value) {\n\t    fn(state, value, unwrap);\n\t  };\n\t};\n\n\tvar internalReject = function (state, value, unwrap) {\n\t  if (state.done) return;\n\t  state.done = true;\n\t  if (unwrap) state = unwrap;\n\t  state.value = value;\n\t  state.state = REJECTED;\n\t  notify$1(state, true);\n\t};\n\n\tvar internalResolve = function (state, value, unwrap) {\n\t  if (state.done) return;\n\t  state.done = true;\n\t  if (unwrap) state = unwrap;\n\t  try {\n\t    if (state.facade === value) throw TypeError$1(\"Promise can't be resolved itself\");\n\t    var then = isThenable(value);\n\t    if (then) {\n\t      microtask(function () {\n\t        var wrapper = { done: false };\n\t        try {\n\t          then.call(value,\n\t            bind(internalResolve, wrapper, state),\n\t            bind(internalReject, wrapper, state)\n\t          );\n\t        } catch (error) {\n\t          internalReject(wrapper, error, state);\n\t        }\n\t      });\n\t    } else {\n\t      state.value = value;\n\t      state.state = FULFILLED;\n\t      notify$1(state, false);\n\t    }\n\t  } catch (error) {\n\t    internalReject({ done: false }, error, state);\n\t  }\n\t};\n\n\t// constructor polyfill\n\tif (FORCED$7) {\n\t  // 25.4.3.1 Promise(executor)\n\t  PromiseConstructor = function Promise(executor) {\n\t    anInstance(this, PromiseConstructor, PROMISE);\n\t    aFunction$1(executor);\n\t    Internal.call(this);\n\t    var state = getInternalState$3(this);\n\t    try {\n\t      executor(bind(internalResolve, state), bind(internalReject, state));\n\t    } catch (error) {\n\t      internalReject(state, error);\n\t    }\n\t  };\n\t  // eslint-disable-next-line no-unused-vars\n\t  Internal = function Promise(executor) {\n\t    setInternalState$4(this, {\n\t      type: PROMISE,\n\t      done: false,\n\t      notified: false,\n\t      parent: false,\n\t      reactions: [],\n\t      rejection: false,\n\t      state: PENDING,\n\t      value: undefined\n\t    });\n\t  };\n\t  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n\t    // `Promise.prototype.then` method\n\t    // https://tc39.es/ecma262/#sec-promise.prototype.then\n\t    then: function then(onFulfilled, onRejected) {\n\t      var state = getInternalPromiseState(this);\n\t      var reaction = newPromiseCapability$1(speciesConstructor(this, PromiseConstructor));\n\t      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = engineIsNode ? process$4.domain : undefined;\n\t      state.parent = true;\n\t      state.reactions.push(reaction);\n\t      if (state.state != PENDING) notify$1(state, false);\n\t      return reaction.promise;\n\t    },\n\t    // `Promise.prototype.catch` method\n\t    // https://tc39.es/ecma262/#sec-promise.prototype.catch\n\t    'catch': function (onRejected) {\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\t  OwnPromiseCapability = function () {\n\t    var promise = new Internal();\n\t    var state = getInternalState$3(promise);\n\t    this.promise = promise;\n\t    this.resolve = bind(internalResolve, state);\n\t    this.reject = bind(internalReject, state);\n\t  };\n\t  newPromiseCapability.f = newPromiseCapability$1 = function (C) {\n\t    return C === PromiseConstructor || C === PromiseWrapper\n\t      ? new OwnPromiseCapability(C)\n\t      : newGenericPromiseCapability(C);\n\t  };\n\n\t  if ( typeof nativePromiseConstructor == 'function') {\n\t    nativeThen = nativePromiseConstructor.prototype.then;\n\n\t    // wrap native Promise#then for native async functions\n\t    redefine(nativePromiseConstructor.prototype, 'then', function then(onFulfilled, onRejected) {\n\t      var that = this;\n\t      return new PromiseConstructor(function (resolve, reject) {\n\t        nativeThen.call(that, resolve, reject);\n\t      }).then(onFulfilled, onRejected);\n\t    // https://github.com/zloirock/core-js/issues/640\n\t    }, { unsafe: true });\n\n\t    // wrap fetch result\n\t    if (typeof $fetch == 'function') _export({ global: true, enumerable: true, forced: true }, {\n\t      // eslint-disable-next-line no-unused-vars\n\t      fetch: function fetch(input /* , init */) {\n\t        return promiseResolve(PromiseConstructor, $fetch.apply(global_1, arguments));\n\t      }\n\t    });\n\t  }\n\t}\n\n\t_export({ global: true, wrap: true, forced: FORCED$7 }, {\n\t  Promise: PromiseConstructor\n\t});\n\n\tsetToStringTag(PromiseConstructor, PROMISE, false);\n\tsetSpecies(PROMISE);\n\n\tPromiseWrapper = getBuiltIn(PROMISE);\n\n\t// statics\n\t_export({ target: PROMISE, stat: true, forced: FORCED$7 }, {\n\t  // `Promise.reject` method\n\t  // https://tc39.es/ecma262/#sec-promise.reject\n\t  reject: function reject(r) {\n\t    var capability = newPromiseCapability$1(this);\n\t    capability.reject.call(undefined, r);\n\t    return capability.promise;\n\t  }\n\t});\n\n\t_export({ target: PROMISE, stat: true, forced:  FORCED$7 }, {\n\t  // `Promise.resolve` method\n\t  // https://tc39.es/ecma262/#sec-promise.resolve\n\t  resolve: function resolve(x) {\n\t    return promiseResolve( this, x);\n\t  }\n\t});\n\n\t_export({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n\t  // `Promise.all` method\n\t  // https://tc39.es/ecma262/#sec-promise.all\n\t  all: function all(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability$1(C);\n\t    var resolve = capability.resolve;\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var $promiseResolve = aFunction$1(C.resolve);\n\t      var values = [];\n\t      var counter = 0;\n\t      var remaining = 1;\n\t      iterate(iterable, function (promise) {\n\t        var index = counter++;\n\t        var alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        $promiseResolve.call(C, promise).then(function (value) {\n\t          if (alreadyCalled) return;\n\t          alreadyCalled = true;\n\t          values[index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if (result.error) reject(result.value);\n\t    return capability.promise;\n\t  },\n\t  // `Promise.race` method\n\t  // https://tc39.es/ecma262/#sec-promise.race\n\t  race: function race(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability$1(C);\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var $promiseResolve = aFunction$1(C.resolve);\n\t      iterate(iterable, function (promise) {\n\t        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if (result.error) reject(result.value);\n\t    return capability.promise;\n\t  }\n\t});\n\n\t// `Symbol.asyncIterator` well-known symbol\n\t// https://tc39.es/ecma262/#sec-symbol.asynciterator\n\tdefineWellKnownSymbol('asyncIterator');\n\n\t// `Symbol.iterator` well-known symbol\n\t// https://tc39.es/ecma262/#sec-symbol.iterator\n\tdefineWellKnownSymbol('iterator');\n\n\t// `Symbol.toStringTag` well-known symbol\n\t// https://tc39.es/ecma262/#sec-symbol.tostringtag\n\tdefineWellKnownSymbol('toStringTag');\n\n\t// JSON[@@toStringTag] property\n\t// https://tc39.es/ecma262/#sec-json-@@tostringtag\n\tsetToStringTag(global_1.JSON, 'JSON', true);\n\n\t// Math[@@toStringTag] property\n\t// https://tc39.es/ecma262/#sec-math-@@tostringtag\n\tsetToStringTag(Math, 'Math', true);\n\n\tvar charAt$1 = stringMultibyte.charAt;\n\n\n\n\tvar STRING_ITERATOR = 'String Iterator';\n\tvar setInternalState$5 = internalState.set;\n\tvar getInternalState$4 = internalState.getterFor(STRING_ITERATOR);\n\n\t// `String.prototype[@@iterator]` method\n\t// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\n\tdefineIterator(String, 'String', function (iterated) {\n\t  setInternalState$5(this, {\n\t    type: STRING_ITERATOR,\n\t    string: String(iterated),\n\t    index: 0\n\t  });\n\t// `%StringIteratorPrototype%.next` method\n\t// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n\t}, function next() {\n\t  var state = getInternalState$4(this);\n\t  var string = state.string;\n\t  var index = state.index;\n\t  var point;\n\t  if (index >= string.length) return { value: undefined, done: true };\n\t  point = charAt$1(string, index);\n\t  state.index += point.length;\n\t  return { value: point, done: false };\n\t});\n\n\tvar ITERATOR$6 = wellKnownSymbol('iterator');\n\tvar TO_STRING_TAG$4 = wellKnownSymbol('toStringTag');\n\tvar ArrayValues = es_array_iterator.values;\n\n\tfor (var COLLECTION_NAME$1 in domIterables) {\n\t  var Collection$1 = global_1[COLLECTION_NAME$1];\n\t  var CollectionPrototype$1 = Collection$1 && Collection$1.prototype;\n\t  if (CollectionPrototype$1) {\n\t    // some Chrome versions have non-configurable methods on DOMTokenList\n\t    if (CollectionPrototype$1[ITERATOR$6] !== ArrayValues) try {\n\t      createNonEnumerableProperty(CollectionPrototype$1, ITERATOR$6, ArrayValues);\n\t    } catch (error) {\n\t      CollectionPrototype$1[ITERATOR$6] = ArrayValues;\n\t    }\n\t    if (!CollectionPrototype$1[TO_STRING_TAG$4]) {\n\t      createNonEnumerableProperty(CollectionPrototype$1, TO_STRING_TAG$4, COLLECTION_NAME$1);\n\t    }\n\t    if (domIterables[COLLECTION_NAME$1]) for (var METHOD_NAME in es_array_iterator) {\n\t      // some Chrome versions have non-configurable methods on DOMTokenList\n\t      if (CollectionPrototype$1[METHOD_NAME] !== es_array_iterator[METHOD_NAME]) try {\n\t        createNonEnumerableProperty(CollectionPrototype$1, METHOD_NAME, es_array_iterator[METHOD_NAME]);\n\t      } catch (error) {\n\t        CollectionPrototype$1[METHOD_NAME] = es_array_iterator[METHOD_NAME];\n\t      }\n\t    }\n\t  }\n\t}\n\n\tcreateCommonjsModule(function (module) {\n\t  /**\n\t   * Copyright (c) 2014-present, Facebook, Inc.\n\t   *\n\t   * This source code is licensed under the MIT license found in the\n\t   * LICENSE file in the root directory of this source tree.\n\t   */\n\t  var runtime = function (exports) {\n\n\t    var Op = Object.prototype;\n\t    var hasOwn = Op.hasOwnProperty;\n\t    var undefined$1; // More compressible than void 0.\n\n\t    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n\t    function define(obj, key, value) {\n\t      Object.defineProperty(obj, key, {\n\t        value: value,\n\t        enumerable: true,\n\t        configurable: true,\n\t        writable: true\n\t      });\n\t      return obj[key];\n\t    }\n\n\t    try {\n\t      // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n\t      define({}, \"\");\n\t    } catch (err) {\n\t      define = function define(obj, key, value) {\n\t        return obj[key] = value;\n\t      };\n\t    }\n\n\t    function wrap(innerFn, outerFn, self, tryLocsList) {\n\t      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t      var generator = Object.create(protoGenerator.prototype);\n\t      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n\t      // .throw, and .return methods.\n\n\t      generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t      return generator;\n\t    }\n\n\t    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n\t    // record like context.tryEntries[i].completion. This interface could\n\t    // have been (and was previously) designed to take a closure to be\n\t    // invoked without arguments, but in all the cases we care about we\n\t    // already have an existing method we want to call, so there's no need\n\t    // to create a new function object. We can even get away with assuming\n\t    // the method takes exactly one argument, since that happens to be true\n\t    // in every case, so we don't have to touch the arguments object. The\n\t    // only additional allocation required is the completion record, which\n\t    // has a stable shape and so hopefully should be cheap to allocate.\n\n\t    function tryCatch(fn, obj, arg) {\n\t      try {\n\t        return {\n\t          type: \"normal\",\n\t          arg: fn.call(obj, arg)\n\t        };\n\t      } catch (err) {\n\t        return {\n\t          type: \"throw\",\n\t          arg: err\n\t        };\n\t      }\n\t    }\n\n\t    var GenStateSuspendedStart = \"suspendedStart\";\n\t    var GenStateSuspendedYield = \"suspendedYield\";\n\t    var GenStateExecuting = \"executing\";\n\t    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n\t    // breaking out of the dispatch switch statement.\n\n\t    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n\t    // .constructor.prototype properties for functions that return Generator\n\t    // objects. For full spec compliance, you may wish to configure your\n\t    // minifier not to mangle the names of these two functions.\n\n\t    function Generator() {}\n\n\t    function GeneratorFunction() {}\n\n\t    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n\t    // don't natively support it.\n\n\n\t    var IteratorPrototype = {};\n\n\t    IteratorPrototype[iteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    var getProto = Object.getPrototypeOf;\n\t    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n\t    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t      // This environment has a native %IteratorPrototype%; use it instead\n\t      // of the polyfill.\n\t      IteratorPrototype = NativeIteratorPrototype;\n\t    }\n\n\t    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\t    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n\t    // Iterator interface in terms of a single ._invoke method.\n\n\t    function defineIteratorMethods(prototype) {\n\t      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n\t        define(prototype, method, function (arg) {\n\t          return this._invoke(method, arg);\n\t        });\n\t      });\n\t    }\n\n\t    exports.isGeneratorFunction = function (genFun) {\n\t      var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n\t      // do is to check its .name property.\n\t      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n\t    };\n\n\t    exports.mark = function (genFun) {\n\t      if (Object.setPrototypeOf) {\n\t        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t      } else {\n\t        genFun.__proto__ = GeneratorFunctionPrototype;\n\t        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n\t      }\n\n\t      genFun.prototype = Object.create(Gp);\n\t      return genFun;\n\t    }; // Within the body of any async function, `await x` is transformed to\n\t    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t    // meant to be awaited.\n\n\n\t    exports.awrap = function (arg) {\n\t      return {\n\t        __await: arg\n\t      };\n\t    };\n\n\t    function AsyncIterator(generator, PromiseImpl) {\n\t      function invoke(method, arg, resolve, reject) {\n\t        var record = tryCatch(generator[method], generator, arg);\n\n\t        if (record.type === \"throw\") {\n\t          reject(record.arg);\n\t        } else {\n\t          var result = record.arg;\n\t          var value = result.value;\n\n\t          if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n\t            return PromiseImpl.resolve(value.__await).then(function (value) {\n\t              invoke(\"next\", value, resolve, reject);\n\t            }, function (err) {\n\t              invoke(\"throw\", err, resolve, reject);\n\t            });\n\t          }\n\n\t          return PromiseImpl.resolve(value).then(function (unwrapped) {\n\t            // When a yielded Promise is resolved, its final value becomes\n\t            // the .value of the Promise<{value,done}> result for the\n\t            // current iteration.\n\t            result.value = unwrapped;\n\t            resolve(result);\n\t          }, function (error) {\n\t            // If a rejected Promise was yielded, throw the rejection back\n\t            // into the async generator function so it can be handled there.\n\t            return invoke(\"throw\", error, resolve, reject);\n\t          });\n\t        }\n\t      }\n\n\t      var previousPromise;\n\n\t      function enqueue(method, arg) {\n\t        function callInvokeWithMethodAndArg() {\n\t          return new PromiseImpl(function (resolve, reject) {\n\t            invoke(method, arg, resolve, reject);\n\t          });\n\t        }\n\n\t        return previousPromise = // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n\t        // invocations of the iterator.\n\t        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n\t      } // Define the unified helper method that is used to implement .next,\n\t      // .throw, and .return (see defineIteratorMethods).\n\n\n\t      this._invoke = enqueue;\n\t    }\n\n\t    defineIteratorMethods(AsyncIterator.prototype);\n\n\t    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n\t    // AsyncIterator objects; they just return a Promise for the value of\n\t    // the final result produced by the iterator.\n\n\t    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n\t      if (PromiseImpl === void 0) PromiseImpl = Promise;\n\t      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n\t      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function (result) {\n\t        return result.done ? result.value : iter.next();\n\t      });\n\t    };\n\n\t    function makeInvokeMethod(innerFn, self, context) {\n\t      var state = GenStateSuspendedStart;\n\t      return function invoke(method, arg) {\n\t        if (state === GenStateExecuting) {\n\t          throw new Error(\"Generator is already running\");\n\t        }\n\n\t        if (state === GenStateCompleted) {\n\t          if (method === \"throw\") {\n\t            throw arg;\n\t          } // Be forgiving, per 25.3.3.3.3 of the spec:\n\t          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n\t          return doneResult();\n\t        }\n\n\t        context.method = method;\n\t        context.arg = arg;\n\n\t        while (true) {\n\t          var delegate = context.delegate;\n\n\t          if (delegate) {\n\t            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n\t            if (delegateResult) {\n\t              if (delegateResult === ContinueSentinel) continue;\n\t              return delegateResult;\n\t            }\n\t          }\n\n\t          if (context.method === \"next\") {\n\t            // Setting context._sent for legacy support of Babel's\n\t            // function.sent implementation.\n\t            context.sent = context._sent = context.arg;\n\t          } else if (context.method === \"throw\") {\n\t            if (state === GenStateSuspendedStart) {\n\t              state = GenStateCompleted;\n\t              throw context.arg;\n\t            }\n\n\t            context.dispatchException(context.arg);\n\t          } else if (context.method === \"return\") {\n\t            context.abrupt(\"return\", context.arg);\n\t          }\n\n\t          state = GenStateExecuting;\n\t          var record = tryCatch(innerFn, self, context);\n\n\t          if (record.type === \"normal\") {\n\t            // If an exception is thrown from innerFn, we leave state ===\n\t            // GenStateExecuting and loop back for another invocation.\n\t            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n\t            if (record.arg === ContinueSentinel) {\n\t              continue;\n\t            }\n\n\t            return {\n\t              value: record.arg,\n\t              done: context.done\n\t            };\n\t          } else if (record.type === \"throw\") {\n\t            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n\t            // context.dispatchException(context.arg) call above.\n\n\t            context.method = \"throw\";\n\t            context.arg = record.arg;\n\t          }\n\t        }\n\t      };\n\t    } // Call delegate.iterator[context.method](context.arg) and handle the\n\t    // result, either by returning a { value, done } result from the\n\t    // delegate iterator, or by modifying context.method and context.arg,\n\t    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n\t    function maybeInvokeDelegate(delegate, context) {\n\t      var method = delegate.iterator[context.method];\n\n\t      if (method === undefined$1) {\n\t        // A .throw or .return when the delegate iterator has no .throw\n\t        // method always terminates the yield* loop.\n\t        context.delegate = null;\n\n\t        if (context.method === \"throw\") {\n\t          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n\t          if (delegate.iterator[\"return\"]) {\n\t            // If the delegate iterator has a return method, give it a\n\t            // chance to clean up.\n\t            context.method = \"return\";\n\t            context.arg = undefined$1;\n\t            maybeInvokeDelegate(delegate, context);\n\n\t            if (context.method === \"throw\") {\n\t              // If maybeInvokeDelegate(context) changed context.method from\n\t              // \"return\" to \"throw\", let that override the TypeError below.\n\t              return ContinueSentinel;\n\t            }\n\t          }\n\n\t          context.method = \"throw\";\n\t          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n\t        }\n\n\t        return ContinueSentinel;\n\t      }\n\n\t      var record = tryCatch(method, delegate.iterator, context.arg);\n\n\t      if (record.type === \"throw\") {\n\t        context.method = \"throw\";\n\t        context.arg = record.arg;\n\t        context.delegate = null;\n\t        return ContinueSentinel;\n\t      }\n\n\t      var info = record.arg;\n\n\t      if (!info) {\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\"iterator result is not an object\");\n\t        context.delegate = null;\n\t        return ContinueSentinel;\n\t      }\n\n\t      if (info.done) {\n\t        // Assign the result of the finished delegate to the temporary\n\t        // variable specified by delegate.resultName (see delegateYield).\n\t        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n\t        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n\t        // exception, let the outer generator proceed normally. If\n\t        // context.method was \"next\", forget context.arg since it has been\n\t        // \"consumed\" by the delegate iterator. If context.method was\n\t        // \"return\", allow the original .return call to continue in the\n\t        // outer generator.\n\n\t        if (context.method !== \"return\") {\n\t          context.method = \"next\";\n\t          context.arg = undefined$1;\n\t        }\n\t      } else {\n\t        // Re-yield the result returned by the delegate method.\n\t        return info;\n\t      } // The delegate iterator is finished, so forget it and continue with\n\t      // the outer generator.\n\n\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    } // Define Generator.prototype.{next,throw,return} in terms of the\n\t    // unified ._invoke helper method.\n\n\n\t    defineIteratorMethods(Gp);\n\t    define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n\t    // @@iterator function is called on it. Some browsers' implementations of the\n\t    // iterator prototype chain incorrectly implement this, causing the Generator\n\t    // object to not be returned from this call. This ensures that doesn't happen.\n\t    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n\t    Gp[iteratorSymbol] = function () {\n\t      return this;\n\t    };\n\n\t    Gp.toString = function () {\n\t      return \"[object Generator]\";\n\t    };\n\n\t    function pushTryEntry(locs) {\n\t      var entry = {\n\t        tryLoc: locs[0]\n\t      };\n\n\t      if (1 in locs) {\n\t        entry.catchLoc = locs[1];\n\t      }\n\n\t      if (2 in locs) {\n\t        entry.finallyLoc = locs[2];\n\t        entry.afterLoc = locs[3];\n\t      }\n\n\t      this.tryEntries.push(entry);\n\t    }\n\n\t    function resetTryEntry(entry) {\n\t      var record = entry.completion || {};\n\t      record.type = \"normal\";\n\t      delete record.arg;\n\t      entry.completion = record;\n\t    }\n\n\t    function Context(tryLocsList) {\n\t      // The root entry object (effectively a try statement without a catch\n\t      // or a finally block) gives us a place to store values thrown from\n\t      // locations where there is no enclosing try statement.\n\t      this.tryEntries = [{\n\t        tryLoc: \"root\"\n\t      }];\n\t      tryLocsList.forEach(pushTryEntry, this);\n\t      this.reset(true);\n\t    }\n\n\t    exports.keys = function (object) {\n\t      var keys = [];\n\n\t      for (var key in object) {\n\t        keys.push(key);\n\t      }\n\n\t      keys.reverse(); // Rather than returning an object with a next method, we keep\n\t      // things simple and return the next function itself.\n\n\t      return function next() {\n\t        while (keys.length) {\n\t          var key = keys.pop();\n\n\t          if (key in object) {\n\t            next.value = key;\n\t            next.done = false;\n\t            return next;\n\t          }\n\t        } // To avoid creating an additional object, we just hang the .value\n\t        // and .done properties off the next function object itself. This\n\t        // also ensures that the minifier will not anonymize the function.\n\n\n\t        next.done = true;\n\t        return next;\n\t      };\n\t    };\n\n\t    function values(iterable) {\n\t      if (iterable) {\n\t        var iteratorMethod = iterable[iteratorSymbol];\n\n\t        if (iteratorMethod) {\n\t          return iteratorMethod.call(iterable);\n\t        }\n\n\t        if (typeof iterable.next === \"function\") {\n\t          return iterable;\n\t        }\n\n\t        if (!isNaN(iterable.length)) {\n\t          var i = -1,\n\t              next = function next() {\n\t            while (++i < iterable.length) {\n\t              if (hasOwn.call(iterable, i)) {\n\t                next.value = iterable[i];\n\t                next.done = false;\n\t                return next;\n\t              }\n\t            }\n\n\t            next.value = undefined$1;\n\t            next.done = true;\n\t            return next;\n\t          };\n\n\t          return next.next = next;\n\t        }\n\t      } // Return an iterator with no values.\n\n\n\t      return {\n\t        next: doneResult\n\t      };\n\t    }\n\n\t    exports.values = values;\n\n\t    function doneResult() {\n\t      return {\n\t        value: undefined$1,\n\t        done: true\n\t      };\n\t    }\n\n\t    Context.prototype = {\n\t      constructor: Context,\n\t      reset: function reset(skipTempReset) {\n\t        this.prev = 0;\n\t        this.next = 0; // Resetting context._sent for legacy support of Babel's\n\t        // function.sent implementation.\n\n\t        this.sent = this._sent = undefined$1;\n\t        this.done = false;\n\t        this.delegate = null;\n\t        this.method = \"next\";\n\t        this.arg = undefined$1;\n\t        this.tryEntries.forEach(resetTryEntry);\n\n\t        if (!skipTempReset) {\n\t          for (var name in this) {\n\t            // Not sure about the optimal order of these conditions:\n\t            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n\t              this[name] = undefined$1;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      stop: function stop() {\n\t        this.done = true;\n\t        var rootEntry = this.tryEntries[0];\n\t        var rootRecord = rootEntry.completion;\n\n\t        if (rootRecord.type === \"throw\") {\n\t          throw rootRecord.arg;\n\t        }\n\n\t        return this.rval;\n\t      },\n\t      dispatchException: function dispatchException(exception) {\n\t        if (this.done) {\n\t          throw exception;\n\t        }\n\n\t        var context = this;\n\n\t        function handle(loc, caught) {\n\t          record.type = \"throw\";\n\t          record.arg = exception;\n\t          context.next = loc;\n\n\t          if (caught) {\n\t            // If the dispatched exception was caught by a catch block,\n\t            // then let that catch block handle the exception normally.\n\t            context.method = \"next\";\n\t            context.arg = undefined$1;\n\t          }\n\n\t          return !!caught;\n\t        }\n\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\t          var record = entry.completion;\n\n\t          if (entry.tryLoc === \"root\") {\n\t            // Exception thrown outside of any try block that could handle\n\t            // it, so set the completion value of the entire function to\n\t            // throw the exception.\n\t            return handle(\"end\");\n\t          }\n\n\t          if (entry.tryLoc <= this.prev) {\n\t            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n\t            if (hasCatch && hasFinally) {\n\t              if (this.prev < entry.catchLoc) {\n\t                return handle(entry.catchLoc, true);\n\t              } else if (this.prev < entry.finallyLoc) {\n\t                return handle(entry.finallyLoc);\n\t              }\n\t            } else if (hasCatch) {\n\t              if (this.prev < entry.catchLoc) {\n\t                return handle(entry.catchLoc, true);\n\t              }\n\t            } else if (hasFinally) {\n\t              if (this.prev < entry.finallyLoc) {\n\t                return handle(entry.finallyLoc);\n\t              }\n\t            } else {\n\t              throw new Error(\"try statement without catch or finally\");\n\t            }\n\t          }\n\t        }\n\t      },\n\t      abrupt: function abrupt(type, arg) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n\t            var finallyEntry = entry;\n\t            break;\n\t          }\n\t        }\n\n\t        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n\t          // Ignore the finally entry if control is not jumping to a\n\t          // location outside the try/catch block.\n\t          finallyEntry = null;\n\t        }\n\n\t        var record = finallyEntry ? finallyEntry.completion : {};\n\t        record.type = type;\n\t        record.arg = arg;\n\n\t        if (finallyEntry) {\n\t          this.method = \"next\";\n\t          this.next = finallyEntry.finallyLoc;\n\t          return ContinueSentinel;\n\t        }\n\n\t        return this.complete(record);\n\t      },\n\t      complete: function complete(record, afterLoc) {\n\t        if (record.type === \"throw\") {\n\t          throw record.arg;\n\t        }\n\n\t        if (record.type === \"break\" || record.type === \"continue\") {\n\t          this.next = record.arg;\n\t        } else if (record.type === \"return\") {\n\t          this.rval = this.arg = record.arg;\n\t          this.method = \"return\";\n\t          this.next = \"end\";\n\t        } else if (record.type === \"normal\" && afterLoc) {\n\t          this.next = afterLoc;\n\t        }\n\n\t        return ContinueSentinel;\n\t      },\n\t      finish: function finish(finallyLoc) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.finallyLoc === finallyLoc) {\n\t            this.complete(entry.completion, entry.afterLoc);\n\t            resetTryEntry(entry);\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\t      },\n\t      \"catch\": function _catch(tryLoc) {\n\t        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t          var entry = this.tryEntries[i];\n\n\t          if (entry.tryLoc === tryLoc) {\n\t            var record = entry.completion;\n\n\t            if (record.type === \"throw\") {\n\t              var thrown = record.arg;\n\t              resetTryEntry(entry);\n\t            }\n\n\t            return thrown;\n\t          }\n\t        } // The context.catch method must only be called with a location\n\t        // argument that corresponds to a known catch block.\n\n\n\t        throw new Error(\"illegal catch attempt\");\n\t      },\n\t      delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n\t        this.delegate = {\n\t          iterator: values(iterable),\n\t          resultName: resultName,\n\t          nextLoc: nextLoc\n\t        };\n\n\t        if (this.method === \"next\") {\n\t          // Deliberately forget the last sent value so that we don't\n\t          // accidentally pass it on to the delegate.\n\t          this.arg = undefined$1;\n\t        }\n\n\t        return ContinueSentinel;\n\t      }\n\t    }; // Regardless of whether this script is executing as a CommonJS module\n\t    // or not, return the runtime object so that we can declare the variable\n\t    // regeneratorRuntime in the outer scope, which allows this module to be\n\t    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n\t    return exports;\n\t  }( // If this script is executing as a CommonJS module, use module.exports\n\t  // as the regeneratorRuntime namespace. Otherwise create a new empty\n\t  // object. Either way, the resulting object will be used to initialize\n\t  // the regeneratorRuntime variable at the top of this file.\n\t   module.exports );\n\n\t  try {\n\t    regeneratorRuntime = runtime;\n\t  } catch (accidentalStrictMode) {\n\t    // This module should not be running in strict mode, so the above\n\t    // assignment should always work unless something is misconfigured. Just\n\t    // in case runtime.js accidentally runs in strict mode, we can escape\n\t    // strict mode using a global Function call. This could conceivably fail\n\t    // if a Content Security Policy forbids using Function, but in that case\n\t    // the proper solution is to fix the accidental strict mode problem. If\n\t    // you've misconfigured your bundler to force strict mode and applied a\n\t    // CSP to forbid Function, and you're not willing to fix either of those\n\t    // problems, please detail your unique predicament in a GitHub issue.\n\t    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n\t  }\n\t});\n\n\tvar escapeStringRegexp = function escapeStringRegexp(string) {\n\t  if (typeof string !== 'string') {\n\t    throw new TypeError('Expected a string');\n\t  } // Escape characters with special meaning either inside or outside character sets.\n\t  // Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n\t  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n\t};\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  } // if the path is allowed to go above the root, restore leading ..s\n\n\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\n\t  return parts;\n\t} // Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\n\n\tvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\n\tvar splitPath = function splitPath(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t}; // path.resolve([from ...], to)\n\t// posix version\n\n\n\tfunction resolve() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = i >= 0 ? arguments[i] : '/'; // Skip empty and invalid entries\n\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  } // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t  // Normalize the path\n\n\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n\t}\n\t// posix version\n\n\tfunction normalize$1(path) {\n\t  var isPathAbsolute = isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n\t  path = normalizeArray(filter(path.split('/'), function (p) {\n\t    return !!p;\n\t  }), !isPathAbsolute).join('/');\n\n\t  if (!path && !isPathAbsolute) {\n\t    path = '.';\n\t  }\n\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\n\t  return (isPathAbsolute ? '/' : '') + path;\n\t}\n\n\tfunction isAbsolute(path) {\n\t  return path.charAt(0) === '/';\n\t} // posix version\n\n\tfunction join() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return normalize$1(filter(paths, function (p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\n\t    return p;\n\t  }).join('/'));\n\t} // path.relative(from, to)\n\t// posix version\n\n\tfunction relative(from, to) {\n\t  from = resolve(from).substr(1);\n\t  to = resolve(to).substr(1);\n\n\t  function trim(arr) {\n\t    var start = 0;\n\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\n\t    var end = arr.length - 1;\n\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\n\t  var outputParts = [];\n\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t  return outputParts.join('/');\n\t}\n\tvar sep = '/';\n\tvar delimiter = ':';\n\tfunction dirname(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\n\t  return root + dir;\n\t}\n\tfunction basename(path, ext) {\n\t  var f = splitPath(path)[2]; // TODO: make this comparison case-insensitive on windows?\n\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\n\t  return f;\n\t}\n\tfunction extname(path) {\n\t  return splitPath(path)[3];\n\t}\n\tvar path$1 = {\n\t  extname: extname,\n\t  basename: basename,\n\t  dirname: dirname,\n\t  sep: sep,\n\t  delimiter: delimiter,\n\t  relative: relative,\n\t  join: join,\n\t  isAbsolute: isAbsolute,\n\t  normalize: normalize$1,\n\t  resolve: resolve\n\t};\n\n\tfunction filter(xs, f) {\n\t  if (xs.filter) return xs.filter(f);\n\t  var res = [];\n\n\t  for (var i = 0; i < xs.length; i++) {\n\t    if (f(xs[i], i, xs)) res.push(xs[i]);\n\t  }\n\n\t  return res;\n\t} // String.prototype.substr - negative index don't work in IE8\n\n\n\tvar substr =  true ? function (str, start, len) {\n\t  return str.substr(start, len);\n\t} : 0;\n\n\t// call something on iterator step with safe closing on error\n\tvar callWithSafeIterationClosing = function (iterator, fn, value, ENTRIES) {\n\t  try {\n\t    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch (error) {\n\t    iteratorClose(iterator);\n\t    throw error;\n\t  }\n\t};\n\n\t// `Array.from` method implementation\n\t// https://tc39.es/ecma262/#sec-array.from\n\tvar arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n\t  var O = toObject(arrayLike);\n\t  var C = typeof this == 'function' ? this : Array;\n\t  var argumentsLength = arguments.length;\n\t  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n\t  var mapping = mapfn !== undefined;\n\t  var iteratorMethod = getIteratorMethod(O);\n\t  var index = 0;\n\t  var length, result, step, iterator, next, value;\n\t  if (mapping) mapfn = functionBindContext(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n\t  // if the target is not iterable or it's an array with the default iterator - use a simple case\n\t  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n\t    iterator = iteratorMethod.call(O);\n\t    next = iterator.next;\n\t    result = new C();\n\t    for (;!(step = next.call(iterator)).done; index++) {\n\t      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n\t      createProperty(result, index, value);\n\t    }\n\t  } else {\n\t    length = toLength(O.length);\n\t    result = new C(length);\n\t    for (;length > index; index++) {\n\t      value = mapping ? mapfn(O[index], index) : O[index];\n\t      createProperty(result, index, value);\n\t    }\n\t  }\n\t  result.length = index;\n\t  return result;\n\t};\n\n\tvar INCORRECT_ITERATION$1 = !checkCorrectnessOfIteration(function (iterable) {\n\t  Array.from(iterable);\n\t});\n\n\t// `Array.from` method\n\t// https://tc39.es/ecma262/#sec-array.from\n\t_export({ target: 'Array', stat: true, forced: INCORRECT_ITERATION$1 }, {\n\t  from: arrayFrom\n\t});\n\n\tvar diff = createCommonjsModule(function (module, exports) {\n\t  (function (global, factory) {\n\t     factory(exports) ;\n\t  })(commonjsGlobal, function (exports) {\n\n\t    function Diff() {}\n\n\t    Diff.prototype = {\n\t      diff: function diff(oldString, newString) {\n\t        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t        var callback = options.callback;\n\n\t        if (typeof options === 'function') {\n\t          callback = options;\n\t          options = {};\n\t        }\n\n\t        this.options = options;\n\t        var self = this;\n\n\t        function done(value) {\n\t          if (callback) {\n\t            setTimeout(function () {\n\t              callback(undefined, value);\n\t            }, 0);\n\t            return true;\n\t          } else {\n\t            return value;\n\t          }\n\t        } // Allow subclasses to massage the input prior to running\n\n\n\t        oldString = this.castInput(oldString);\n\t        newString = this.castInput(newString);\n\t        oldString = this.removeEmpty(this.tokenize(oldString));\n\t        newString = this.removeEmpty(this.tokenize(newString));\n\t        var newLen = newString.length,\n\t            oldLen = oldString.length;\n\t        var editLength = 1;\n\t        var maxEditLength = newLen + oldLen;\n\t        var bestPath = [{\n\t          newPos: -1,\n\t          components: []\n\t        }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n\t        var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n\t        if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n\t          // Identity per the equality and tokenizer\n\t          return done([{\n\t            value: this.join(newString),\n\t            count: newString.length\n\t          }]);\n\t        } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n\t        function execEditLength() {\n\t          for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n\t            var basePath = void 0;\n\n\t            var addPath = bestPath[diagonalPath - 1],\n\t                removePath = bestPath[diagonalPath + 1],\n\t                _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n\t            if (addPath) {\n\t              // No one else is going to attempt to use this value, clear it\n\t              bestPath[diagonalPath - 1] = undefined;\n\t            }\n\n\t            var canAdd = addPath && addPath.newPos + 1 < newLen,\n\t                canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n\t            if (!canAdd && !canRemove) {\n\t              // If this path is a terminal then prune\n\t              bestPath[diagonalPath] = undefined;\n\t              continue;\n\t            } // Select the diagonal that we want to branch from. We select the prior\n\t            // path whose position in the new string is the farthest from the origin\n\t            // and does not pass the bounds of the diff graph\n\n\n\t            if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n\t              basePath = clonePath(removePath);\n\t              self.pushComponent(basePath.components, undefined, true);\n\t            } else {\n\t              basePath = addPath; // No need to clone, we've pulled it from the list\n\n\t              basePath.newPos++;\n\t              self.pushComponent(basePath.components, true, undefined);\n\t            }\n\n\t            _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n\t            if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n\t              return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n\t            } else {\n\t              // Otherwise track this path as a potential candidate and continue.\n\t              bestPath[diagonalPath] = basePath;\n\t            }\n\t          }\n\n\t          editLength++;\n\t        } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n\t        // sync and async mode which is never fun. Loops over execEditLength until a value\n\t        // is produced.\n\n\n\t        if (callback) {\n\t          (function exec() {\n\t            setTimeout(function () {\n\t              // This should not happen, but we want to be safe.\n\n\t              /* istanbul ignore next */\n\t              if (editLength > maxEditLength) {\n\t                return callback();\n\t              }\n\n\t              if (!execEditLength()) {\n\t                exec();\n\t              }\n\t            }, 0);\n\t          })();\n\t        } else {\n\t          while (editLength <= maxEditLength) {\n\t            var ret = execEditLength();\n\n\t            if (ret) {\n\t              return ret;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      pushComponent: function pushComponent(components, added, removed) {\n\t        var last = components[components.length - 1];\n\n\t        if (last && last.added === added && last.removed === removed) {\n\t          // We need to clone here as the component clone operation is just\n\t          // as shallow array clone\n\t          components[components.length - 1] = {\n\t            count: last.count + 1,\n\t            added: added,\n\t            removed: removed\n\t          };\n\t        } else {\n\t          components.push({\n\t            count: 1,\n\t            added: added,\n\t            removed: removed\n\t          });\n\t        }\n\t      },\n\t      extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n\t        var newLen = newString.length,\n\t            oldLen = oldString.length,\n\t            newPos = basePath.newPos,\n\t            oldPos = newPos - diagonalPath,\n\t            commonCount = 0;\n\n\t        while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n\t          newPos++;\n\t          oldPos++;\n\t          commonCount++;\n\t        }\n\n\t        if (commonCount) {\n\t          basePath.components.push({\n\t            count: commonCount\n\t          });\n\t        }\n\n\t        basePath.newPos = newPos;\n\t        return oldPos;\n\t      },\n\t      equals: function equals(left, right) {\n\t        if (this.options.comparator) {\n\t          return this.options.comparator(left, right);\n\t        } else {\n\t          return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n\t        }\n\t      },\n\t      removeEmpty: function removeEmpty(array) {\n\t        var ret = [];\n\n\t        for (var i = 0; i < array.length; i++) {\n\t          if (array[i]) {\n\t            ret.push(array[i]);\n\t          }\n\t        }\n\n\t        return ret;\n\t      },\n\t      castInput: function castInput(value) {\n\t        return value;\n\t      },\n\t      tokenize: function tokenize(value) {\n\t        return value.split('');\n\t      },\n\t      join: function join(chars) {\n\t        return chars.join('');\n\t      }\n\t    };\n\n\t    function buildValues(diff, components, newString, oldString, useLongestToken) {\n\t      var componentPos = 0,\n\t          componentLen = components.length,\n\t          newPos = 0,\n\t          oldPos = 0;\n\n\t      for (; componentPos < componentLen; componentPos++) {\n\t        var component = components[componentPos];\n\n\t        if (!component.removed) {\n\t          if (!component.added && useLongestToken) {\n\t            var value = newString.slice(newPos, newPos + component.count);\n\t            value = value.map(function (value, i) {\n\t              var oldValue = oldString[oldPos + i];\n\t              return oldValue.length > value.length ? oldValue : value;\n\t            });\n\t            component.value = diff.join(value);\n\t          } else {\n\t            component.value = diff.join(newString.slice(newPos, newPos + component.count));\n\t          }\n\n\t          newPos += component.count; // Common case\n\n\t          if (!component.added) {\n\t            oldPos += component.count;\n\t          }\n\t        } else {\n\t          component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n\t          oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n\t          // The diffing algorithm is tied to add then remove output and this is the simplest\n\t          // route to get the desired output with minimal overhead.\n\n\t          if (componentPos && components[componentPos - 1].added) {\n\t            var tmp = components[componentPos - 1];\n\t            components[componentPos - 1] = components[componentPos];\n\t            components[componentPos] = tmp;\n\t          }\n\t        }\n\t      } // Special case handle for when one terminal is ignored (i.e. whitespace).\n\t      // For this case we merge the terminal into the prior string and drop the change.\n\t      // This is only available for string mode.\n\n\n\t      var lastComponent = components[componentLen - 1];\n\n\t      if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n\t        components[componentLen - 2].value += lastComponent.value;\n\t        components.pop();\n\t      }\n\n\t      return components;\n\t    }\n\n\t    function clonePath(path) {\n\t      return {\n\t        newPos: path.newPos,\n\t        components: path.components.slice(0)\n\t      };\n\t    }\n\n\t    var characterDiff = new Diff();\n\n\t    function diffChars(oldStr, newStr, options) {\n\t      return characterDiff.diff(oldStr, newStr, options);\n\t    }\n\n\t    function generateOptions(options, defaults) {\n\t      if (typeof options === 'function') {\n\t        defaults.callback = options;\n\t      } else if (options) {\n\t        for (var name in options) {\n\t          /* istanbul ignore else */\n\t          if (options.hasOwnProperty(name)) {\n\t            defaults[name] = options[name];\n\t          }\n\t        }\n\t      }\n\n\t      return defaults;\n\t    } //\n\t    // Ranges and exceptions:\n\t    // Latin-1 Supplement, 0080–00FF\n\t    //  - U+00D7  × Multiplication sign\n\t    //  - U+00F7  ÷ Division sign\n\t    // Latin Extended-A, 0100–017F\n\t    // Latin Extended-B, 0180–024F\n\t    // IPA Extensions, 0250–02AF\n\t    // Spacing Modifier Letters, 02B0–02FF\n\t    //  - U+02C7  ˇ &#711;  Caron\n\t    //  - U+02D8  ˘ &#728;  Breve\n\t    //  - U+02D9  ˙ &#729;  Dot Above\n\t    //  - U+02DA  ˚ &#730;  Ring Above\n\t    //  - U+02DB  ˛ &#731;  Ogonek\n\t    //  - U+02DC  ˜ &#732;  Small Tilde\n\t    //  - U+02DD  ˝ &#733;  Double Acute Accent\n\t    // Latin Extended Additional, 1E00–1EFF\n\n\n\t    var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n\t    var reWhitespace = /\\S/;\n\t    var wordDiff = new Diff();\n\n\t    wordDiff.equals = function (left, right) {\n\t      if (this.options.ignoreCase) {\n\t        left = left.toLowerCase();\n\t        right = right.toLowerCase();\n\t      }\n\n\t      return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n\t    };\n\n\t    wordDiff.tokenize = function (value) {\n\t      // All whitespace symbols except newline group into one token, each newline - in separate token\n\t      var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n\t      for (var i = 0; i < tokens.length - 1; i++) {\n\t        // If we have an empty string in the next field and we have only word chars before and after, merge\n\t        if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n\t          tokens[i] += tokens[i + 2];\n\t          tokens.splice(i + 1, 2);\n\t          i--;\n\t        }\n\t      }\n\n\t      return tokens;\n\t    };\n\n\t    function diffWords(oldStr, newStr, options) {\n\t      options = generateOptions(options, {\n\t        ignoreWhitespace: true\n\t      });\n\t      return wordDiff.diff(oldStr, newStr, options);\n\t    }\n\n\t    function diffWordsWithSpace(oldStr, newStr, options) {\n\t      return wordDiff.diff(oldStr, newStr, options);\n\t    }\n\n\t    var lineDiff = new Diff();\n\n\t    lineDiff.tokenize = function (value) {\n\t      var retLines = [],\n\t          linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n\t      if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n\t        linesAndNewlines.pop();\n\t      } // Merge the content and line separators into single tokens\n\n\n\t      for (var i = 0; i < linesAndNewlines.length; i++) {\n\t        var line = linesAndNewlines[i];\n\n\t        if (i % 2 && !this.options.newlineIsToken) {\n\t          retLines[retLines.length - 1] += line;\n\t        } else {\n\t          if (this.options.ignoreWhitespace) {\n\t            line = line.trim();\n\t          }\n\n\t          retLines.push(line);\n\t        }\n\t      }\n\n\t      return retLines;\n\t    };\n\n\t    function diffLines(oldStr, newStr, callback) {\n\t      return lineDiff.diff(oldStr, newStr, callback);\n\t    }\n\n\t    function diffTrimmedLines(oldStr, newStr, callback) {\n\t      var options = generateOptions(callback, {\n\t        ignoreWhitespace: true\n\t      });\n\t      return lineDiff.diff(oldStr, newStr, options);\n\t    }\n\n\t    var sentenceDiff = new Diff();\n\n\t    sentenceDiff.tokenize = function (value) {\n\t      return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n\t    };\n\n\t    function diffSentences(oldStr, newStr, callback) {\n\t      return sentenceDiff.diff(oldStr, newStr, callback);\n\t    }\n\n\t    var cssDiff = new Diff();\n\n\t    cssDiff.tokenize = function (value) {\n\t      return value.split(/([{}:;,]|\\s+)/);\n\t    };\n\n\t    function diffCss(oldStr, newStr, callback) {\n\t      return cssDiff.diff(oldStr, newStr, callback);\n\t    }\n\n\t    function _typeof(obj) {\n\t      \"@babel/helpers - typeof\";\n\n\t      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n\t        _typeof = function _typeof(obj) {\n\t          return typeof obj;\n\t        };\n\t      } else {\n\t        _typeof = function _typeof(obj) {\n\t          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n\t        };\n\t      }\n\n\t      return _typeof(obj);\n\t    }\n\n\t    function _toConsumableArray(arr) {\n\t      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n\t    }\n\n\t    function _arrayWithoutHoles(arr) {\n\t      if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n\t    }\n\n\t    function _iterableToArray(iter) {\n\t      if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n\t    }\n\n\t    function _unsupportedIterableToArray(o, minLen) {\n\t      if (!o) return;\n\t      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\t      var n = Object.prototype.toString.call(o).slice(8, -1);\n\t      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n\t      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n\t      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n\t    }\n\n\t    function _arrayLikeToArray(arr, len) {\n\t      if (len == null || len > arr.length) len = arr.length;\n\n\t      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n\t        arr2[i] = arr[i];\n\t      }\n\n\t      return arr2;\n\t    }\n\n\t    function _nonIterableSpread() {\n\t      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n\t    }\n\n\t    var objectPrototypeToString = Object.prototype.toString;\n\t    var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n\t    // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n\t    jsonDiff.useLongestToken = true;\n\t    jsonDiff.tokenize = lineDiff.tokenize;\n\n\t    jsonDiff.castInput = function (value) {\n\t      var _this$options = this.options,\n\t          undefinedReplacement = _this$options.undefinedReplacement,\n\t          _this$options$stringi = _this$options.stringifyReplacer,\n\t          stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n\t        return typeof v === 'undefined' ? undefinedReplacement : v;\n\t      } : _this$options$stringi;\n\t      return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n\t    };\n\n\t    jsonDiff.equals = function (left, right) {\n\t      return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n\t    };\n\n\t    function diffJson(oldObj, newObj, options) {\n\t      return jsonDiff.diff(oldObj, newObj, options);\n\t    } // This function handles the presence of circular references by bailing out when encountering an\n\t    // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n\n\t    function canonicalize(obj, stack, replacementStack, replacer, key) {\n\t      stack = stack || [];\n\t      replacementStack = replacementStack || [];\n\n\t      if (replacer) {\n\t        obj = replacer(key, obj);\n\t      }\n\n\t      var i;\n\n\t      for (i = 0; i < stack.length; i += 1) {\n\t        if (stack[i] === obj) {\n\t          return replacementStack[i];\n\t        }\n\t      }\n\n\t      var canonicalizedObj;\n\n\t      if ('[object Array]' === objectPrototypeToString.call(obj)) {\n\t        stack.push(obj);\n\t        canonicalizedObj = new Array(obj.length);\n\t        replacementStack.push(canonicalizedObj);\n\n\t        for (i = 0; i < obj.length; i += 1) {\n\t          canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n\t        }\n\n\t        stack.pop();\n\t        replacementStack.pop();\n\t        return canonicalizedObj;\n\t      }\n\n\t      if (obj && obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\n\t      if (_typeof(obj) === 'object' && obj !== null) {\n\t        stack.push(obj);\n\t        canonicalizedObj = {};\n\t        replacementStack.push(canonicalizedObj);\n\n\t        var sortedKeys = [],\n\t            _key;\n\n\t        for (_key in obj) {\n\t          /* istanbul ignore else */\n\t          if (obj.hasOwnProperty(_key)) {\n\t            sortedKeys.push(_key);\n\t          }\n\t        }\n\n\t        sortedKeys.sort();\n\n\t        for (i = 0; i < sortedKeys.length; i += 1) {\n\t          _key = sortedKeys[i];\n\t          canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n\t        }\n\n\t        stack.pop();\n\t        replacementStack.pop();\n\t      } else {\n\t        canonicalizedObj = obj;\n\t      }\n\n\t      return canonicalizedObj;\n\t    }\n\n\t    var arrayDiff = new Diff();\n\n\t    arrayDiff.tokenize = function (value) {\n\t      return value.slice();\n\t    };\n\n\t    arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n\t      return value;\n\t    };\n\n\t    function diffArrays(oldArr, newArr, callback) {\n\t      return arrayDiff.diff(oldArr, newArr, callback);\n\t    }\n\n\t    function parsePatch(uniDiff) {\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n\t          delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n\t          list = [],\n\t          i = 0;\n\n\t      function parseIndex() {\n\t        var index = {};\n\t        list.push(index); // Parse diff metadata\n\n\t        while (i < diffstr.length) {\n\t          var line = diffstr[i]; // File header found, end parsing diff metadata\n\n\t          if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n\t            break;\n\t          } // Diff index\n\n\n\t          var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n\t          if (header) {\n\t            index.index = header[1];\n\t          }\n\n\t          i++;\n\t        } // Parse file headers if they are defined. Unified diff requires them, but\n\t        // there's no technical issues to have an isolated hunk without file header\n\n\n\t        parseFileHeader(index);\n\t        parseFileHeader(index); // Parse hunks\n\n\t        index.hunks = [];\n\n\t        while (i < diffstr.length) {\n\t          var _line = diffstr[i];\n\n\t          if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n\t            break;\n\t          } else if (/^@@/.test(_line)) {\n\t            index.hunks.push(parseHunk());\n\t          } else if (_line && options.strict) {\n\t            // Ignore unexpected content unless in strict mode\n\t            throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t      } // Parses the --- and +++ headers, if none are found, no lines\n\t      // are consumed.\n\n\n\t      function parseFileHeader(index) {\n\t        var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n\t        if (fileHeader) {\n\t          var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n\t          var data = fileHeader[2].split('\\t', 2);\n\t          var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n\t          if (/^\".*\"$/.test(fileName)) {\n\t            fileName = fileName.substr(1, fileName.length - 2);\n\t          }\n\n\t          index[keyPrefix + 'FileName'] = fileName;\n\t          index[keyPrefix + 'Header'] = (data[1] || '').trim();\n\t          i++;\n\t        }\n\t      } // Parses a hunk\n\t      // This assumes that we are at the start of a hunk.\n\n\n\t      function parseHunk() {\n\t        var chunkHeaderIndex = i,\n\t            chunkHeaderLine = diffstr[i++],\n\t            chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n\t        var hunk = {\n\t          oldStart: +chunkHeader[1],\n\t          oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n\t          newStart: +chunkHeader[3],\n\t          newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n\t          lines: [],\n\t          linedelimiters: []\n\t        }; // Unified Diff Format quirk: If the chunk size is 0,\n\t        // the first number is one lower than one would expect.\n\t        // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n\t        if (hunk.oldLines === 0) {\n\t          hunk.oldStart += 1;\n\t        }\n\n\t        if (hunk.newLines === 0) {\n\t          hunk.newStart += 1;\n\t        }\n\n\t        var addCount = 0,\n\t            removeCount = 0;\n\n\t        for (; i < diffstr.length; i++) {\n\t          // Lines starting with '---' could be mistaken for the \"remove line\" operation\n\t          // But they could be the header for the next file. Therefore prune such cases out.\n\t          if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n\t            break;\n\t          }\n\n\t          var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n\t          if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n\t            hunk.lines.push(diffstr[i]);\n\t            hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n\t            if (operation === '+') {\n\t              addCount++;\n\t            } else if (operation === '-') {\n\t              removeCount++;\n\t            } else if (operation === ' ') {\n\t              addCount++;\n\t              removeCount++;\n\t            }\n\t          } else {\n\t            break;\n\t          }\n\t        } // Handle the empty block count case\n\n\n\t        if (!addCount && hunk.newLines === 1) {\n\t          hunk.newLines = 0;\n\t        }\n\n\t        if (!removeCount && hunk.oldLines === 1) {\n\t          hunk.oldLines = 0;\n\t        } // Perform optional sanity checking\n\n\n\t        if (options.strict) {\n\t          if (addCount !== hunk.newLines) {\n\t            throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n\t          }\n\n\t          if (removeCount !== hunk.oldLines) {\n\t            throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n\t          }\n\t        }\n\n\t        return hunk;\n\t      }\n\n\t      while (i < diffstr.length) {\n\t        parseIndex();\n\t      }\n\n\t      return list;\n\t    } // Iterator that traverses in the range of [min, max], stepping\n\t    // by distance from a given start position. I.e. for [0, 4], with\n\t    // start of 2, this will iterate 2, 3, 1, 4, 0.\n\n\n\t    function distanceIterator(start, minLine, maxLine) {\n\t      var wantForward = true,\n\t          backwardExhausted = false,\n\t          forwardExhausted = false,\n\t          localOffset = 1;\n\t      return function iterator() {\n\t        if (wantForward && !forwardExhausted) {\n\t          if (backwardExhausted) {\n\t            localOffset++;\n\t          } else {\n\t            wantForward = false;\n\t          } // Check if trying to fit beyond text length, and if not, check it fits\n\t          // after offset location (or desired location on first iteration)\n\n\n\t          if (start + localOffset <= maxLine) {\n\t            return localOffset;\n\t          }\n\n\t          forwardExhausted = true;\n\t        }\n\n\t        if (!backwardExhausted) {\n\t          if (!forwardExhausted) {\n\t            wantForward = true;\n\t          } // Check if trying to fit before text beginning, and if not, check it fits\n\t          // before offset location\n\n\n\t          if (minLine <= start - localOffset) {\n\t            return -localOffset++;\n\t          }\n\n\t          backwardExhausted = true;\n\t          return iterator();\n\t        } // We tried to fit hunk before text beginning and beyond text length, then\n\t        // hunk can't fit on the text. Return undefined\n\n\t      };\n\t    }\n\n\t    function applyPatch(source, uniDiff) {\n\t      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t      if (typeof uniDiff === 'string') {\n\t        uniDiff = parsePatch(uniDiff);\n\t      }\n\n\t      if (Array.isArray(uniDiff)) {\n\t        if (uniDiff.length > 1) {\n\t          throw new Error('applyPatch only works with a single input.');\n\t        }\n\n\t        uniDiff = uniDiff[0];\n\t      } // Apply the diff to the input\n\n\n\t      var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n\t          delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n\t          hunks = uniDiff.hunks,\n\t          compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n\t        return line === patchContent;\n\t      },\n\t          errorCount = 0,\n\t          fuzzFactor = options.fuzzFactor || 0,\n\t          minLine = 0,\n\t          offset = 0,\n\t          removeEOFNL,\n\t          addEOFNL;\n\t      /**\n\t       * Checks if the hunk exactly fits on the provided location\n\t       */\n\n\n\t      function hunkFits(hunk, toPos) {\n\t        for (var j = 0; j < hunk.lines.length; j++) {\n\t          var line = hunk.lines[j],\n\t              operation = line.length > 0 ? line[0] : ' ',\n\t              content = line.length > 0 ? line.substr(1) : line;\n\n\t          if (operation === ' ' || operation === '-') {\n\t            // Context sanity check\n\t            if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n\t              errorCount++;\n\n\t              if (errorCount > fuzzFactor) {\n\t                return false;\n\t              }\n\t            }\n\n\t            toPos++;\n\t          }\n\t        }\n\n\t        return true;\n\t      } // Search best fit offsets for each hunk based on the previous ones\n\n\n\t      for (var i = 0; i < hunks.length; i++) {\n\t        var hunk = hunks[i],\n\t            maxLine = lines.length - hunk.oldLines,\n\t            localOffset = 0,\n\t            toPos = offset + hunk.oldStart - 1;\n\t        var iterator = distanceIterator(toPos, minLine, maxLine);\n\n\t        for (; localOffset !== undefined; localOffset = iterator()) {\n\t          if (hunkFits(hunk, toPos + localOffset)) {\n\t            hunk.offset = offset += localOffset;\n\t            break;\n\t          }\n\t        }\n\n\t        if (localOffset === undefined) {\n\t          return false;\n\t        } // Set lower text limit to end of the current hunk, so next ones don't try\n\t        // to fit over already patched text\n\n\n\t        minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n\t      } // Apply patch hunks\n\n\n\t      var diffOffset = 0;\n\n\t      for (var _i = 0; _i < hunks.length; _i++) {\n\t        var _hunk = hunks[_i],\n\t            _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n\t        diffOffset += _hunk.newLines - _hunk.oldLines;\n\n\t        for (var j = 0; j < _hunk.lines.length; j++) {\n\t          var line = _hunk.lines[j],\n\t              operation = line.length > 0 ? line[0] : ' ',\n\t              content = line.length > 0 ? line.substr(1) : line,\n\t              delimiter = _hunk.linedelimiters[j];\n\n\t          if (operation === ' ') {\n\t            _toPos++;\n\t          } else if (operation === '-') {\n\t            lines.splice(_toPos, 1);\n\t            delimiters.splice(_toPos, 1);\n\t            /* istanbul ignore else */\n\t          } else if (operation === '+') {\n\t            lines.splice(_toPos, 0, content);\n\t            delimiters.splice(_toPos, 0, delimiter);\n\t            _toPos++;\n\t          } else if (operation === '\\\\') {\n\t            var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n\t            if (previousOperation === '+') {\n\t              removeEOFNL = true;\n\t            } else if (previousOperation === '-') {\n\t              addEOFNL = true;\n\t            }\n\t          }\n\t        }\n\t      } // Handle EOFNL insertion/removal\n\n\n\t      if (removeEOFNL) {\n\t        while (!lines[lines.length - 1]) {\n\t          lines.pop();\n\t          delimiters.pop();\n\t        }\n\t      } else if (addEOFNL) {\n\t        lines.push('');\n\t        delimiters.push('\\n');\n\t      }\n\n\t      for (var _k = 0; _k < lines.length - 1; _k++) {\n\t        lines[_k] = lines[_k] + delimiters[_k];\n\t      }\n\n\t      return lines.join('');\n\t    } // Wrapper that supports multiple file patches via callbacks.\n\n\n\t    function applyPatches(uniDiff, options) {\n\t      if (typeof uniDiff === 'string') {\n\t        uniDiff = parsePatch(uniDiff);\n\t      }\n\n\t      var currentIndex = 0;\n\n\t      function processIndex() {\n\t        var index = uniDiff[currentIndex++];\n\n\t        if (!index) {\n\t          return options.complete();\n\t        }\n\n\t        options.loadFile(index, function (err, data) {\n\t          if (err) {\n\t            return options.complete(err);\n\t          }\n\n\t          var updatedContent = applyPatch(data, index, options);\n\t          options.patched(index, updatedContent, function (err) {\n\t            if (err) {\n\t              return options.complete(err);\n\t            }\n\n\t            processIndex();\n\t          });\n\t        });\n\t      }\n\n\t      processIndex();\n\t    }\n\n\t    function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n\t      if (!options) {\n\t        options = {};\n\t      }\n\n\t      if (typeof options.context === 'undefined') {\n\t        options.context = 4;\n\t      }\n\n\t      var diff = diffLines(oldStr, newStr, options);\n\t      diff.push({\n\t        value: '',\n\t        lines: []\n\t      }); // Append an empty value to make cleanup easier\n\n\t      function contextLines(lines) {\n\t        return lines.map(function (entry) {\n\t          return ' ' + entry;\n\t        });\n\t      }\n\n\t      var hunks = [];\n\t      var oldRangeStart = 0,\n\t          newRangeStart = 0,\n\t          curRange = [],\n\t          oldLine = 1,\n\t          newLine = 1;\n\n\t      var _loop = function _loop(i) {\n\t        var current = diff[i],\n\t            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n\t        current.lines = lines;\n\n\t        if (current.added || current.removed) {\n\t          var _curRange; // If we have previous context, start with that\n\n\n\t          if (!oldRangeStart) {\n\t            var prev = diff[i - 1];\n\t            oldRangeStart = oldLine;\n\t            newRangeStart = newLine;\n\n\t            if (prev) {\n\t              curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n\t              oldRangeStart -= curRange.length;\n\t              newRangeStart -= curRange.length;\n\t            }\n\t          } // Output our changes\n\n\n\t          (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n\t            return (current.added ? '+' : '-') + entry;\n\t          }))); // Track the updated file position\n\n\n\t          if (current.added) {\n\t            newLine += lines.length;\n\t          } else {\n\t            oldLine += lines.length;\n\t          }\n\t        } else {\n\t          // Identical context lines. Track line changes\n\t          if (oldRangeStart) {\n\t            // Close out any changes that have been output (or join overlapping)\n\t            if (lines.length <= options.context * 2 && i < diff.length - 2) {\n\t              var _curRange2; // Overlapping\n\n\n\t              (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n\t            } else {\n\t              var _curRange3; // end the range and output\n\n\n\t              var contextSize = Math.min(lines.length, options.context);\n\n\t              (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n\t              var hunk = {\n\t                oldStart: oldRangeStart,\n\t                oldLines: oldLine - oldRangeStart + contextSize,\n\t                newStart: newRangeStart,\n\t                newLines: newLine - newRangeStart + contextSize,\n\t                lines: curRange\n\t              };\n\n\t              if (i >= diff.length - 2 && lines.length <= options.context) {\n\t                // EOF is inside this hunk\n\t                var oldEOFNewline = /\\n$/.test(oldStr);\n\t                var newEOFNewline = /\\n$/.test(newStr);\n\t                var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n\t                if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n\t                  // special case: old has no eol and no trailing context; no-nl can end up before adds\n\t                  // however, if the old file is empty, do not output the no-nl line\n\t                  curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n\t                }\n\n\t                if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n\t                  curRange.push('\\\\ No newline at end of file');\n\t                }\n\t              }\n\n\t              hunks.push(hunk);\n\t              oldRangeStart = 0;\n\t              newRangeStart = 0;\n\t              curRange = [];\n\t            }\n\t          }\n\n\t          oldLine += lines.length;\n\t          newLine += lines.length;\n\t        }\n\t      };\n\n\t      for (var i = 0; i < diff.length; i++) {\n\t        _loop(i);\n\t      }\n\n\t      return {\n\t        oldFileName: oldFileName,\n\t        newFileName: newFileName,\n\t        oldHeader: oldHeader,\n\t        newHeader: newHeader,\n\t        hunks: hunks\n\t      };\n\t    }\n\n\t    function formatPatch(diff) {\n\t      var ret = [];\n\n\t      if (diff.oldFileName == diff.newFileName) {\n\t        ret.push('Index: ' + diff.oldFileName);\n\t      }\n\n\t      ret.push('===================================================================');\n\t      ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n\t      ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n\t      for (var i = 0; i < diff.hunks.length; i++) {\n\t        var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n\t        // the first number is one lower than one would expect.\n\t        // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n\t        if (hunk.oldLines === 0) {\n\t          hunk.oldStart -= 1;\n\t        }\n\n\t        if (hunk.newLines === 0) {\n\t          hunk.newStart -= 1;\n\t        }\n\n\t        ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n\t        ret.push.apply(ret, hunk.lines);\n\t      }\n\n\t      return ret.join('\\n') + '\\n';\n\t    }\n\n\t    function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n\t      return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n\t    }\n\n\t    function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n\t      return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n\t    }\n\n\t    function arrayEqual(a, b) {\n\t      if (a.length !== b.length) {\n\t        return false;\n\t      }\n\n\t      return arrayStartsWith(a, b);\n\t    }\n\n\t    function arrayStartsWith(array, start) {\n\t      if (start.length > array.length) {\n\t        return false;\n\t      }\n\n\t      for (var i = 0; i < start.length; i++) {\n\t        if (start[i] !== array[i]) {\n\t          return false;\n\t        }\n\t      }\n\n\t      return true;\n\t    }\n\n\t    function calcLineCount(hunk) {\n\t      var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n\t          oldLines = _calcOldNewLineCount.oldLines,\n\t          newLines = _calcOldNewLineCount.newLines;\n\n\t      if (oldLines !== undefined) {\n\t        hunk.oldLines = oldLines;\n\t      } else {\n\t        delete hunk.oldLines;\n\t      }\n\n\t      if (newLines !== undefined) {\n\t        hunk.newLines = newLines;\n\t      } else {\n\t        delete hunk.newLines;\n\t      }\n\t    }\n\n\t    function merge(mine, theirs, base) {\n\t      mine = loadPatch(mine, base);\n\t      theirs = loadPatch(theirs, base);\n\t      var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n\t      // Leaving sanity checks on this to the API consumer that may know more about the\n\t      // meaning in their own context.\n\n\t      if (mine.index || theirs.index) {\n\t        ret.index = mine.index || theirs.index;\n\t      }\n\n\t      if (mine.newFileName || theirs.newFileName) {\n\t        if (!fileNameChanged(mine)) {\n\t          // No header or no change in ours, use theirs (and ours if theirs does not exist)\n\t          ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n\t          ret.newFileName = theirs.newFileName || mine.newFileName;\n\t          ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n\t          ret.newHeader = theirs.newHeader || mine.newHeader;\n\t        } else if (!fileNameChanged(theirs)) {\n\t          // No header or no change in theirs, use ours\n\t          ret.oldFileName = mine.oldFileName;\n\t          ret.newFileName = mine.newFileName;\n\t          ret.oldHeader = mine.oldHeader;\n\t          ret.newHeader = mine.newHeader;\n\t        } else {\n\t          // Both changed... figure it out\n\t          ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n\t          ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n\t          ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n\t          ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n\t        }\n\t      }\n\n\t      ret.hunks = [];\n\t      var mineIndex = 0,\n\t          theirsIndex = 0,\n\t          mineOffset = 0,\n\t          theirsOffset = 0;\n\n\t      while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n\t        var mineCurrent = mine.hunks[mineIndex] || {\n\t          oldStart: Infinity\n\t        },\n\t            theirsCurrent = theirs.hunks[theirsIndex] || {\n\t          oldStart: Infinity\n\t        };\n\n\t        if (hunkBefore(mineCurrent, theirsCurrent)) {\n\t          // This patch does not overlap with any of the others, yay.\n\t          ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n\t          mineIndex++;\n\t          theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n\t        } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n\t          // This patch does not overlap with any of the others, yay.\n\t          ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n\t          theirsIndex++;\n\t          mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n\t        } else {\n\t          // Overlap, merge as best we can\n\t          var mergedHunk = {\n\t            oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n\t            oldLines: 0,\n\t            newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n\t            newLines: 0,\n\t            lines: []\n\t          };\n\t          mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n\t          theirsIndex++;\n\t          mineIndex++;\n\t          ret.hunks.push(mergedHunk);\n\t        }\n\t      }\n\n\t      return ret;\n\t    }\n\n\t    function loadPatch(param, base) {\n\t      if (typeof param === 'string') {\n\t        if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n\t          return parsePatch(param)[0];\n\t        }\n\n\t        if (!base) {\n\t          throw new Error('Must provide a base reference or pass in a patch');\n\t        }\n\n\t        return structuredPatch(undefined, undefined, base, param);\n\t      }\n\n\t      return param;\n\t    }\n\n\t    function fileNameChanged(patch) {\n\t      return patch.newFileName && patch.newFileName !== patch.oldFileName;\n\t    }\n\n\t    function selectField(index, mine, theirs) {\n\t      if (mine === theirs) {\n\t        return mine;\n\t      } else {\n\t        index.conflict = true;\n\t        return {\n\t          mine: mine,\n\t          theirs: theirs\n\t        };\n\t      }\n\t    }\n\n\t    function hunkBefore(test, check) {\n\t      return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n\t    }\n\n\t    function cloneHunk(hunk, offset) {\n\t      return {\n\t        oldStart: hunk.oldStart,\n\t        oldLines: hunk.oldLines,\n\t        newStart: hunk.newStart + offset,\n\t        newLines: hunk.newLines,\n\t        lines: hunk.lines\n\t      };\n\t    }\n\n\t    function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n\t      // This will generally result in a conflicted hunk, but there are cases where the context\n\t      // is the only overlap where we can successfully merge the content here.\n\t      var mine = {\n\t        offset: mineOffset,\n\t        lines: mineLines,\n\t        index: 0\n\t      },\n\t          their = {\n\t        offset: theirOffset,\n\t        lines: theirLines,\n\t        index: 0\n\t      }; // Handle any leading content\n\n\t      insertLeading(hunk, mine, their);\n\t      insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n\t      while (mine.index < mine.lines.length && their.index < their.lines.length) {\n\t        var mineCurrent = mine.lines[mine.index],\n\t            theirCurrent = their.lines[their.index];\n\n\t        if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n\t          // Both modified ...\n\t          mutualChange(hunk, mine, their);\n\t        } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n\t          var _hunk$lines; // Mine inserted\n\n\n\t          (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n\t        } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n\t          var _hunk$lines2; // Theirs inserted\n\n\n\t          (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n\t        } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n\t          // Mine removed or edited\n\t          removal(hunk, mine, their);\n\t        } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n\t          // Their removed or edited\n\t          removal(hunk, their, mine, true);\n\t        } else if (mineCurrent === theirCurrent) {\n\t          // Context identity\n\t          hunk.lines.push(mineCurrent);\n\t          mine.index++;\n\t          their.index++;\n\t        } else {\n\t          // Context mismatch\n\t          conflict(hunk, collectChange(mine), collectChange(their));\n\t        }\n\t      } // Now push anything that may be remaining\n\n\n\t      insertTrailing(hunk, mine);\n\t      insertTrailing(hunk, their);\n\t      calcLineCount(hunk);\n\t    }\n\n\t    function mutualChange(hunk, mine, their) {\n\t      var myChanges = collectChange(mine),\n\t          theirChanges = collectChange(their);\n\n\t      if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n\t        // Special case for remove changes that are supersets of one another\n\t        if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n\t          var _hunk$lines3;\n\n\t          (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n\t          return;\n\t        } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n\t          var _hunk$lines4;\n\n\t          (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n\t          return;\n\t        }\n\t      } else if (arrayEqual(myChanges, theirChanges)) {\n\t        var _hunk$lines5;\n\n\t        (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n\t        return;\n\t      }\n\n\t      conflict(hunk, myChanges, theirChanges);\n\t    }\n\n\t    function removal(hunk, mine, their, swap) {\n\t      var myChanges = collectChange(mine),\n\t          theirChanges = collectContext(their, myChanges);\n\n\t      if (theirChanges.merged) {\n\t        var _hunk$lines6;\n\n\t        (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n\t      } else {\n\t        conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n\t      }\n\t    }\n\n\t    function conflict(hunk, mine, their) {\n\t      hunk.conflict = true;\n\t      hunk.lines.push({\n\t        conflict: true,\n\t        mine: mine,\n\t        theirs: their\n\t      });\n\t    }\n\n\t    function insertLeading(hunk, insert, their) {\n\t      while (insert.offset < their.offset && insert.index < insert.lines.length) {\n\t        var line = insert.lines[insert.index++];\n\t        hunk.lines.push(line);\n\t        insert.offset++;\n\t      }\n\t    }\n\n\t    function insertTrailing(hunk, insert) {\n\t      while (insert.index < insert.lines.length) {\n\t        var line = insert.lines[insert.index++];\n\t        hunk.lines.push(line);\n\t      }\n\t    }\n\n\t    function collectChange(state) {\n\t      var ret = [],\n\t          operation = state.lines[state.index][0];\n\n\t      while (state.index < state.lines.length) {\n\t        var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n\t        if (operation === '-' && line[0] === '+') {\n\t          operation = '+';\n\t        }\n\n\t        if (operation === line[0]) {\n\t          ret.push(line);\n\t          state.index++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\n\t      return ret;\n\t    }\n\n\t    function collectContext(state, matchChanges) {\n\t      var changes = [],\n\t          merged = [],\n\t          matchIndex = 0,\n\t          contextChanges = false,\n\t          conflicted = false;\n\n\t      while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n\t        var change = state.lines[state.index],\n\t            match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n\t        if (match[0] === '+') {\n\t          break;\n\t        }\n\n\t        contextChanges = contextChanges || change[0] !== ' ';\n\t        merged.push(match);\n\t        matchIndex++; // Consume any additions in the other block as a conflict to attempt\n\t        // to pull in the remaining context after this\n\n\t        if (change[0] === '+') {\n\t          conflicted = true;\n\n\t          while (change[0] === '+') {\n\t            changes.push(change);\n\t            change = state.lines[++state.index];\n\t          }\n\t        }\n\n\t        if (match.substr(1) === change.substr(1)) {\n\t          changes.push(change);\n\t          state.index++;\n\t        } else {\n\t          conflicted = true;\n\t        }\n\t      }\n\n\t      if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n\t        conflicted = true;\n\t      }\n\n\t      if (conflicted) {\n\t        return changes;\n\t      }\n\n\t      while (matchIndex < matchChanges.length) {\n\t        merged.push(matchChanges[matchIndex++]);\n\t      }\n\n\t      return {\n\t        merged: merged,\n\t        changes: changes\n\t      };\n\t    }\n\n\t    function allRemoves(changes) {\n\t      return changes.reduce(function (prev, change) {\n\t        return prev && change[0] === '-';\n\t      }, true);\n\t    }\n\n\t    function skipRemoveSuperset(state, removeChanges, delta) {\n\t      for (var i = 0; i < delta; i++) {\n\t        var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n\t        if (state.lines[state.index + i] !== ' ' + changeContent) {\n\t          return false;\n\t        }\n\t      }\n\n\t      state.index += delta;\n\t      return true;\n\t    }\n\n\t    function calcOldNewLineCount(lines) {\n\t      var oldLines = 0;\n\t      var newLines = 0;\n\t      lines.forEach(function (line) {\n\t        if (typeof line !== 'string') {\n\t          var myCount = calcOldNewLineCount(line.mine);\n\t          var theirCount = calcOldNewLineCount(line.theirs);\n\n\t          if (oldLines !== undefined) {\n\t            if (myCount.oldLines === theirCount.oldLines) {\n\t              oldLines += myCount.oldLines;\n\t            } else {\n\t              oldLines = undefined;\n\t            }\n\t          }\n\n\t          if (newLines !== undefined) {\n\t            if (myCount.newLines === theirCount.newLines) {\n\t              newLines += myCount.newLines;\n\t            } else {\n\t              newLines = undefined;\n\t            }\n\t          }\n\t        } else {\n\t          if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n\t            newLines++;\n\t          }\n\n\t          if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n\t            oldLines++;\n\t          }\n\t        }\n\t      });\n\t      return {\n\t        oldLines: oldLines,\n\t        newLines: newLines\n\t      };\n\t    } // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n\n\n\t    function convertChangesToDMP(changes) {\n\t      var ret = [],\n\t          change,\n\t          operation;\n\n\t      for (var i = 0; i < changes.length; i++) {\n\t        change = changes[i];\n\n\t        if (change.added) {\n\t          operation = 1;\n\t        } else if (change.removed) {\n\t          operation = -1;\n\t        } else {\n\t          operation = 0;\n\t        }\n\n\t        ret.push([operation, change.value]);\n\t      }\n\n\t      return ret;\n\t    }\n\n\t    function convertChangesToXML(changes) {\n\t      var ret = [];\n\n\t      for (var i = 0; i < changes.length; i++) {\n\t        var change = changes[i];\n\n\t        if (change.added) {\n\t          ret.push('<ins>');\n\t        } else if (change.removed) {\n\t          ret.push('<del>');\n\t        }\n\n\t        ret.push(escapeHTML(change.value));\n\n\t        if (change.added) {\n\t          ret.push('</ins>');\n\t        } else if (change.removed) {\n\t          ret.push('</del>');\n\t        }\n\t      }\n\n\t      return ret.join('');\n\t    }\n\n\t    function escapeHTML(s) {\n\t      var n = s;\n\t      n = n.replace(/&/g, '&amp;');\n\t      n = n.replace(/</g, '&lt;');\n\t      n = n.replace(/>/g, '&gt;');\n\t      n = n.replace(/\"/g, '&quot;');\n\t      return n;\n\t    }\n\n\t    exports.Diff = Diff;\n\t    exports.applyPatch = applyPatch;\n\t    exports.applyPatches = applyPatches;\n\t    exports.canonicalize = canonicalize;\n\t    exports.convertChangesToDMP = convertChangesToDMP;\n\t    exports.convertChangesToXML = convertChangesToXML;\n\t    exports.createPatch = createPatch;\n\t    exports.createTwoFilesPatch = createTwoFilesPatch;\n\t    exports.diffArrays = diffArrays;\n\t    exports.diffChars = diffChars;\n\t    exports.diffCss = diffCss;\n\t    exports.diffJson = diffJson;\n\t    exports.diffLines = diffLines;\n\t    exports.diffSentences = diffSentences;\n\t    exports.diffTrimmedLines = diffTrimmedLines;\n\t    exports.diffWords = diffWords;\n\t    exports.diffWordsWithSpace = diffWordsWithSpace;\n\t    exports.merge = merge;\n\t    exports.parsePatch = parsePatch;\n\t    exports.structuredPatch = structuredPatch;\n\t    Object.defineProperty(exports, '__esModule', {\n\t      value: true\n\t    });\n\t  });\n\t});\n\n\t/**\n\t * Helpers.\n\t */\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar w = d * 7;\n\tvar y = d * 365.25;\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\n\tvar ms = function ms(val, options) {\n\t  options = options || {};\n\n\t  var type = _typeof(val);\n\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isFinite(val)) {\n\t    return options[\"long\"] ? fmtLong(val) : fmtShort(val);\n\t  }\n\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n\t};\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\n\n\tfunction parse(str) {\n\t  str = String(str);\n\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\n\t  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n\t  if (!match) {\n\t    return;\n\t  }\n\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\n\t    case 'weeks':\n\t    case 'week':\n\t    case 'w':\n\t      return n * w;\n\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\n\tfunction fmtShort(ms) {\n\t  var msAbs = Math.abs(ms);\n\n\t  if (msAbs >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\n\t  if (msAbs >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\n\t  if (msAbs >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\n\t  if (msAbs >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\n\t  return ms + 'ms';\n\t}\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\n\tfunction fmtLong(ms) {\n\t  var msAbs = Math.abs(ms);\n\n\t  if (msAbs >= d) {\n\t    return plural(ms, msAbs, d, 'day');\n\t  }\n\n\t  if (msAbs >= h) {\n\t    return plural(ms, msAbs, h, 'hour');\n\t  }\n\n\t  if (msAbs >= m) {\n\t    return plural(ms, msAbs, m, 'minute');\n\t  }\n\n\t  if (msAbs >= s) {\n\t    return plural(ms, msAbs, s, 'second');\n\t  }\n\n\t  return ms + ' ms';\n\t}\n\t/**\n\t * Pluralization helper.\n\t */\n\n\n\tfunction plural(ms, msAbs, n, name) {\n\t  var isPlural = msAbs >= n * 1.5;\n\t  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n\t}\n\n\tvar freezing = !fails(function () {\n\t  return Object.isExtensible(Object.preventExtensions({}));\n\t});\n\n\tvar internalMetadata = createCommonjsModule(function (module) {\n\tvar defineProperty = objectDefineProperty.f;\n\n\n\n\tvar METADATA = uid('meta');\n\tvar id = 0;\n\n\tvar isExtensible = Object.isExtensible || function () {\n\t  return true;\n\t};\n\n\tvar setMetadata = function (it) {\n\t  defineProperty(it, METADATA, { value: {\n\t    objectID: 'O' + ++id, // object ID\n\t    weakData: {}          // weak collections IDs\n\t  } });\n\t};\n\n\tvar fastKey = function (it, create) {\n\t  // return a primitive with prefix\n\t  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\t  if (!has(it, METADATA)) {\n\t    // can't set metadata to uncaught frozen object\n\t    if (!isExtensible(it)) return 'F';\n\t    // not necessary to add metadata\n\t    if (!create) return 'E';\n\t    // add missing metadata\n\t    setMetadata(it);\n\t  // return object ID\n\t  } return it[METADATA].objectID;\n\t};\n\n\tvar getWeakData = function (it, create) {\n\t  if (!has(it, METADATA)) {\n\t    // can't set metadata to uncaught frozen object\n\t    if (!isExtensible(it)) return true;\n\t    // not necessary to add metadata\n\t    if (!create) return false;\n\t    // add missing metadata\n\t    setMetadata(it);\n\t  // return the store of weak collections IDs\n\t  } return it[METADATA].weakData;\n\t};\n\n\t// add metadata on freeze-family methods calling\n\tvar onFreeze = function (it) {\n\t  if (freezing && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n\t  return it;\n\t};\n\n\tvar meta = module.exports = {\n\t  REQUIRED: false,\n\t  fastKey: fastKey,\n\t  getWeakData: getWeakData,\n\t  onFreeze: onFreeze\n\t};\n\n\thiddenKeys[METADATA] = true;\n\t});\n\n\tvar onFreeze = internalMetadata.onFreeze;\n\n\tvar nativeFreeze = Object.freeze;\n\tvar FAILS_ON_PRIMITIVES$4 = fails(function () { nativeFreeze(1); });\n\n\t// `Object.freeze` method\n\t// https://tc39.es/ecma262/#sec-object.freeze\n\t_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$4, sham: !freezing }, {\n\t  freeze: function freeze(it) {\n\t    return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;\n\t  }\n\t});\n\n\tvar collection = function (CONSTRUCTOR_NAME, wrapper, common) {\n\t  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n\t  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n\t  var ADDER = IS_MAP ? 'set' : 'add';\n\t  var NativeConstructor = global_1[CONSTRUCTOR_NAME];\n\t  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n\t  var Constructor = NativeConstructor;\n\t  var exported = {};\n\n\t  var fixMethod = function (KEY) {\n\t    var nativeMethod = NativePrototype[KEY];\n\t    redefine(NativePrototype, KEY,\n\t      KEY == 'add' ? function add(value) {\n\t        nativeMethod.call(this, value === 0 ? 0 : value);\n\t        return this;\n\t      } : KEY == 'delete' ? function (key) {\n\t        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n\t      } : KEY == 'get' ? function get(key) {\n\t        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n\t      } : KEY == 'has' ? function has(key) {\n\t        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n\t      } : function set(key, value) {\n\t        nativeMethod.call(this, key === 0 ? 0 : key, value);\n\t        return this;\n\t      }\n\t    );\n\t  };\n\n\t  // eslint-disable-next-line max-len\n\t  if (isForced_1(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n\t    new NativeConstructor().entries().next();\n\t  })))) {\n\t    // create collection constructor\n\t    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n\t    internalMetadata.REQUIRED = true;\n\t  } else if (isForced_1(CONSTRUCTOR_NAME, true)) {\n\t    var instance = new Constructor();\n\t    // early implementations not supports chaining\n\t    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n\t    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n\t    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n\t    // most early implementations doesn't supports iterables, most modern - not close it correctly\n\t    // eslint-disable-next-line no-new\n\t    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n\t    // for early implementations -0 and +0 not the same\n\t    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n\t      // V8 ~ Chromium 42- fails only with 5+ elements\n\t      var $instance = new NativeConstructor();\n\t      var index = 5;\n\t      while (index--) $instance[ADDER](index, index);\n\t      return !$instance.has(-0);\n\t    });\n\n\t    if (!ACCEPT_ITERABLES) {\n\t      Constructor = wrapper(function (dummy, iterable) {\n\t        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n\t        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n\t        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n\t        return that;\n\t      });\n\t      Constructor.prototype = NativePrototype;\n\t      NativePrototype.constructor = Constructor;\n\t    }\n\n\t    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\n\t    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n\t    // weak collections should not contains .clear method\n\t    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n\t  }\n\n\t  exported[CONSTRUCTOR_NAME] = Constructor;\n\t  _export({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n\t  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n\t  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n\t  return Constructor;\n\t};\n\n\tvar defineProperty$a = objectDefineProperty.f;\n\n\n\n\n\n\n\n\n\tvar fastKey = internalMetadata.fastKey;\n\n\n\tvar setInternalState$6 = internalState.set;\n\tvar internalStateGetterFor = internalState.getterFor;\n\n\tvar collectionStrong = {\n\t  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n\t    var C = wrapper(function (that, iterable) {\n\t      anInstance(that, C, CONSTRUCTOR_NAME);\n\t      setInternalState$6(that, {\n\t        type: CONSTRUCTOR_NAME,\n\t        index: objectCreate(null),\n\t        first: undefined,\n\t        last: undefined,\n\t        size: 0\n\t      });\n\t      if (!descriptors) that.size = 0;\n\t      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n\t    });\n\n\t    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n\t    var define = function (that, key, value) {\n\t      var state = getInternalState(that);\n\t      var entry = getEntry(that, key);\n\t      var previous, index;\n\t      // change existing entry\n\t      if (entry) {\n\t        entry.value = value;\n\t      // create new entry\n\t      } else {\n\t        state.last = entry = {\n\t          index: index = fastKey(key, true),\n\t          key: key,\n\t          value: value,\n\t          previous: previous = state.last,\n\t          next: undefined,\n\t          removed: false\n\t        };\n\t        if (!state.first) state.first = entry;\n\t        if (previous) previous.next = entry;\n\t        if (descriptors) state.size++;\n\t        else that.size++;\n\t        // add to index\n\t        if (index !== 'F') state.index[index] = entry;\n\t      } return that;\n\t    };\n\n\t    var getEntry = function (that, key) {\n\t      var state = getInternalState(that);\n\t      // fast case\n\t      var index = fastKey(key);\n\t      var entry;\n\t      if (index !== 'F') return state.index[index];\n\t      // frozen object case\n\t      for (entry = state.first; entry; entry = entry.next) {\n\t        if (entry.key == key) return entry;\n\t      }\n\t    };\n\n\t    redefineAll(C.prototype, {\n\t      // 23.1.3.1 Map.prototype.clear()\n\t      // 23.2.3.2 Set.prototype.clear()\n\t      clear: function clear() {\n\t        var that = this;\n\t        var state = getInternalState(that);\n\t        var data = state.index;\n\t        var entry = state.first;\n\t        while (entry) {\n\t          entry.removed = true;\n\t          if (entry.previous) entry.previous = entry.previous.next = undefined;\n\t          delete data[entry.index];\n\t          entry = entry.next;\n\t        }\n\t        state.first = state.last = undefined;\n\t        if (descriptors) state.size = 0;\n\t        else that.size = 0;\n\t      },\n\t      // 23.1.3.3 Map.prototype.delete(key)\n\t      // 23.2.3.4 Set.prototype.delete(value)\n\t      'delete': function (key) {\n\t        var that = this;\n\t        var state = getInternalState(that);\n\t        var entry = getEntry(that, key);\n\t        if (entry) {\n\t          var next = entry.next;\n\t          var prev = entry.previous;\n\t          delete state.index[entry.index];\n\t          entry.removed = true;\n\t          if (prev) prev.next = next;\n\t          if (next) next.previous = prev;\n\t          if (state.first == entry) state.first = next;\n\t          if (state.last == entry) state.last = prev;\n\t          if (descriptors) state.size--;\n\t          else that.size--;\n\t        } return !!entry;\n\t      },\n\t      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n\t      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n\t      forEach: function forEach(callbackfn /* , that = undefined */) {\n\t        var state = getInternalState(this);\n\t        var boundFunction = functionBindContext(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n\t        var entry;\n\t        while (entry = entry ? entry.next : state.first) {\n\t          boundFunction(entry.value, entry.key, this);\n\t          // revert to the last existing entry\n\t          while (entry && entry.removed) entry = entry.previous;\n\t        }\n\t      },\n\t      // 23.1.3.7 Map.prototype.has(key)\n\t      // 23.2.3.7 Set.prototype.has(value)\n\t      has: function has(key) {\n\t        return !!getEntry(this, key);\n\t      }\n\t    });\n\n\t    redefineAll(C.prototype, IS_MAP ? {\n\t      // 23.1.3.6 Map.prototype.get(key)\n\t      get: function get(key) {\n\t        var entry = getEntry(this, key);\n\t        return entry && entry.value;\n\t      },\n\t      // 23.1.3.9 Map.prototype.set(key, value)\n\t      set: function set(key, value) {\n\t        return define(this, key === 0 ? 0 : key, value);\n\t      }\n\t    } : {\n\t      // 23.2.3.1 Set.prototype.add(value)\n\t      add: function add(value) {\n\t        return define(this, value = value === 0 ? 0 : value, value);\n\t      }\n\t    });\n\t    if (descriptors) defineProperty$a(C.prototype, 'size', {\n\t      get: function () {\n\t        return getInternalState(this).size;\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n\t    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n\t    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\t    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n\t    // add .keys, .values, .entries, [@@iterator]\n\t    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n\t    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n\t      setInternalState$6(this, {\n\t        type: ITERATOR_NAME,\n\t        target: iterated,\n\t        state: getInternalCollectionState(iterated),\n\t        kind: kind,\n\t        last: undefined\n\t      });\n\t    }, function () {\n\t      var state = getInternalIteratorState(this);\n\t      var kind = state.kind;\n\t      var entry = state.last;\n\t      // revert to the last existing entry\n\t      while (entry && entry.removed) entry = entry.previous;\n\t      // get next entry\n\t      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n\t        // or finish the iteration\n\t        state.target = undefined;\n\t        return { value: undefined, done: true };\n\t      }\n\t      // return step by kind\n\t      if (kind == 'keys') return { value: entry.key, done: false };\n\t      if (kind == 'values') return { value: entry.value, done: false };\n\t      return { value: [entry.key, entry.value], done: false };\n\t    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n\t    // add [@@species], 23.1.2.2, 23.2.2.2\n\t    setSpecies(CONSTRUCTOR_NAME);\n\t  }\n\t};\n\n\t// `Set` constructor\n\t// https://tc39.es/ecma262/#sec-set-objects\n\tcollection('Set', function (init) {\n\t  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n\t}, collectionStrong);\n\n\tvar browser$1 = true;\n\n\t// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n\t// optimize the gzip compression for this alphabet.\n\tvar urlAlphabet = 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\n\tvar customAlphabet = function customAlphabet(alphabet, size) {\n\t  return function () {\n\t    var id = ''; // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n\t    var i = size;\n\n\t    while (i--) {\n\t      // `| 0` is more compact and faster than `Math.floor()`.\n\t      id += alphabet[Math.random() * alphabet.length | 0];\n\t    }\n\n\t    return id;\n\t  };\n\t};\n\n\tvar nanoid = function nanoid() {\n\t  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n\t  var id = ''; // A compact alternative for `for (var i = 0; i < step; i++)`.\n\n\t  var i = size;\n\n\t  while (i--) {\n\t    // `| 0` is more compact and faster than `Math.floor()`.\n\t    id += urlAlphabet[Math.random() * 64 | 0];\n\t  }\n\n\t  return id;\n\t};\n\n\tvar nonSecure = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tnanoid: nanoid,\n\t\tcustomAlphabet: customAlphabet\n\t});\n\n\tvar he = createCommonjsModule(function (module, exports) {\n\n\t  (function (root) {\n\t    // Detect free variables `exports`.\n\t    var freeExports =  exports; // Detect free variable `module`.\n\n\t    var freeModule =  module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code,\n\t    // and use it as `root`.\n\n\t    var freeGlobal = _typeof(commonjsGlobal) == 'object' && commonjsGlobal;\n\n\t    if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t      root = freeGlobal;\n\t    }\n\t    /*--------------------------------------------------------------------------*/\n\t    // All astral symbols.\n\n\n\t    var regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g; // All ASCII symbols (not just printable ASCII) except those listed in the\n\t    // first column of the overrides table.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\n\t    var regexAsciiWhitelist = /[\\x01-\\x7F]/g; // All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t    // code points listed in the first column of the overrides table on\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\n\t    var regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\t    var regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\t    var encodeMap = {\n\t      '\\xAD': 'shy',\n\t      \"\\u200C\": 'zwnj',\n\t      \"\\u200D\": 'zwj',\n\t      \"\\u200E\": 'lrm',\n\t      \"\\u2063\": 'ic',\n\t      \"\\u2062\": 'it',\n\t      \"\\u2061\": 'af',\n\t      \"\\u200F\": 'rlm',\n\t      \"\\u200B\": 'ZeroWidthSpace',\n\t      \"\\u2060\": 'NoBreak',\n\t      \"\\u0311\": 'DownBreve',\n\t      \"\\u20DB\": 'tdot',\n\t      \"\\u20DC\": 'DotDot',\n\t      '\\t': 'Tab',\n\t      '\\n': 'NewLine',\n\t      \"\\u2008\": 'puncsp',\n\t      \"\\u205F\": 'MediumSpace',\n\t      \"\\u2009\": 'thinsp',\n\t      \"\\u200A\": 'hairsp',\n\t      \"\\u2004\": 'emsp13',\n\t      \"\\u2002\": 'ensp',\n\t      \"\\u2005\": 'emsp14',\n\t      \"\\u2003\": 'emsp',\n\t      \"\\u2007\": 'numsp',\n\t      '\\xA0': 'nbsp',\n\t      \"\\u205F\\u200A\": 'ThickSpace',\n\t      \"\\u203E\": 'oline',\n\t      '_': 'lowbar',\n\t      \"\\u2010\": 'dash',\n\t      \"\\u2013\": 'ndash',\n\t      \"\\u2014\": 'mdash',\n\t      \"\\u2015\": 'horbar',\n\t      ',': 'comma',\n\t      ';': 'semi',\n\t      \"\\u204F\": 'bsemi',\n\t      ':': 'colon',\n\t      \"\\u2A74\": 'Colone',\n\t      '!': 'excl',\n\t      '\\xA1': 'iexcl',\n\t      '?': 'quest',\n\t      '\\xBF': 'iquest',\n\t      '.': 'period',\n\t      \"\\u2025\": 'nldr',\n\t      \"\\u2026\": 'mldr',\n\t      '\\xB7': 'middot',\n\t      '\\'': 'apos',\n\t      \"\\u2018\": 'lsquo',\n\t      \"\\u2019\": 'rsquo',\n\t      \"\\u201A\": 'sbquo',\n\t      \"\\u2039\": 'lsaquo',\n\t      \"\\u203A\": 'rsaquo',\n\t      '\"': 'quot',\n\t      \"\\u201C\": 'ldquo',\n\t      \"\\u201D\": 'rdquo',\n\t      \"\\u201E\": 'bdquo',\n\t      '\\xAB': 'laquo',\n\t      '\\xBB': 'raquo',\n\t      '(': 'lpar',\n\t      ')': 'rpar',\n\t      '[': 'lsqb',\n\t      ']': 'rsqb',\n\t      '{': 'lcub',\n\t      '}': 'rcub',\n\t      \"\\u2308\": 'lceil',\n\t      \"\\u2309\": 'rceil',\n\t      \"\\u230A\": 'lfloor',\n\t      \"\\u230B\": 'rfloor',\n\t      \"\\u2985\": 'lopar',\n\t      \"\\u2986\": 'ropar',\n\t      \"\\u298B\": 'lbrke',\n\t      \"\\u298C\": 'rbrke',\n\t      \"\\u298D\": 'lbrkslu',\n\t      \"\\u298E\": 'rbrksld',\n\t      \"\\u298F\": 'lbrksld',\n\t      \"\\u2990\": 'rbrkslu',\n\t      \"\\u2991\": 'langd',\n\t      \"\\u2992\": 'rangd',\n\t      \"\\u2993\": 'lparlt',\n\t      \"\\u2994\": 'rpargt',\n\t      \"\\u2995\": 'gtlPar',\n\t      \"\\u2996\": 'ltrPar',\n\t      \"\\u27E6\": 'lobrk',\n\t      \"\\u27E7\": 'robrk',\n\t      \"\\u27E8\": 'lang',\n\t      \"\\u27E9\": 'rang',\n\t      \"\\u27EA\": 'Lang',\n\t      \"\\u27EB\": 'Rang',\n\t      \"\\u27EC\": 'loang',\n\t      \"\\u27ED\": 'roang',\n\t      \"\\u2772\": 'lbbrk',\n\t      \"\\u2773\": 'rbbrk',\n\t      \"\\u2016\": 'Vert',\n\t      '\\xA7': 'sect',\n\t      '\\xB6': 'para',\n\t      '@': 'commat',\n\t      '*': 'ast',\n\t      '/': 'sol',\n\t      'undefined': null,\n\t      '&': 'amp',\n\t      '#': 'num',\n\t      '%': 'percnt',\n\t      \"\\u2030\": 'permil',\n\t      \"\\u2031\": 'pertenk',\n\t      \"\\u2020\": 'dagger',\n\t      \"\\u2021\": 'Dagger',\n\t      \"\\u2022\": 'bull',\n\t      \"\\u2043\": 'hybull',\n\t      \"\\u2032\": 'prime',\n\t      \"\\u2033\": 'Prime',\n\t      \"\\u2034\": 'tprime',\n\t      \"\\u2057\": 'qprime',\n\t      \"\\u2035\": 'bprime',\n\t      \"\\u2041\": 'caret',\n\t      '`': 'grave',\n\t      '\\xB4': 'acute',\n\t      \"\\u02DC\": 'tilde',\n\t      '^': 'Hat',\n\t      '\\xAF': 'macr',\n\t      \"\\u02D8\": 'breve',\n\t      \"\\u02D9\": 'dot',\n\t      '\\xA8': 'die',\n\t      \"\\u02DA\": 'ring',\n\t      \"\\u02DD\": 'dblac',\n\t      '\\xB8': 'cedil',\n\t      \"\\u02DB\": 'ogon',\n\t      \"\\u02C6\": 'circ',\n\t      \"\\u02C7\": 'caron',\n\t      '\\xB0': 'deg',\n\t      '\\xA9': 'copy',\n\t      '\\xAE': 'reg',\n\t      \"\\u2117\": 'copysr',\n\t      \"\\u2118\": 'wp',\n\t      \"\\u211E\": 'rx',\n\t      \"\\u2127\": 'mho',\n\t      \"\\u2129\": 'iiota',\n\t      \"\\u2190\": 'larr',\n\t      \"\\u219A\": 'nlarr',\n\t      \"\\u2192\": 'rarr',\n\t      \"\\u219B\": 'nrarr',\n\t      \"\\u2191\": 'uarr',\n\t      \"\\u2193\": 'darr',\n\t      \"\\u2194\": 'harr',\n\t      \"\\u21AE\": 'nharr',\n\t      \"\\u2195\": 'varr',\n\t      \"\\u2196\": 'nwarr',\n\t      \"\\u2197\": 'nearr',\n\t      \"\\u2198\": 'searr',\n\t      \"\\u2199\": 'swarr',\n\t      \"\\u219D\": 'rarrw',\n\t      \"\\u219D\\u0338\": 'nrarrw',\n\t      \"\\u219E\": 'Larr',\n\t      \"\\u219F\": 'Uarr',\n\t      \"\\u21A0\": 'Rarr',\n\t      \"\\u21A1\": 'Darr',\n\t      \"\\u21A2\": 'larrtl',\n\t      \"\\u21A3\": 'rarrtl',\n\t      \"\\u21A4\": 'mapstoleft',\n\t      \"\\u21A5\": 'mapstoup',\n\t      \"\\u21A6\": 'map',\n\t      \"\\u21A7\": 'mapstodown',\n\t      \"\\u21A9\": 'larrhk',\n\t      \"\\u21AA\": 'rarrhk',\n\t      \"\\u21AB\": 'larrlp',\n\t      \"\\u21AC\": 'rarrlp',\n\t      \"\\u21AD\": 'harrw',\n\t      \"\\u21B0\": 'lsh',\n\t      \"\\u21B1\": 'rsh',\n\t      \"\\u21B2\": 'ldsh',\n\t      \"\\u21B3\": 'rdsh',\n\t      \"\\u21B5\": 'crarr',\n\t      \"\\u21B6\": 'cularr',\n\t      \"\\u21B7\": 'curarr',\n\t      \"\\u21BA\": 'olarr',\n\t      \"\\u21BB\": 'orarr',\n\t      \"\\u21BC\": 'lharu',\n\t      \"\\u21BD\": 'lhard',\n\t      \"\\u21BE\": 'uharr',\n\t      \"\\u21BF\": 'uharl',\n\t      \"\\u21C0\": 'rharu',\n\t      \"\\u21C1\": 'rhard',\n\t      \"\\u21C2\": 'dharr',\n\t      \"\\u21C3\": 'dharl',\n\t      \"\\u21C4\": 'rlarr',\n\t      \"\\u21C5\": 'udarr',\n\t      \"\\u21C6\": 'lrarr',\n\t      \"\\u21C7\": 'llarr',\n\t      \"\\u21C8\": 'uuarr',\n\t      \"\\u21C9\": 'rrarr',\n\t      \"\\u21CA\": 'ddarr',\n\t      \"\\u21CB\": 'lrhar',\n\t      \"\\u21CC\": 'rlhar',\n\t      \"\\u21D0\": 'lArr',\n\t      \"\\u21CD\": 'nlArr',\n\t      \"\\u21D1\": 'uArr',\n\t      \"\\u21D2\": 'rArr',\n\t      \"\\u21CF\": 'nrArr',\n\t      \"\\u21D3\": 'dArr',\n\t      \"\\u21D4\": 'iff',\n\t      \"\\u21CE\": 'nhArr',\n\t      \"\\u21D5\": 'vArr',\n\t      \"\\u21D6\": 'nwArr',\n\t      \"\\u21D7\": 'neArr',\n\t      \"\\u21D8\": 'seArr',\n\t      \"\\u21D9\": 'swArr',\n\t      \"\\u21DA\": 'lAarr',\n\t      \"\\u21DB\": 'rAarr',\n\t      \"\\u21DD\": 'zigrarr',\n\t      \"\\u21E4\": 'larrb',\n\t      \"\\u21E5\": 'rarrb',\n\t      \"\\u21F5\": 'duarr',\n\t      \"\\u21FD\": 'loarr',\n\t      \"\\u21FE\": 'roarr',\n\t      \"\\u21FF\": 'hoarr',\n\t      \"\\u2200\": 'forall',\n\t      \"\\u2201\": 'comp',\n\t      \"\\u2202\": 'part',\n\t      \"\\u2202\\u0338\": 'npart',\n\t      \"\\u2203\": 'exist',\n\t      \"\\u2204\": 'nexist',\n\t      \"\\u2205\": 'empty',\n\t      \"\\u2207\": 'Del',\n\t      \"\\u2208\": 'in',\n\t      \"\\u2209\": 'notin',\n\t      \"\\u220B\": 'ni',\n\t      \"\\u220C\": 'notni',\n\t      \"\\u03F6\": 'bepsi',\n\t      \"\\u220F\": 'prod',\n\t      \"\\u2210\": 'coprod',\n\t      \"\\u2211\": 'sum',\n\t      '+': 'plus',\n\t      '\\xB1': 'pm',\n\t      '\\xF7': 'div',\n\t      '\\xD7': 'times',\n\t      '<': 'lt',\n\t      \"\\u226E\": 'nlt',\n\t      \"<\\u20D2\": 'nvlt',\n\t      '=': 'equals',\n\t      \"\\u2260\": 'ne',\n\t      \"=\\u20E5\": 'bne',\n\t      \"\\u2A75\": 'Equal',\n\t      '>': 'gt',\n\t      \"\\u226F\": 'ngt',\n\t      \">\\u20D2\": 'nvgt',\n\t      '\\xAC': 'not',\n\t      '|': 'vert',\n\t      '\\xA6': 'brvbar',\n\t      \"\\u2212\": 'minus',\n\t      \"\\u2213\": 'mp',\n\t      \"\\u2214\": 'plusdo',\n\t      \"\\u2044\": 'frasl',\n\t      \"\\u2216\": 'setmn',\n\t      \"\\u2217\": 'lowast',\n\t      \"\\u2218\": 'compfn',\n\t      \"\\u221A\": 'Sqrt',\n\t      \"\\u221D\": 'prop',\n\t      \"\\u221E\": 'infin',\n\t      \"\\u221F\": 'angrt',\n\t      \"\\u2220\": 'ang',\n\t      \"\\u2220\\u20D2\": 'nang',\n\t      \"\\u2221\": 'angmsd',\n\t      \"\\u2222\": 'angsph',\n\t      \"\\u2223\": 'mid',\n\t      \"\\u2224\": 'nmid',\n\t      \"\\u2225\": 'par',\n\t      \"\\u2226\": 'npar',\n\t      \"\\u2227\": 'and',\n\t      \"\\u2228\": 'or',\n\t      \"\\u2229\": 'cap',\n\t      \"\\u2229\\uFE00\": 'caps',\n\t      \"\\u222A\": 'cup',\n\t      \"\\u222A\\uFE00\": 'cups',\n\t      \"\\u222B\": 'int',\n\t      \"\\u222C\": 'Int',\n\t      \"\\u222D\": 'tint',\n\t      \"\\u2A0C\": 'qint',\n\t      \"\\u222E\": 'oint',\n\t      \"\\u222F\": 'Conint',\n\t      \"\\u2230\": 'Cconint',\n\t      \"\\u2231\": 'cwint',\n\t      \"\\u2232\": 'cwconint',\n\t      \"\\u2233\": 'awconint',\n\t      \"\\u2234\": 'there4',\n\t      \"\\u2235\": 'becaus',\n\t      \"\\u2236\": 'ratio',\n\t      \"\\u2237\": 'Colon',\n\t      \"\\u2238\": 'minusd',\n\t      \"\\u223A\": 'mDDot',\n\t      \"\\u223B\": 'homtht',\n\t      \"\\u223C\": 'sim',\n\t      \"\\u2241\": 'nsim',\n\t      \"\\u223C\\u20D2\": 'nvsim',\n\t      \"\\u223D\": 'bsim',\n\t      \"\\u223D\\u0331\": 'race',\n\t      \"\\u223E\": 'ac',\n\t      \"\\u223E\\u0333\": 'acE',\n\t      \"\\u223F\": 'acd',\n\t      \"\\u2240\": 'wr',\n\t      \"\\u2242\": 'esim',\n\t      \"\\u2242\\u0338\": 'nesim',\n\t      \"\\u2243\": 'sime',\n\t      \"\\u2244\": 'nsime',\n\t      \"\\u2245\": 'cong',\n\t      \"\\u2247\": 'ncong',\n\t      \"\\u2246\": 'simne',\n\t      \"\\u2248\": 'ap',\n\t      \"\\u2249\": 'nap',\n\t      \"\\u224A\": 'ape',\n\t      \"\\u224B\": 'apid',\n\t      \"\\u224B\\u0338\": 'napid',\n\t      \"\\u224C\": 'bcong',\n\t      \"\\u224D\": 'CupCap',\n\t      \"\\u226D\": 'NotCupCap',\n\t      \"\\u224D\\u20D2\": 'nvap',\n\t      \"\\u224E\": 'bump',\n\t      \"\\u224E\\u0338\": 'nbump',\n\t      \"\\u224F\": 'bumpe',\n\t      \"\\u224F\\u0338\": 'nbumpe',\n\t      \"\\u2250\": 'doteq',\n\t      \"\\u2250\\u0338\": 'nedot',\n\t      \"\\u2251\": 'eDot',\n\t      \"\\u2252\": 'efDot',\n\t      \"\\u2253\": 'erDot',\n\t      \"\\u2254\": 'colone',\n\t      \"\\u2255\": 'ecolon',\n\t      \"\\u2256\": 'ecir',\n\t      \"\\u2257\": 'cire',\n\t      \"\\u2259\": 'wedgeq',\n\t      \"\\u225A\": 'veeeq',\n\t      \"\\u225C\": 'trie',\n\t      \"\\u225F\": 'equest',\n\t      \"\\u2261\": 'equiv',\n\t      \"\\u2262\": 'nequiv',\n\t      \"\\u2261\\u20E5\": 'bnequiv',\n\t      \"\\u2264\": 'le',\n\t      \"\\u2270\": 'nle',\n\t      \"\\u2264\\u20D2\": 'nvle',\n\t      \"\\u2265\": 'ge',\n\t      \"\\u2271\": 'nge',\n\t      \"\\u2265\\u20D2\": 'nvge',\n\t      \"\\u2266\": 'lE',\n\t      \"\\u2266\\u0338\": 'nlE',\n\t      \"\\u2267\": 'gE',\n\t      \"\\u2267\\u0338\": 'ngE',\n\t      \"\\u2268\\uFE00\": 'lvnE',\n\t      \"\\u2268\": 'lnE',\n\t      \"\\u2269\": 'gnE',\n\t      \"\\u2269\\uFE00\": 'gvnE',\n\t      \"\\u226A\": 'll',\n\t      \"\\u226A\\u0338\": 'nLtv',\n\t      \"\\u226A\\u20D2\": 'nLt',\n\t      \"\\u226B\": 'gg',\n\t      \"\\u226B\\u0338\": 'nGtv',\n\t      \"\\u226B\\u20D2\": 'nGt',\n\t      \"\\u226C\": 'twixt',\n\t      \"\\u2272\": 'lsim',\n\t      \"\\u2274\": 'nlsim',\n\t      \"\\u2273\": 'gsim',\n\t      \"\\u2275\": 'ngsim',\n\t      \"\\u2276\": 'lg',\n\t      \"\\u2278\": 'ntlg',\n\t      \"\\u2277\": 'gl',\n\t      \"\\u2279\": 'ntgl',\n\t      \"\\u227A\": 'pr',\n\t      \"\\u2280\": 'npr',\n\t      \"\\u227B\": 'sc',\n\t      \"\\u2281\": 'nsc',\n\t      \"\\u227C\": 'prcue',\n\t      \"\\u22E0\": 'nprcue',\n\t      \"\\u227D\": 'sccue',\n\t      \"\\u22E1\": 'nsccue',\n\t      \"\\u227E\": 'prsim',\n\t      \"\\u227F\": 'scsim',\n\t      \"\\u227F\\u0338\": 'NotSucceedsTilde',\n\t      \"\\u2282\": 'sub',\n\t      \"\\u2284\": 'nsub',\n\t      \"\\u2282\\u20D2\": 'vnsub',\n\t      \"\\u2283\": 'sup',\n\t      \"\\u2285\": 'nsup',\n\t      \"\\u2283\\u20D2\": 'vnsup',\n\t      \"\\u2286\": 'sube',\n\t      \"\\u2288\": 'nsube',\n\t      \"\\u2287\": 'supe',\n\t      \"\\u2289\": 'nsupe',\n\t      \"\\u228A\\uFE00\": 'vsubne',\n\t      \"\\u228A\": 'subne',\n\t      \"\\u228B\\uFE00\": 'vsupne',\n\t      \"\\u228B\": 'supne',\n\t      \"\\u228D\": 'cupdot',\n\t      \"\\u228E\": 'uplus',\n\t      \"\\u228F\": 'sqsub',\n\t      \"\\u228F\\u0338\": 'NotSquareSubset',\n\t      \"\\u2290\": 'sqsup',\n\t      \"\\u2290\\u0338\": 'NotSquareSuperset',\n\t      \"\\u2291\": 'sqsube',\n\t      \"\\u22E2\": 'nsqsube',\n\t      \"\\u2292\": 'sqsupe',\n\t      \"\\u22E3\": 'nsqsupe',\n\t      \"\\u2293\": 'sqcap',\n\t      \"\\u2293\\uFE00\": 'sqcaps',\n\t      \"\\u2294\": 'sqcup',\n\t      \"\\u2294\\uFE00\": 'sqcups',\n\t      \"\\u2295\": 'oplus',\n\t      \"\\u2296\": 'ominus',\n\t      \"\\u2297\": 'otimes',\n\t      \"\\u2298\": 'osol',\n\t      \"\\u2299\": 'odot',\n\t      \"\\u229A\": 'ocir',\n\t      \"\\u229B\": 'oast',\n\t      \"\\u229D\": 'odash',\n\t      \"\\u229E\": 'plusb',\n\t      \"\\u229F\": 'minusb',\n\t      \"\\u22A0\": 'timesb',\n\t      \"\\u22A1\": 'sdotb',\n\t      \"\\u22A2\": 'vdash',\n\t      \"\\u22AC\": 'nvdash',\n\t      \"\\u22A3\": 'dashv',\n\t      \"\\u22A4\": 'top',\n\t      \"\\u22A5\": 'bot',\n\t      \"\\u22A7\": 'models',\n\t      \"\\u22A8\": 'vDash',\n\t      \"\\u22AD\": 'nvDash',\n\t      \"\\u22A9\": 'Vdash',\n\t      \"\\u22AE\": 'nVdash',\n\t      \"\\u22AA\": 'Vvdash',\n\t      \"\\u22AB\": 'VDash',\n\t      \"\\u22AF\": 'nVDash',\n\t      \"\\u22B0\": 'prurel',\n\t      \"\\u22B2\": 'vltri',\n\t      \"\\u22EA\": 'nltri',\n\t      \"\\u22B3\": 'vrtri',\n\t      \"\\u22EB\": 'nrtri',\n\t      \"\\u22B4\": 'ltrie',\n\t      \"\\u22EC\": 'nltrie',\n\t      \"\\u22B4\\u20D2\": 'nvltrie',\n\t      \"\\u22B5\": 'rtrie',\n\t      \"\\u22ED\": 'nrtrie',\n\t      \"\\u22B5\\u20D2\": 'nvrtrie',\n\t      \"\\u22B6\": 'origof',\n\t      \"\\u22B7\": 'imof',\n\t      \"\\u22B8\": 'mumap',\n\t      \"\\u22B9\": 'hercon',\n\t      \"\\u22BA\": 'intcal',\n\t      \"\\u22BB\": 'veebar',\n\t      \"\\u22BD\": 'barvee',\n\t      \"\\u22BE\": 'angrtvb',\n\t      \"\\u22BF\": 'lrtri',\n\t      \"\\u22C0\": 'Wedge',\n\t      \"\\u22C1\": 'Vee',\n\t      \"\\u22C2\": 'xcap',\n\t      \"\\u22C3\": 'xcup',\n\t      \"\\u22C4\": 'diam',\n\t      \"\\u22C5\": 'sdot',\n\t      \"\\u22C6\": 'Star',\n\t      \"\\u22C7\": 'divonx',\n\t      \"\\u22C8\": 'bowtie',\n\t      \"\\u22C9\": 'ltimes',\n\t      \"\\u22CA\": 'rtimes',\n\t      \"\\u22CB\": 'lthree',\n\t      \"\\u22CC\": 'rthree',\n\t      \"\\u22CD\": 'bsime',\n\t      \"\\u22CE\": 'cuvee',\n\t      \"\\u22CF\": 'cuwed',\n\t      \"\\u22D0\": 'Sub',\n\t      \"\\u22D1\": 'Sup',\n\t      \"\\u22D2\": 'Cap',\n\t      \"\\u22D3\": 'Cup',\n\t      \"\\u22D4\": 'fork',\n\t      \"\\u22D5\": 'epar',\n\t      \"\\u22D6\": 'ltdot',\n\t      \"\\u22D7\": 'gtdot',\n\t      \"\\u22D8\": 'Ll',\n\t      \"\\u22D8\\u0338\": 'nLl',\n\t      \"\\u22D9\": 'Gg',\n\t      \"\\u22D9\\u0338\": 'nGg',\n\t      \"\\u22DA\\uFE00\": 'lesg',\n\t      \"\\u22DA\": 'leg',\n\t      \"\\u22DB\": 'gel',\n\t      \"\\u22DB\\uFE00\": 'gesl',\n\t      \"\\u22DE\": 'cuepr',\n\t      \"\\u22DF\": 'cuesc',\n\t      \"\\u22E6\": 'lnsim',\n\t      \"\\u22E7\": 'gnsim',\n\t      \"\\u22E8\": 'prnsim',\n\t      \"\\u22E9\": 'scnsim',\n\t      \"\\u22EE\": 'vellip',\n\t      \"\\u22EF\": 'ctdot',\n\t      \"\\u22F0\": 'utdot',\n\t      \"\\u22F1\": 'dtdot',\n\t      \"\\u22F2\": 'disin',\n\t      \"\\u22F3\": 'isinsv',\n\t      \"\\u22F4\": 'isins',\n\t      \"\\u22F5\": 'isindot',\n\t      \"\\u22F5\\u0338\": 'notindot',\n\t      \"\\u22F6\": 'notinvc',\n\t      \"\\u22F7\": 'notinvb',\n\t      \"\\u22F9\": 'isinE',\n\t      \"\\u22F9\\u0338\": 'notinE',\n\t      \"\\u22FA\": 'nisd',\n\t      \"\\u22FB\": 'xnis',\n\t      \"\\u22FC\": 'nis',\n\t      \"\\u22FD\": 'notnivc',\n\t      \"\\u22FE\": 'notnivb',\n\t      \"\\u2305\": 'barwed',\n\t      \"\\u2306\": 'Barwed',\n\t      \"\\u230C\": 'drcrop',\n\t      \"\\u230D\": 'dlcrop',\n\t      \"\\u230E\": 'urcrop',\n\t      \"\\u230F\": 'ulcrop',\n\t      \"\\u2310\": 'bnot',\n\t      \"\\u2312\": 'profline',\n\t      \"\\u2313\": 'profsurf',\n\t      \"\\u2315\": 'telrec',\n\t      \"\\u2316\": 'target',\n\t      \"\\u231C\": 'ulcorn',\n\t      \"\\u231D\": 'urcorn',\n\t      \"\\u231E\": 'dlcorn',\n\t      \"\\u231F\": 'drcorn',\n\t      \"\\u2322\": 'frown',\n\t      \"\\u2323\": 'smile',\n\t      \"\\u232D\": 'cylcty',\n\t      \"\\u232E\": 'profalar',\n\t      \"\\u2336\": 'topbot',\n\t      \"\\u233D\": 'ovbar',\n\t      \"\\u233F\": 'solbar',\n\t      \"\\u237C\": 'angzarr',\n\t      \"\\u23B0\": 'lmoust',\n\t      \"\\u23B1\": 'rmoust',\n\t      \"\\u23B4\": 'tbrk',\n\t      \"\\u23B5\": 'bbrk',\n\t      \"\\u23B6\": 'bbrktbrk',\n\t      \"\\u23DC\": 'OverParenthesis',\n\t      \"\\u23DD\": 'UnderParenthesis',\n\t      \"\\u23DE\": 'OverBrace',\n\t      \"\\u23DF\": 'UnderBrace',\n\t      \"\\u23E2\": 'trpezium',\n\t      \"\\u23E7\": 'elinters',\n\t      \"\\u2423\": 'blank',\n\t      \"\\u2500\": 'boxh',\n\t      \"\\u2502\": 'boxv',\n\t      \"\\u250C\": 'boxdr',\n\t      \"\\u2510\": 'boxdl',\n\t      \"\\u2514\": 'boxur',\n\t      \"\\u2518\": 'boxul',\n\t      \"\\u251C\": 'boxvr',\n\t      \"\\u2524\": 'boxvl',\n\t      \"\\u252C\": 'boxhd',\n\t      \"\\u2534\": 'boxhu',\n\t      \"\\u253C\": 'boxvh',\n\t      \"\\u2550\": 'boxH',\n\t      \"\\u2551\": 'boxV',\n\t      \"\\u2552\": 'boxdR',\n\t      \"\\u2553\": 'boxDr',\n\t      \"\\u2554\": 'boxDR',\n\t      \"\\u2555\": 'boxdL',\n\t      \"\\u2556\": 'boxDl',\n\t      \"\\u2557\": 'boxDL',\n\t      \"\\u2558\": 'boxuR',\n\t      \"\\u2559\": 'boxUr',\n\t      \"\\u255A\": 'boxUR',\n\t      \"\\u255B\": 'boxuL',\n\t      \"\\u255C\": 'boxUl',\n\t      \"\\u255D\": 'boxUL',\n\t      \"\\u255E\": 'boxvR',\n\t      \"\\u255F\": 'boxVr',\n\t      \"\\u2560\": 'boxVR',\n\t      \"\\u2561\": 'boxvL',\n\t      \"\\u2562\": 'boxVl',\n\t      \"\\u2563\": 'boxVL',\n\t      \"\\u2564\": 'boxHd',\n\t      \"\\u2565\": 'boxhD',\n\t      \"\\u2566\": 'boxHD',\n\t      \"\\u2567\": 'boxHu',\n\t      \"\\u2568\": 'boxhU',\n\t      \"\\u2569\": 'boxHU',\n\t      \"\\u256A\": 'boxvH',\n\t      \"\\u256B\": 'boxVh',\n\t      \"\\u256C\": 'boxVH',\n\t      \"\\u2580\": 'uhblk',\n\t      \"\\u2584\": 'lhblk',\n\t      \"\\u2588\": 'block',\n\t      \"\\u2591\": 'blk14',\n\t      \"\\u2592\": 'blk12',\n\t      \"\\u2593\": 'blk34',\n\t      \"\\u25A1\": 'squ',\n\t      \"\\u25AA\": 'squf',\n\t      \"\\u25AB\": 'EmptyVerySmallSquare',\n\t      \"\\u25AD\": 'rect',\n\t      \"\\u25AE\": 'marker',\n\t      \"\\u25B1\": 'fltns',\n\t      \"\\u25B3\": 'xutri',\n\t      \"\\u25B4\": 'utrif',\n\t      \"\\u25B5\": 'utri',\n\t      \"\\u25B8\": 'rtrif',\n\t      \"\\u25B9\": 'rtri',\n\t      \"\\u25BD\": 'xdtri',\n\t      \"\\u25BE\": 'dtrif',\n\t      \"\\u25BF\": 'dtri',\n\t      \"\\u25C2\": 'ltrif',\n\t      \"\\u25C3\": 'ltri',\n\t      \"\\u25CA\": 'loz',\n\t      \"\\u25CB\": 'cir',\n\t      \"\\u25EC\": 'tridot',\n\t      \"\\u25EF\": 'xcirc',\n\t      \"\\u25F8\": 'ultri',\n\t      \"\\u25F9\": 'urtri',\n\t      \"\\u25FA\": 'lltri',\n\t      \"\\u25FB\": 'EmptySmallSquare',\n\t      \"\\u25FC\": 'FilledSmallSquare',\n\t      \"\\u2605\": 'starf',\n\t      \"\\u2606\": 'star',\n\t      \"\\u260E\": 'phone',\n\t      \"\\u2640\": 'female',\n\t      \"\\u2642\": 'male',\n\t      \"\\u2660\": 'spades',\n\t      \"\\u2663\": 'clubs',\n\t      \"\\u2665\": 'hearts',\n\t      \"\\u2666\": 'diams',\n\t      \"\\u266A\": 'sung',\n\t      \"\\u2713\": 'check',\n\t      \"\\u2717\": 'cross',\n\t      \"\\u2720\": 'malt',\n\t      \"\\u2736\": 'sext',\n\t      \"\\u2758\": 'VerticalSeparator',\n\t      \"\\u27C8\": 'bsolhsub',\n\t      \"\\u27C9\": 'suphsol',\n\t      \"\\u27F5\": 'xlarr',\n\t      \"\\u27F6\": 'xrarr',\n\t      \"\\u27F7\": 'xharr',\n\t      \"\\u27F8\": 'xlArr',\n\t      \"\\u27F9\": 'xrArr',\n\t      \"\\u27FA\": 'xhArr',\n\t      \"\\u27FC\": 'xmap',\n\t      \"\\u27FF\": 'dzigrarr',\n\t      \"\\u2902\": 'nvlArr',\n\t      \"\\u2903\": 'nvrArr',\n\t      \"\\u2904\": 'nvHarr',\n\t      \"\\u2905\": 'Map',\n\t      \"\\u290C\": 'lbarr',\n\t      \"\\u290D\": 'rbarr',\n\t      \"\\u290E\": 'lBarr',\n\t      \"\\u290F\": 'rBarr',\n\t      \"\\u2910\": 'RBarr',\n\t      \"\\u2911\": 'DDotrahd',\n\t      \"\\u2912\": 'UpArrowBar',\n\t      \"\\u2913\": 'DownArrowBar',\n\t      \"\\u2916\": 'Rarrtl',\n\t      \"\\u2919\": 'latail',\n\t      \"\\u291A\": 'ratail',\n\t      \"\\u291B\": 'lAtail',\n\t      \"\\u291C\": 'rAtail',\n\t      \"\\u291D\": 'larrfs',\n\t      \"\\u291E\": 'rarrfs',\n\t      \"\\u291F\": 'larrbfs',\n\t      \"\\u2920\": 'rarrbfs',\n\t      \"\\u2923\": 'nwarhk',\n\t      \"\\u2924\": 'nearhk',\n\t      \"\\u2925\": 'searhk',\n\t      \"\\u2926\": 'swarhk',\n\t      \"\\u2927\": 'nwnear',\n\t      \"\\u2928\": 'toea',\n\t      \"\\u2929\": 'tosa',\n\t      \"\\u292A\": 'swnwar',\n\t      \"\\u2933\": 'rarrc',\n\t      \"\\u2933\\u0338\": 'nrarrc',\n\t      \"\\u2935\": 'cudarrr',\n\t      \"\\u2936\": 'ldca',\n\t      \"\\u2937\": 'rdca',\n\t      \"\\u2938\": 'cudarrl',\n\t      \"\\u2939\": 'larrpl',\n\t      \"\\u293C\": 'curarrm',\n\t      \"\\u293D\": 'cularrp',\n\t      \"\\u2945\": 'rarrpl',\n\t      \"\\u2948\": 'harrcir',\n\t      \"\\u2949\": 'Uarrocir',\n\t      \"\\u294A\": 'lurdshar',\n\t      \"\\u294B\": 'ldrushar',\n\t      \"\\u294E\": 'LeftRightVector',\n\t      \"\\u294F\": 'RightUpDownVector',\n\t      \"\\u2950\": 'DownLeftRightVector',\n\t      \"\\u2951\": 'LeftUpDownVector',\n\t      \"\\u2952\": 'LeftVectorBar',\n\t      \"\\u2953\": 'RightVectorBar',\n\t      \"\\u2954\": 'RightUpVectorBar',\n\t      \"\\u2955\": 'RightDownVectorBar',\n\t      \"\\u2956\": 'DownLeftVectorBar',\n\t      \"\\u2957\": 'DownRightVectorBar',\n\t      \"\\u2958\": 'LeftUpVectorBar',\n\t      \"\\u2959\": 'LeftDownVectorBar',\n\t      \"\\u295A\": 'LeftTeeVector',\n\t      \"\\u295B\": 'RightTeeVector',\n\t      \"\\u295C\": 'RightUpTeeVector',\n\t      \"\\u295D\": 'RightDownTeeVector',\n\t      \"\\u295E\": 'DownLeftTeeVector',\n\t      \"\\u295F\": 'DownRightTeeVector',\n\t      \"\\u2960\": 'LeftUpTeeVector',\n\t      \"\\u2961\": 'LeftDownTeeVector',\n\t      \"\\u2962\": 'lHar',\n\t      \"\\u2963\": 'uHar',\n\t      \"\\u2964\": 'rHar',\n\t      \"\\u2965\": 'dHar',\n\t      \"\\u2966\": 'luruhar',\n\t      \"\\u2967\": 'ldrdhar',\n\t      \"\\u2968\": 'ruluhar',\n\t      \"\\u2969\": 'rdldhar',\n\t      \"\\u296A\": 'lharul',\n\t      \"\\u296B\": 'llhard',\n\t      \"\\u296C\": 'rharul',\n\t      \"\\u296D\": 'lrhard',\n\t      \"\\u296E\": 'udhar',\n\t      \"\\u296F\": 'duhar',\n\t      \"\\u2970\": 'RoundImplies',\n\t      \"\\u2971\": 'erarr',\n\t      \"\\u2972\": 'simrarr',\n\t      \"\\u2973\": 'larrsim',\n\t      \"\\u2974\": 'rarrsim',\n\t      \"\\u2975\": 'rarrap',\n\t      \"\\u2976\": 'ltlarr',\n\t      \"\\u2978\": 'gtrarr',\n\t      \"\\u2979\": 'subrarr',\n\t      \"\\u297B\": 'suplarr',\n\t      \"\\u297C\": 'lfisht',\n\t      \"\\u297D\": 'rfisht',\n\t      \"\\u297E\": 'ufisht',\n\t      \"\\u297F\": 'dfisht',\n\t      \"\\u299A\": 'vzigzag',\n\t      \"\\u299C\": 'vangrt',\n\t      \"\\u299D\": 'angrtvbd',\n\t      \"\\u29A4\": 'ange',\n\t      \"\\u29A5\": 'range',\n\t      \"\\u29A6\": 'dwangle',\n\t      \"\\u29A7\": 'uwangle',\n\t      \"\\u29A8\": 'angmsdaa',\n\t      \"\\u29A9\": 'angmsdab',\n\t      \"\\u29AA\": 'angmsdac',\n\t      \"\\u29AB\": 'angmsdad',\n\t      \"\\u29AC\": 'angmsdae',\n\t      \"\\u29AD\": 'angmsdaf',\n\t      \"\\u29AE\": 'angmsdag',\n\t      \"\\u29AF\": 'angmsdah',\n\t      \"\\u29B0\": 'bemptyv',\n\t      \"\\u29B1\": 'demptyv',\n\t      \"\\u29B2\": 'cemptyv',\n\t      \"\\u29B3\": 'raemptyv',\n\t      \"\\u29B4\": 'laemptyv',\n\t      \"\\u29B5\": 'ohbar',\n\t      \"\\u29B6\": 'omid',\n\t      \"\\u29B7\": 'opar',\n\t      \"\\u29B9\": 'operp',\n\t      \"\\u29BB\": 'olcross',\n\t      \"\\u29BC\": 'odsold',\n\t      \"\\u29BE\": 'olcir',\n\t      \"\\u29BF\": 'ofcir',\n\t      \"\\u29C0\": 'olt',\n\t      \"\\u29C1\": 'ogt',\n\t      \"\\u29C2\": 'cirscir',\n\t      \"\\u29C3\": 'cirE',\n\t      \"\\u29C4\": 'solb',\n\t      \"\\u29C5\": 'bsolb',\n\t      \"\\u29C9\": 'boxbox',\n\t      \"\\u29CD\": 'trisb',\n\t      \"\\u29CE\": 'rtriltri',\n\t      \"\\u29CF\": 'LeftTriangleBar',\n\t      \"\\u29CF\\u0338\": 'NotLeftTriangleBar',\n\t      \"\\u29D0\": 'RightTriangleBar',\n\t      \"\\u29D0\\u0338\": 'NotRightTriangleBar',\n\t      \"\\u29DC\": 'iinfin',\n\t      \"\\u29DD\": 'infintie',\n\t      \"\\u29DE\": 'nvinfin',\n\t      \"\\u29E3\": 'eparsl',\n\t      \"\\u29E4\": 'smeparsl',\n\t      \"\\u29E5\": 'eqvparsl',\n\t      \"\\u29EB\": 'lozf',\n\t      \"\\u29F4\": 'RuleDelayed',\n\t      \"\\u29F6\": 'dsol',\n\t      \"\\u2A00\": 'xodot',\n\t      \"\\u2A01\": 'xoplus',\n\t      \"\\u2A02\": 'xotime',\n\t      \"\\u2A04\": 'xuplus',\n\t      \"\\u2A06\": 'xsqcup',\n\t      \"\\u2A0D\": 'fpartint',\n\t      \"\\u2A10\": 'cirfnint',\n\t      \"\\u2A11\": 'awint',\n\t      \"\\u2A12\": 'rppolint',\n\t      \"\\u2A13\": 'scpolint',\n\t      \"\\u2A14\": 'npolint',\n\t      \"\\u2A15\": 'pointint',\n\t      \"\\u2A16\": 'quatint',\n\t      \"\\u2A17\": 'intlarhk',\n\t      \"\\u2A22\": 'pluscir',\n\t      \"\\u2A23\": 'plusacir',\n\t      \"\\u2A24\": 'simplus',\n\t      \"\\u2A25\": 'plusdu',\n\t      \"\\u2A26\": 'plussim',\n\t      \"\\u2A27\": 'plustwo',\n\t      \"\\u2A29\": 'mcomma',\n\t      \"\\u2A2A\": 'minusdu',\n\t      \"\\u2A2D\": 'loplus',\n\t      \"\\u2A2E\": 'roplus',\n\t      \"\\u2A2F\": 'Cross',\n\t      \"\\u2A30\": 'timesd',\n\t      \"\\u2A31\": 'timesbar',\n\t      \"\\u2A33\": 'smashp',\n\t      \"\\u2A34\": 'lotimes',\n\t      \"\\u2A35\": 'rotimes',\n\t      \"\\u2A36\": 'otimesas',\n\t      \"\\u2A37\": 'Otimes',\n\t      \"\\u2A38\": 'odiv',\n\t      \"\\u2A39\": 'triplus',\n\t      \"\\u2A3A\": 'triminus',\n\t      \"\\u2A3B\": 'tritime',\n\t      \"\\u2A3C\": 'iprod',\n\t      \"\\u2A3F\": 'amalg',\n\t      \"\\u2A40\": 'capdot',\n\t      \"\\u2A42\": 'ncup',\n\t      \"\\u2A43\": 'ncap',\n\t      \"\\u2A44\": 'capand',\n\t      \"\\u2A45\": 'cupor',\n\t      \"\\u2A46\": 'cupcap',\n\t      \"\\u2A47\": 'capcup',\n\t      \"\\u2A48\": 'cupbrcap',\n\t      \"\\u2A49\": 'capbrcup',\n\t      \"\\u2A4A\": 'cupcup',\n\t      \"\\u2A4B\": 'capcap',\n\t      \"\\u2A4C\": 'ccups',\n\t      \"\\u2A4D\": 'ccaps',\n\t      \"\\u2A50\": 'ccupssm',\n\t      \"\\u2A53\": 'And',\n\t      \"\\u2A54\": 'Or',\n\t      \"\\u2A55\": 'andand',\n\t      \"\\u2A56\": 'oror',\n\t      \"\\u2A57\": 'orslope',\n\t      \"\\u2A58\": 'andslope',\n\t      \"\\u2A5A\": 'andv',\n\t      \"\\u2A5B\": 'orv',\n\t      \"\\u2A5C\": 'andd',\n\t      \"\\u2A5D\": 'ord',\n\t      \"\\u2A5F\": 'wedbar',\n\t      \"\\u2A66\": 'sdote',\n\t      \"\\u2A6A\": 'simdot',\n\t      \"\\u2A6D\": 'congdot',\n\t      \"\\u2A6D\\u0338\": 'ncongdot',\n\t      \"\\u2A6E\": 'easter',\n\t      \"\\u2A6F\": 'apacir',\n\t      \"\\u2A70\": 'apE',\n\t      \"\\u2A70\\u0338\": 'napE',\n\t      \"\\u2A71\": 'eplus',\n\t      \"\\u2A72\": 'pluse',\n\t      \"\\u2A73\": 'Esim',\n\t      \"\\u2A77\": 'eDDot',\n\t      \"\\u2A78\": 'equivDD',\n\t      \"\\u2A79\": 'ltcir',\n\t      \"\\u2A7A\": 'gtcir',\n\t      \"\\u2A7B\": 'ltquest',\n\t      \"\\u2A7C\": 'gtquest',\n\t      \"\\u2A7D\": 'les',\n\t      \"\\u2A7D\\u0338\": 'nles',\n\t      \"\\u2A7E\": 'ges',\n\t      \"\\u2A7E\\u0338\": 'nges',\n\t      \"\\u2A7F\": 'lesdot',\n\t      \"\\u2A80\": 'gesdot',\n\t      \"\\u2A81\": 'lesdoto',\n\t      \"\\u2A82\": 'gesdoto',\n\t      \"\\u2A83\": 'lesdotor',\n\t      \"\\u2A84\": 'gesdotol',\n\t      \"\\u2A85\": 'lap',\n\t      \"\\u2A86\": 'gap',\n\t      \"\\u2A87\": 'lne',\n\t      \"\\u2A88\": 'gne',\n\t      \"\\u2A89\": 'lnap',\n\t      \"\\u2A8A\": 'gnap',\n\t      \"\\u2A8B\": 'lEg',\n\t      \"\\u2A8C\": 'gEl',\n\t      \"\\u2A8D\": 'lsime',\n\t      \"\\u2A8E\": 'gsime',\n\t      \"\\u2A8F\": 'lsimg',\n\t      \"\\u2A90\": 'gsiml',\n\t      \"\\u2A91\": 'lgE',\n\t      \"\\u2A92\": 'glE',\n\t      \"\\u2A93\": 'lesges',\n\t      \"\\u2A94\": 'gesles',\n\t      \"\\u2A95\": 'els',\n\t      \"\\u2A96\": 'egs',\n\t      \"\\u2A97\": 'elsdot',\n\t      \"\\u2A98\": 'egsdot',\n\t      \"\\u2A99\": 'el',\n\t      \"\\u2A9A\": 'eg',\n\t      \"\\u2A9D\": 'siml',\n\t      \"\\u2A9E\": 'simg',\n\t      \"\\u2A9F\": 'simlE',\n\t      \"\\u2AA0\": 'simgE',\n\t      \"\\u2AA1\": 'LessLess',\n\t      \"\\u2AA1\\u0338\": 'NotNestedLessLess',\n\t      \"\\u2AA2\": 'GreaterGreater',\n\t      \"\\u2AA2\\u0338\": 'NotNestedGreaterGreater',\n\t      \"\\u2AA4\": 'glj',\n\t      \"\\u2AA5\": 'gla',\n\t      \"\\u2AA6\": 'ltcc',\n\t      \"\\u2AA7\": 'gtcc',\n\t      \"\\u2AA8\": 'lescc',\n\t      \"\\u2AA9\": 'gescc',\n\t      \"\\u2AAA\": 'smt',\n\t      \"\\u2AAB\": 'lat',\n\t      \"\\u2AAC\": 'smte',\n\t      \"\\u2AAC\\uFE00\": 'smtes',\n\t      \"\\u2AAD\": 'late',\n\t      \"\\u2AAD\\uFE00\": 'lates',\n\t      \"\\u2AAE\": 'bumpE',\n\t      \"\\u2AAF\": 'pre',\n\t      \"\\u2AAF\\u0338\": 'npre',\n\t      \"\\u2AB0\": 'sce',\n\t      \"\\u2AB0\\u0338\": 'nsce',\n\t      \"\\u2AB3\": 'prE',\n\t      \"\\u2AB4\": 'scE',\n\t      \"\\u2AB5\": 'prnE',\n\t      \"\\u2AB6\": 'scnE',\n\t      \"\\u2AB7\": 'prap',\n\t      \"\\u2AB8\": 'scap',\n\t      \"\\u2AB9\": 'prnap',\n\t      \"\\u2ABA\": 'scnap',\n\t      \"\\u2ABB\": 'Pr',\n\t      \"\\u2ABC\": 'Sc',\n\t      \"\\u2ABD\": 'subdot',\n\t      \"\\u2ABE\": 'supdot',\n\t      \"\\u2ABF\": 'subplus',\n\t      \"\\u2AC0\": 'supplus',\n\t      \"\\u2AC1\": 'submult',\n\t      \"\\u2AC2\": 'supmult',\n\t      \"\\u2AC3\": 'subedot',\n\t      \"\\u2AC4\": 'supedot',\n\t      \"\\u2AC5\": 'subE',\n\t      \"\\u2AC5\\u0338\": 'nsubE',\n\t      \"\\u2AC6\": 'supE',\n\t      \"\\u2AC6\\u0338\": 'nsupE',\n\t      \"\\u2AC7\": 'subsim',\n\t      \"\\u2AC8\": 'supsim',\n\t      \"\\u2ACB\\uFE00\": 'vsubnE',\n\t      \"\\u2ACB\": 'subnE',\n\t      \"\\u2ACC\\uFE00\": 'vsupnE',\n\t      \"\\u2ACC\": 'supnE',\n\t      \"\\u2ACF\": 'csub',\n\t      \"\\u2AD0\": 'csup',\n\t      \"\\u2AD1\": 'csube',\n\t      \"\\u2AD2\": 'csupe',\n\t      \"\\u2AD3\": 'subsup',\n\t      \"\\u2AD4\": 'supsub',\n\t      \"\\u2AD5\": 'subsub',\n\t      \"\\u2AD6\": 'supsup',\n\t      \"\\u2AD7\": 'suphsub',\n\t      \"\\u2AD8\": 'supdsub',\n\t      \"\\u2AD9\": 'forkv',\n\t      \"\\u2ADA\": 'topfork',\n\t      \"\\u2ADB\": 'mlcp',\n\t      \"\\u2AE4\": 'Dashv',\n\t      \"\\u2AE6\": 'Vdashl',\n\t      \"\\u2AE7\": 'Barv',\n\t      \"\\u2AE8\": 'vBar',\n\t      \"\\u2AE9\": 'vBarv',\n\t      \"\\u2AEB\": 'Vbar',\n\t      \"\\u2AEC\": 'Not',\n\t      \"\\u2AED\": 'bNot',\n\t      \"\\u2AEE\": 'rnmid',\n\t      \"\\u2AEF\": 'cirmid',\n\t      \"\\u2AF0\": 'midcir',\n\t      \"\\u2AF1\": 'topcir',\n\t      \"\\u2AF2\": 'nhpar',\n\t      \"\\u2AF3\": 'parsim',\n\t      \"\\u2AFD\": 'parsl',\n\t      \"\\u2AFD\\u20E5\": 'nparsl',\n\t      \"\\u266D\": 'flat',\n\t      \"\\u266E\": 'natur',\n\t      \"\\u266F\": 'sharp',\n\t      '\\xA4': 'curren',\n\t      '\\xA2': 'cent',\n\t      '$': 'dollar',\n\t      '\\xA3': 'pound',\n\t      '\\xA5': 'yen',\n\t      \"\\u20AC\": 'euro',\n\t      '\\xB9': 'sup1',\n\t      '\\xBD': 'half',\n\t      \"\\u2153\": 'frac13',\n\t      '\\xBC': 'frac14',\n\t      \"\\u2155\": 'frac15',\n\t      \"\\u2159\": 'frac16',\n\t      \"\\u215B\": 'frac18',\n\t      '\\xB2': 'sup2',\n\t      \"\\u2154\": 'frac23',\n\t      \"\\u2156\": 'frac25',\n\t      '\\xB3': 'sup3',\n\t      '\\xBE': 'frac34',\n\t      \"\\u2157\": 'frac35',\n\t      \"\\u215C\": 'frac38',\n\t      \"\\u2158\": 'frac45',\n\t      \"\\u215A\": 'frac56',\n\t      \"\\u215D\": 'frac58',\n\t      \"\\u215E\": 'frac78',\n\t      \"\\uD835\\uDCB6\": 'ascr',\n\t      \"\\uD835\\uDD52\": 'aopf',\n\t      \"\\uD835\\uDD1E\": 'afr',\n\t      \"\\uD835\\uDD38\": 'Aopf',\n\t      \"\\uD835\\uDD04\": 'Afr',\n\t      \"\\uD835\\uDC9C\": 'Ascr',\n\t      '\\xAA': 'ordf',\n\t      '\\xE1': 'aacute',\n\t      '\\xC1': 'Aacute',\n\t      '\\xE0': 'agrave',\n\t      '\\xC0': 'Agrave',\n\t      \"\\u0103\": 'abreve',\n\t      \"\\u0102\": 'Abreve',\n\t      '\\xE2': 'acirc',\n\t      '\\xC2': 'Acirc',\n\t      '\\xE5': 'aring',\n\t      '\\xC5': 'angst',\n\t      '\\xE4': 'auml',\n\t      '\\xC4': 'Auml',\n\t      '\\xE3': 'atilde',\n\t      '\\xC3': 'Atilde',\n\t      \"\\u0105\": 'aogon',\n\t      \"\\u0104\": 'Aogon',\n\t      \"\\u0101\": 'amacr',\n\t      \"\\u0100\": 'Amacr',\n\t      '\\xE6': 'aelig',\n\t      '\\xC6': 'AElig',\n\t      \"\\uD835\\uDCB7\": 'bscr',\n\t      \"\\uD835\\uDD53\": 'bopf',\n\t      \"\\uD835\\uDD1F\": 'bfr',\n\t      \"\\uD835\\uDD39\": 'Bopf',\n\t      \"\\u212C\": 'Bscr',\n\t      \"\\uD835\\uDD05\": 'Bfr',\n\t      \"\\uD835\\uDD20\": 'cfr',\n\t      \"\\uD835\\uDCB8\": 'cscr',\n\t      \"\\uD835\\uDD54\": 'copf',\n\t      \"\\u212D\": 'Cfr',\n\t      \"\\uD835\\uDC9E\": 'Cscr',\n\t      \"\\u2102\": 'Copf',\n\t      \"\\u0107\": 'cacute',\n\t      \"\\u0106\": 'Cacute',\n\t      \"\\u0109\": 'ccirc',\n\t      \"\\u0108\": 'Ccirc',\n\t      \"\\u010D\": 'ccaron',\n\t      \"\\u010C\": 'Ccaron',\n\t      \"\\u010B\": 'cdot',\n\t      \"\\u010A\": 'Cdot',\n\t      '\\xE7': 'ccedil',\n\t      '\\xC7': 'Ccedil',\n\t      \"\\u2105\": 'incare',\n\t      \"\\uD835\\uDD21\": 'dfr',\n\t      \"\\u2146\": 'dd',\n\t      \"\\uD835\\uDD55\": 'dopf',\n\t      \"\\uD835\\uDCB9\": 'dscr',\n\t      \"\\uD835\\uDC9F\": 'Dscr',\n\t      \"\\uD835\\uDD07\": 'Dfr',\n\t      \"\\u2145\": 'DD',\n\t      \"\\uD835\\uDD3B\": 'Dopf',\n\t      \"\\u010F\": 'dcaron',\n\t      \"\\u010E\": 'Dcaron',\n\t      \"\\u0111\": 'dstrok',\n\t      \"\\u0110\": 'Dstrok',\n\t      '\\xF0': 'eth',\n\t      '\\xD0': 'ETH',\n\t      \"\\u2147\": 'ee',\n\t      \"\\u212F\": 'escr',\n\t      \"\\uD835\\uDD22\": 'efr',\n\t      \"\\uD835\\uDD56\": 'eopf',\n\t      \"\\u2130\": 'Escr',\n\t      \"\\uD835\\uDD08\": 'Efr',\n\t      \"\\uD835\\uDD3C\": 'Eopf',\n\t      '\\xE9': 'eacute',\n\t      '\\xC9': 'Eacute',\n\t      '\\xE8': 'egrave',\n\t      '\\xC8': 'Egrave',\n\t      '\\xEA': 'ecirc',\n\t      '\\xCA': 'Ecirc',\n\t      \"\\u011B\": 'ecaron',\n\t      \"\\u011A\": 'Ecaron',\n\t      '\\xEB': 'euml',\n\t      '\\xCB': 'Euml',\n\t      \"\\u0117\": 'edot',\n\t      \"\\u0116\": 'Edot',\n\t      \"\\u0119\": 'eogon',\n\t      \"\\u0118\": 'Eogon',\n\t      \"\\u0113\": 'emacr',\n\t      \"\\u0112\": 'Emacr',\n\t      \"\\uD835\\uDD23\": 'ffr',\n\t      \"\\uD835\\uDD57\": 'fopf',\n\t      \"\\uD835\\uDCBB\": 'fscr',\n\t      \"\\uD835\\uDD09\": 'Ffr',\n\t      \"\\uD835\\uDD3D\": 'Fopf',\n\t      \"\\u2131\": 'Fscr',\n\t      \"\\uFB00\": 'fflig',\n\t      \"\\uFB03\": 'ffilig',\n\t      \"\\uFB04\": 'ffllig',\n\t      \"\\uFB01\": 'filig',\n\t      'fj': 'fjlig',\n\t      \"\\uFB02\": 'fllig',\n\t      \"\\u0192\": 'fnof',\n\t      \"\\u210A\": 'gscr',\n\t      \"\\uD835\\uDD58\": 'gopf',\n\t      \"\\uD835\\uDD24\": 'gfr',\n\t      \"\\uD835\\uDCA2\": 'Gscr',\n\t      \"\\uD835\\uDD3E\": 'Gopf',\n\t      \"\\uD835\\uDD0A\": 'Gfr',\n\t      \"\\u01F5\": 'gacute',\n\t      \"\\u011F\": 'gbreve',\n\t      \"\\u011E\": 'Gbreve',\n\t      \"\\u011D\": 'gcirc',\n\t      \"\\u011C\": 'Gcirc',\n\t      \"\\u0121\": 'gdot',\n\t      \"\\u0120\": 'Gdot',\n\t      \"\\u0122\": 'Gcedil',\n\t      \"\\uD835\\uDD25\": 'hfr',\n\t      \"\\u210E\": 'planckh',\n\t      \"\\uD835\\uDCBD\": 'hscr',\n\t      \"\\uD835\\uDD59\": 'hopf',\n\t      \"\\u210B\": 'Hscr',\n\t      \"\\u210C\": 'Hfr',\n\t      \"\\u210D\": 'Hopf',\n\t      \"\\u0125\": 'hcirc',\n\t      \"\\u0124\": 'Hcirc',\n\t      \"\\u210F\": 'hbar',\n\t      \"\\u0127\": 'hstrok',\n\t      \"\\u0126\": 'Hstrok',\n\t      \"\\uD835\\uDD5A\": 'iopf',\n\t      \"\\uD835\\uDD26\": 'ifr',\n\t      \"\\uD835\\uDCBE\": 'iscr',\n\t      \"\\u2148\": 'ii',\n\t      \"\\uD835\\uDD40\": 'Iopf',\n\t      \"\\u2110\": 'Iscr',\n\t      \"\\u2111\": 'Im',\n\t      '\\xED': 'iacute',\n\t      '\\xCD': 'Iacute',\n\t      '\\xEC': 'igrave',\n\t      '\\xCC': 'Igrave',\n\t      '\\xEE': 'icirc',\n\t      '\\xCE': 'Icirc',\n\t      '\\xEF': 'iuml',\n\t      '\\xCF': 'Iuml',\n\t      \"\\u0129\": 'itilde',\n\t      \"\\u0128\": 'Itilde',\n\t      \"\\u0130\": 'Idot',\n\t      \"\\u012F\": 'iogon',\n\t      \"\\u012E\": 'Iogon',\n\t      \"\\u012B\": 'imacr',\n\t      \"\\u012A\": 'Imacr',\n\t      \"\\u0133\": 'ijlig',\n\t      \"\\u0132\": 'IJlig',\n\t      \"\\u0131\": 'imath',\n\t      \"\\uD835\\uDCBF\": 'jscr',\n\t      \"\\uD835\\uDD5B\": 'jopf',\n\t      \"\\uD835\\uDD27\": 'jfr',\n\t      \"\\uD835\\uDCA5\": 'Jscr',\n\t      \"\\uD835\\uDD0D\": 'Jfr',\n\t      \"\\uD835\\uDD41\": 'Jopf',\n\t      \"\\u0135\": 'jcirc',\n\t      \"\\u0134\": 'Jcirc',\n\t      \"\\u0237\": 'jmath',\n\t      \"\\uD835\\uDD5C\": 'kopf',\n\t      \"\\uD835\\uDCC0\": 'kscr',\n\t      \"\\uD835\\uDD28\": 'kfr',\n\t      \"\\uD835\\uDCA6\": 'Kscr',\n\t      \"\\uD835\\uDD42\": 'Kopf',\n\t      \"\\uD835\\uDD0E\": 'Kfr',\n\t      \"\\u0137\": 'kcedil',\n\t      \"\\u0136\": 'Kcedil',\n\t      \"\\uD835\\uDD29\": 'lfr',\n\t      \"\\uD835\\uDCC1\": 'lscr',\n\t      \"\\u2113\": 'ell',\n\t      \"\\uD835\\uDD5D\": 'lopf',\n\t      \"\\u2112\": 'Lscr',\n\t      \"\\uD835\\uDD0F\": 'Lfr',\n\t      \"\\uD835\\uDD43\": 'Lopf',\n\t      \"\\u013A\": 'lacute',\n\t      \"\\u0139\": 'Lacute',\n\t      \"\\u013E\": 'lcaron',\n\t      \"\\u013D\": 'Lcaron',\n\t      \"\\u013C\": 'lcedil',\n\t      \"\\u013B\": 'Lcedil',\n\t      \"\\u0142\": 'lstrok',\n\t      \"\\u0141\": 'Lstrok',\n\t      \"\\u0140\": 'lmidot',\n\t      \"\\u013F\": 'Lmidot',\n\t      \"\\uD835\\uDD2A\": 'mfr',\n\t      \"\\uD835\\uDD5E\": 'mopf',\n\t      \"\\uD835\\uDCC2\": 'mscr',\n\t      \"\\uD835\\uDD10\": 'Mfr',\n\t      \"\\uD835\\uDD44\": 'Mopf',\n\t      \"\\u2133\": 'Mscr',\n\t      \"\\uD835\\uDD2B\": 'nfr',\n\t      \"\\uD835\\uDD5F\": 'nopf',\n\t      \"\\uD835\\uDCC3\": 'nscr',\n\t      \"\\u2115\": 'Nopf',\n\t      \"\\uD835\\uDCA9\": 'Nscr',\n\t      \"\\uD835\\uDD11\": 'Nfr',\n\t      \"\\u0144\": 'nacute',\n\t      \"\\u0143\": 'Nacute',\n\t      \"\\u0148\": 'ncaron',\n\t      \"\\u0147\": 'Ncaron',\n\t      '\\xF1': 'ntilde',\n\t      '\\xD1': 'Ntilde',\n\t      \"\\u0146\": 'ncedil',\n\t      \"\\u0145\": 'Ncedil',\n\t      \"\\u2116\": 'numero',\n\t      \"\\u014B\": 'eng',\n\t      \"\\u014A\": 'ENG',\n\t      \"\\uD835\\uDD60\": 'oopf',\n\t      \"\\uD835\\uDD2C\": 'ofr',\n\t      \"\\u2134\": 'oscr',\n\t      \"\\uD835\\uDCAA\": 'Oscr',\n\t      \"\\uD835\\uDD12\": 'Ofr',\n\t      \"\\uD835\\uDD46\": 'Oopf',\n\t      '\\xBA': 'ordm',\n\t      '\\xF3': 'oacute',\n\t      '\\xD3': 'Oacute',\n\t      '\\xF2': 'ograve',\n\t      '\\xD2': 'Ograve',\n\t      '\\xF4': 'ocirc',\n\t      '\\xD4': 'Ocirc',\n\t      '\\xF6': 'ouml',\n\t      '\\xD6': 'Ouml',\n\t      \"\\u0151\": 'odblac',\n\t      \"\\u0150\": 'Odblac',\n\t      '\\xF5': 'otilde',\n\t      '\\xD5': 'Otilde',\n\t      '\\xF8': 'oslash',\n\t      '\\xD8': 'Oslash',\n\t      \"\\u014D\": 'omacr',\n\t      \"\\u014C\": 'Omacr',\n\t      \"\\u0153\": 'oelig',\n\t      \"\\u0152\": 'OElig',\n\t      \"\\uD835\\uDD2D\": 'pfr',\n\t      \"\\uD835\\uDCC5\": 'pscr',\n\t      \"\\uD835\\uDD61\": 'popf',\n\t      \"\\u2119\": 'Popf',\n\t      \"\\uD835\\uDD13\": 'Pfr',\n\t      \"\\uD835\\uDCAB\": 'Pscr',\n\t      \"\\uD835\\uDD62\": 'qopf',\n\t      \"\\uD835\\uDD2E\": 'qfr',\n\t      \"\\uD835\\uDCC6\": 'qscr',\n\t      \"\\uD835\\uDCAC\": 'Qscr',\n\t      \"\\uD835\\uDD14\": 'Qfr',\n\t      \"\\u211A\": 'Qopf',\n\t      \"\\u0138\": 'kgreen',\n\t      \"\\uD835\\uDD2F\": 'rfr',\n\t      \"\\uD835\\uDD63\": 'ropf',\n\t      \"\\uD835\\uDCC7\": 'rscr',\n\t      \"\\u211B\": 'Rscr',\n\t      \"\\u211C\": 'Re',\n\t      \"\\u211D\": 'Ropf',\n\t      \"\\u0155\": 'racute',\n\t      \"\\u0154\": 'Racute',\n\t      \"\\u0159\": 'rcaron',\n\t      \"\\u0158\": 'Rcaron',\n\t      \"\\u0157\": 'rcedil',\n\t      \"\\u0156\": 'Rcedil',\n\t      \"\\uD835\\uDD64\": 'sopf',\n\t      \"\\uD835\\uDCC8\": 'sscr',\n\t      \"\\uD835\\uDD30\": 'sfr',\n\t      \"\\uD835\\uDD4A\": 'Sopf',\n\t      \"\\uD835\\uDD16\": 'Sfr',\n\t      \"\\uD835\\uDCAE\": 'Sscr',\n\t      \"\\u24C8\": 'oS',\n\t      \"\\u015B\": 'sacute',\n\t      \"\\u015A\": 'Sacute',\n\t      \"\\u015D\": 'scirc',\n\t      \"\\u015C\": 'Scirc',\n\t      \"\\u0161\": 'scaron',\n\t      \"\\u0160\": 'Scaron',\n\t      \"\\u015F\": 'scedil',\n\t      \"\\u015E\": 'Scedil',\n\t      '\\xDF': 'szlig',\n\t      \"\\uD835\\uDD31\": 'tfr',\n\t      \"\\uD835\\uDCC9\": 'tscr',\n\t      \"\\uD835\\uDD65\": 'topf',\n\t      \"\\uD835\\uDCAF\": 'Tscr',\n\t      \"\\uD835\\uDD17\": 'Tfr',\n\t      \"\\uD835\\uDD4B\": 'Topf',\n\t      \"\\u0165\": 'tcaron',\n\t      \"\\u0164\": 'Tcaron',\n\t      \"\\u0163\": 'tcedil',\n\t      \"\\u0162\": 'Tcedil',\n\t      \"\\u2122\": 'trade',\n\t      \"\\u0167\": 'tstrok',\n\t      \"\\u0166\": 'Tstrok',\n\t      \"\\uD835\\uDCCA\": 'uscr',\n\t      \"\\uD835\\uDD66\": 'uopf',\n\t      \"\\uD835\\uDD32\": 'ufr',\n\t      \"\\uD835\\uDD4C\": 'Uopf',\n\t      \"\\uD835\\uDD18\": 'Ufr',\n\t      \"\\uD835\\uDCB0\": 'Uscr',\n\t      '\\xFA': 'uacute',\n\t      '\\xDA': 'Uacute',\n\t      '\\xF9': 'ugrave',\n\t      '\\xD9': 'Ugrave',\n\t      \"\\u016D\": 'ubreve',\n\t      \"\\u016C\": 'Ubreve',\n\t      '\\xFB': 'ucirc',\n\t      '\\xDB': 'Ucirc',\n\t      \"\\u016F\": 'uring',\n\t      \"\\u016E\": 'Uring',\n\t      '\\xFC': 'uuml',\n\t      '\\xDC': 'Uuml',\n\t      \"\\u0171\": 'udblac',\n\t      \"\\u0170\": 'Udblac',\n\t      \"\\u0169\": 'utilde',\n\t      \"\\u0168\": 'Utilde',\n\t      \"\\u0173\": 'uogon',\n\t      \"\\u0172\": 'Uogon',\n\t      \"\\u016B\": 'umacr',\n\t      \"\\u016A\": 'Umacr',\n\t      \"\\uD835\\uDD33\": 'vfr',\n\t      \"\\uD835\\uDD67\": 'vopf',\n\t      \"\\uD835\\uDCCB\": 'vscr',\n\t      \"\\uD835\\uDD19\": 'Vfr',\n\t      \"\\uD835\\uDD4D\": 'Vopf',\n\t      \"\\uD835\\uDCB1\": 'Vscr',\n\t      \"\\uD835\\uDD68\": 'wopf',\n\t      \"\\uD835\\uDCCC\": 'wscr',\n\t      \"\\uD835\\uDD34\": 'wfr',\n\t      \"\\uD835\\uDCB2\": 'Wscr',\n\t      \"\\uD835\\uDD4E\": 'Wopf',\n\t      \"\\uD835\\uDD1A\": 'Wfr',\n\t      \"\\u0175\": 'wcirc',\n\t      \"\\u0174\": 'Wcirc',\n\t      \"\\uD835\\uDD35\": 'xfr',\n\t      \"\\uD835\\uDCCD\": 'xscr',\n\t      \"\\uD835\\uDD69\": 'xopf',\n\t      \"\\uD835\\uDD4F\": 'Xopf',\n\t      \"\\uD835\\uDD1B\": 'Xfr',\n\t      \"\\uD835\\uDCB3\": 'Xscr',\n\t      \"\\uD835\\uDD36\": 'yfr',\n\t      \"\\uD835\\uDCCE\": 'yscr',\n\t      \"\\uD835\\uDD6A\": 'yopf',\n\t      \"\\uD835\\uDCB4\": 'Yscr',\n\t      \"\\uD835\\uDD1C\": 'Yfr',\n\t      \"\\uD835\\uDD50\": 'Yopf',\n\t      '\\xFD': 'yacute',\n\t      '\\xDD': 'Yacute',\n\t      \"\\u0177\": 'ycirc',\n\t      \"\\u0176\": 'Ycirc',\n\t      '\\xFF': 'yuml',\n\t      \"\\u0178\": 'Yuml',\n\t      \"\\uD835\\uDCCF\": 'zscr',\n\t      \"\\uD835\\uDD37\": 'zfr',\n\t      \"\\uD835\\uDD6B\": 'zopf',\n\t      \"\\u2128\": 'Zfr',\n\t      \"\\u2124\": 'Zopf',\n\t      \"\\uD835\\uDCB5\": 'Zscr',\n\t      \"\\u017A\": 'zacute',\n\t      \"\\u0179\": 'Zacute',\n\t      \"\\u017E\": 'zcaron',\n\t      \"\\u017D\": 'Zcaron',\n\t      \"\\u017C\": 'zdot',\n\t      \"\\u017B\": 'Zdot',\n\t      \"\\u01B5\": 'imped',\n\t      '\\xFE': 'thorn',\n\t      '\\xDE': 'THORN',\n\t      \"\\u0149\": 'napos',\n\t      \"\\u03B1\": 'alpha',\n\t      \"\\u0391\": 'Alpha',\n\t      \"\\u03B2\": 'beta',\n\t      \"\\u0392\": 'Beta',\n\t      \"\\u03B3\": 'gamma',\n\t      \"\\u0393\": 'Gamma',\n\t      \"\\u03B4\": 'delta',\n\t      \"\\u0394\": 'Delta',\n\t      \"\\u03B5\": 'epsi',\n\t      \"\\u03F5\": 'epsiv',\n\t      \"\\u0395\": 'Epsilon',\n\t      \"\\u03DD\": 'gammad',\n\t      \"\\u03DC\": 'Gammad',\n\t      \"\\u03B6\": 'zeta',\n\t      \"\\u0396\": 'Zeta',\n\t      \"\\u03B7\": 'eta',\n\t      \"\\u0397\": 'Eta',\n\t      \"\\u03B8\": 'theta',\n\t      \"\\u03D1\": 'thetav',\n\t      \"\\u0398\": 'Theta',\n\t      \"\\u03B9\": 'iota',\n\t      \"\\u0399\": 'Iota',\n\t      \"\\u03BA\": 'kappa',\n\t      \"\\u03F0\": 'kappav',\n\t      \"\\u039A\": 'Kappa',\n\t      \"\\u03BB\": 'lambda',\n\t      \"\\u039B\": 'Lambda',\n\t      \"\\u03BC\": 'mu',\n\t      '\\xB5': 'micro',\n\t      \"\\u039C\": 'Mu',\n\t      \"\\u03BD\": 'nu',\n\t      \"\\u039D\": 'Nu',\n\t      \"\\u03BE\": 'xi',\n\t      \"\\u039E\": 'Xi',\n\t      \"\\u03BF\": 'omicron',\n\t      \"\\u039F\": 'Omicron',\n\t      \"\\u03C0\": 'pi',\n\t      \"\\u03D6\": 'piv',\n\t      \"\\u03A0\": 'Pi',\n\t      \"\\u03C1\": 'rho',\n\t      \"\\u03F1\": 'rhov',\n\t      \"\\u03A1\": 'Rho',\n\t      \"\\u03C3\": 'sigma',\n\t      \"\\u03A3\": 'Sigma',\n\t      \"\\u03C2\": 'sigmaf',\n\t      \"\\u03C4\": 'tau',\n\t      \"\\u03A4\": 'Tau',\n\t      \"\\u03C5\": 'upsi',\n\t      \"\\u03A5\": 'Upsilon',\n\t      \"\\u03D2\": 'Upsi',\n\t      \"\\u03C6\": 'phi',\n\t      \"\\u03D5\": 'phiv',\n\t      \"\\u03A6\": 'Phi',\n\t      \"\\u03C7\": 'chi',\n\t      \"\\u03A7\": 'Chi',\n\t      \"\\u03C8\": 'psi',\n\t      \"\\u03A8\": 'Psi',\n\t      \"\\u03C9\": 'omega',\n\t      \"\\u03A9\": 'ohm',\n\t      \"\\u0430\": 'acy',\n\t      \"\\u0410\": 'Acy',\n\t      \"\\u0431\": 'bcy',\n\t      \"\\u0411\": 'Bcy',\n\t      \"\\u0432\": 'vcy',\n\t      \"\\u0412\": 'Vcy',\n\t      \"\\u0433\": 'gcy',\n\t      \"\\u0413\": 'Gcy',\n\t      \"\\u0453\": 'gjcy',\n\t      \"\\u0403\": 'GJcy',\n\t      \"\\u0434\": 'dcy',\n\t      \"\\u0414\": 'Dcy',\n\t      \"\\u0452\": 'djcy',\n\t      \"\\u0402\": 'DJcy',\n\t      \"\\u0435\": 'iecy',\n\t      \"\\u0415\": 'IEcy',\n\t      \"\\u0451\": 'iocy',\n\t      \"\\u0401\": 'IOcy',\n\t      \"\\u0454\": 'jukcy',\n\t      \"\\u0404\": 'Jukcy',\n\t      \"\\u0436\": 'zhcy',\n\t      \"\\u0416\": 'ZHcy',\n\t      \"\\u0437\": 'zcy',\n\t      \"\\u0417\": 'Zcy',\n\t      \"\\u0455\": 'dscy',\n\t      \"\\u0405\": 'DScy',\n\t      \"\\u0438\": 'icy',\n\t      \"\\u0418\": 'Icy',\n\t      \"\\u0456\": 'iukcy',\n\t      \"\\u0406\": 'Iukcy',\n\t      \"\\u0457\": 'yicy',\n\t      \"\\u0407\": 'YIcy',\n\t      \"\\u0439\": 'jcy',\n\t      \"\\u0419\": 'Jcy',\n\t      \"\\u0458\": 'jsercy',\n\t      \"\\u0408\": 'Jsercy',\n\t      \"\\u043A\": 'kcy',\n\t      \"\\u041A\": 'Kcy',\n\t      \"\\u045C\": 'kjcy',\n\t      \"\\u040C\": 'KJcy',\n\t      \"\\u043B\": 'lcy',\n\t      \"\\u041B\": 'Lcy',\n\t      \"\\u0459\": 'ljcy',\n\t      \"\\u0409\": 'LJcy',\n\t      \"\\u043C\": 'mcy',\n\t      \"\\u041C\": 'Mcy',\n\t      \"\\u043D\": 'ncy',\n\t      \"\\u041D\": 'Ncy',\n\t      \"\\u045A\": 'njcy',\n\t      \"\\u040A\": 'NJcy',\n\t      \"\\u043E\": 'ocy',\n\t      \"\\u041E\": 'Ocy',\n\t      \"\\u043F\": 'pcy',\n\t      \"\\u041F\": 'Pcy',\n\t      \"\\u0440\": 'rcy',\n\t      \"\\u0420\": 'Rcy',\n\t      \"\\u0441\": 'scy',\n\t      \"\\u0421\": 'Scy',\n\t      \"\\u0442\": 'tcy',\n\t      \"\\u0422\": 'Tcy',\n\t      \"\\u045B\": 'tshcy',\n\t      \"\\u040B\": 'TSHcy',\n\t      \"\\u0443\": 'ucy',\n\t      \"\\u0423\": 'Ucy',\n\t      \"\\u045E\": 'ubrcy',\n\t      \"\\u040E\": 'Ubrcy',\n\t      \"\\u0444\": 'fcy',\n\t      \"\\u0424\": 'Fcy',\n\t      \"\\u0445\": 'khcy',\n\t      \"\\u0425\": 'KHcy',\n\t      \"\\u0446\": 'tscy',\n\t      \"\\u0426\": 'TScy',\n\t      \"\\u0447\": 'chcy',\n\t      \"\\u0427\": 'CHcy',\n\t      \"\\u045F\": 'dzcy',\n\t      \"\\u040F\": 'DZcy',\n\t      \"\\u0448\": 'shcy',\n\t      \"\\u0428\": 'SHcy',\n\t      \"\\u0449\": 'shchcy',\n\t      \"\\u0429\": 'SHCHcy',\n\t      \"\\u044A\": 'hardcy',\n\t      \"\\u042A\": 'HARDcy',\n\t      \"\\u044B\": 'ycy',\n\t      \"\\u042B\": 'Ycy',\n\t      \"\\u044C\": 'softcy',\n\t      \"\\u042C\": 'SOFTcy',\n\t      \"\\u044D\": 'ecy',\n\t      \"\\u042D\": 'Ecy',\n\t      \"\\u044E\": 'yucy',\n\t      \"\\u042E\": 'YUcy',\n\t      \"\\u044F\": 'yacy',\n\t      \"\\u042F\": 'YAcy',\n\t      \"\\u2135\": 'aleph',\n\t      \"\\u2136\": 'beth',\n\t      \"\\u2137\": 'gimel',\n\t      \"\\u2138\": 'daleth'\n\t    };\n\t    var regexEscape = /[\"&'<>`]/g;\n\t    var escapeMap = {\n\t      '\"': '&quot;',\n\t      '&': '&amp;',\n\t      '\\'': '&#x27;',\n\t      '<': '&lt;',\n\t      // See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t      // following is not strictly necessary unless it’s part of a tag or an\n\t      // unquoted attribute value. We’re only escaping it to support those\n\t      // situations, and for XML support.\n\t      '>': '&gt;',\n\t      // In Internet Explorer ≤ 8, the backtick character can be used\n\t      // to break out of (un)quoted attribute values or HTML comments.\n\t      // See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t      // http://html5sec.org/#133.\n\t      '`': '&#x60;'\n\t    };\n\t    var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\t    var regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\t    var regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\t    var decodeMap = {\n\t      'aacute': '\\xE1',\n\t      'Aacute': '\\xC1',\n\t      'abreve': \"\\u0103\",\n\t      'Abreve': \"\\u0102\",\n\t      'ac': \"\\u223E\",\n\t      'acd': \"\\u223F\",\n\t      'acE': \"\\u223E\\u0333\",\n\t      'acirc': '\\xE2',\n\t      'Acirc': '\\xC2',\n\t      'acute': '\\xB4',\n\t      'acy': \"\\u0430\",\n\t      'Acy': \"\\u0410\",\n\t      'aelig': '\\xE6',\n\t      'AElig': '\\xC6',\n\t      'af': \"\\u2061\",\n\t      'afr': \"\\uD835\\uDD1E\",\n\t      'Afr': \"\\uD835\\uDD04\",\n\t      'agrave': '\\xE0',\n\t      'Agrave': '\\xC0',\n\t      'alefsym': \"\\u2135\",\n\t      'aleph': \"\\u2135\",\n\t      'alpha': \"\\u03B1\",\n\t      'Alpha': \"\\u0391\",\n\t      'amacr': \"\\u0101\",\n\t      'Amacr': \"\\u0100\",\n\t      'amalg': \"\\u2A3F\",\n\t      'amp': '&',\n\t      'AMP': '&',\n\t      'and': \"\\u2227\",\n\t      'And': \"\\u2A53\",\n\t      'andand': \"\\u2A55\",\n\t      'andd': \"\\u2A5C\",\n\t      'andslope': \"\\u2A58\",\n\t      'andv': \"\\u2A5A\",\n\t      'ang': \"\\u2220\",\n\t      'ange': \"\\u29A4\",\n\t      'angle': \"\\u2220\",\n\t      'angmsd': \"\\u2221\",\n\t      'angmsdaa': \"\\u29A8\",\n\t      'angmsdab': \"\\u29A9\",\n\t      'angmsdac': \"\\u29AA\",\n\t      'angmsdad': \"\\u29AB\",\n\t      'angmsdae': \"\\u29AC\",\n\t      'angmsdaf': \"\\u29AD\",\n\t      'angmsdag': \"\\u29AE\",\n\t      'angmsdah': \"\\u29AF\",\n\t      'angrt': \"\\u221F\",\n\t      'angrtvb': \"\\u22BE\",\n\t      'angrtvbd': \"\\u299D\",\n\t      'angsph': \"\\u2222\",\n\t      'angst': '\\xC5',\n\t      'angzarr': \"\\u237C\",\n\t      'aogon': \"\\u0105\",\n\t      'Aogon': \"\\u0104\",\n\t      'aopf': \"\\uD835\\uDD52\",\n\t      'Aopf': \"\\uD835\\uDD38\",\n\t      'ap': \"\\u2248\",\n\t      'apacir': \"\\u2A6F\",\n\t      'ape': \"\\u224A\",\n\t      'apE': \"\\u2A70\",\n\t      'apid': \"\\u224B\",\n\t      'apos': '\\'',\n\t      'ApplyFunction': \"\\u2061\",\n\t      'approx': \"\\u2248\",\n\t      'approxeq': \"\\u224A\",\n\t      'aring': '\\xE5',\n\t      'Aring': '\\xC5',\n\t      'ascr': \"\\uD835\\uDCB6\",\n\t      'Ascr': \"\\uD835\\uDC9C\",\n\t      'Assign': \"\\u2254\",\n\t      'ast': '*',\n\t      'asymp': \"\\u2248\",\n\t      'asympeq': \"\\u224D\",\n\t      'atilde': '\\xE3',\n\t      'Atilde': '\\xC3',\n\t      'auml': '\\xE4',\n\t      'Auml': '\\xC4',\n\t      'awconint': \"\\u2233\",\n\t      'awint': \"\\u2A11\",\n\t      'backcong': \"\\u224C\",\n\t      'backepsilon': \"\\u03F6\",\n\t      'backprime': \"\\u2035\",\n\t      'backsim': \"\\u223D\",\n\t      'backsimeq': \"\\u22CD\",\n\t      'Backslash': \"\\u2216\",\n\t      'Barv': \"\\u2AE7\",\n\t      'barvee': \"\\u22BD\",\n\t      'barwed': \"\\u2305\",\n\t      'Barwed': \"\\u2306\",\n\t      'barwedge': \"\\u2305\",\n\t      'bbrk': \"\\u23B5\",\n\t      'bbrktbrk': \"\\u23B6\",\n\t      'bcong': \"\\u224C\",\n\t      'bcy': \"\\u0431\",\n\t      'Bcy': \"\\u0411\",\n\t      'bdquo': \"\\u201E\",\n\t      'becaus': \"\\u2235\",\n\t      'because': \"\\u2235\",\n\t      'Because': \"\\u2235\",\n\t      'bemptyv': \"\\u29B0\",\n\t      'bepsi': \"\\u03F6\",\n\t      'bernou': \"\\u212C\",\n\t      'Bernoullis': \"\\u212C\",\n\t      'beta': \"\\u03B2\",\n\t      'Beta': \"\\u0392\",\n\t      'beth': \"\\u2136\",\n\t      'between': \"\\u226C\",\n\t      'bfr': \"\\uD835\\uDD1F\",\n\t      'Bfr': \"\\uD835\\uDD05\",\n\t      'bigcap': \"\\u22C2\",\n\t      'bigcirc': \"\\u25EF\",\n\t      'bigcup': \"\\u22C3\",\n\t      'bigodot': \"\\u2A00\",\n\t      'bigoplus': \"\\u2A01\",\n\t      'bigotimes': \"\\u2A02\",\n\t      'bigsqcup': \"\\u2A06\",\n\t      'bigstar': \"\\u2605\",\n\t      'bigtriangledown': \"\\u25BD\",\n\t      'bigtriangleup': \"\\u25B3\",\n\t      'biguplus': \"\\u2A04\",\n\t      'bigvee': \"\\u22C1\",\n\t      'bigwedge': \"\\u22C0\",\n\t      'bkarow': \"\\u290D\",\n\t      'blacklozenge': \"\\u29EB\",\n\t      'blacksquare': \"\\u25AA\",\n\t      'blacktriangle': \"\\u25B4\",\n\t      'blacktriangledown': \"\\u25BE\",\n\t      'blacktriangleleft': \"\\u25C2\",\n\t      'blacktriangleright': \"\\u25B8\",\n\t      'blank': \"\\u2423\",\n\t      'blk12': \"\\u2592\",\n\t      'blk14': \"\\u2591\",\n\t      'blk34': \"\\u2593\",\n\t      'block': \"\\u2588\",\n\t      'bne': \"=\\u20E5\",\n\t      'bnequiv': \"\\u2261\\u20E5\",\n\t      'bnot': \"\\u2310\",\n\t      'bNot': \"\\u2AED\",\n\t      'bopf': \"\\uD835\\uDD53\",\n\t      'Bopf': \"\\uD835\\uDD39\",\n\t      'bot': \"\\u22A5\",\n\t      'bottom': \"\\u22A5\",\n\t      'bowtie': \"\\u22C8\",\n\t      'boxbox': \"\\u29C9\",\n\t      'boxdl': \"\\u2510\",\n\t      'boxdL': \"\\u2555\",\n\t      'boxDl': \"\\u2556\",\n\t      'boxDL': \"\\u2557\",\n\t      'boxdr': \"\\u250C\",\n\t      'boxdR': \"\\u2552\",\n\t      'boxDr': \"\\u2553\",\n\t      'boxDR': \"\\u2554\",\n\t      'boxh': \"\\u2500\",\n\t      'boxH': \"\\u2550\",\n\t      'boxhd': \"\\u252C\",\n\t      'boxhD': \"\\u2565\",\n\t      'boxHd': \"\\u2564\",\n\t      'boxHD': \"\\u2566\",\n\t      'boxhu': \"\\u2534\",\n\t      'boxhU': \"\\u2568\",\n\t      'boxHu': \"\\u2567\",\n\t      'boxHU': \"\\u2569\",\n\t      'boxminus': \"\\u229F\",\n\t      'boxplus': \"\\u229E\",\n\t      'boxtimes': \"\\u22A0\",\n\t      'boxul': \"\\u2518\",\n\t      'boxuL': \"\\u255B\",\n\t      'boxUl': \"\\u255C\",\n\t      'boxUL': \"\\u255D\",\n\t      'boxur': \"\\u2514\",\n\t      'boxuR': \"\\u2558\",\n\t      'boxUr': \"\\u2559\",\n\t      'boxUR': \"\\u255A\",\n\t      'boxv': \"\\u2502\",\n\t      'boxV': \"\\u2551\",\n\t      'boxvh': \"\\u253C\",\n\t      'boxvH': \"\\u256A\",\n\t      'boxVh': \"\\u256B\",\n\t      'boxVH': \"\\u256C\",\n\t      'boxvl': \"\\u2524\",\n\t      'boxvL': \"\\u2561\",\n\t      'boxVl': \"\\u2562\",\n\t      'boxVL': \"\\u2563\",\n\t      'boxvr': \"\\u251C\",\n\t      'boxvR': \"\\u255E\",\n\t      'boxVr': \"\\u255F\",\n\t      'boxVR': \"\\u2560\",\n\t      'bprime': \"\\u2035\",\n\t      'breve': \"\\u02D8\",\n\t      'Breve': \"\\u02D8\",\n\t      'brvbar': '\\xA6',\n\t      'bscr': \"\\uD835\\uDCB7\",\n\t      'Bscr': \"\\u212C\",\n\t      'bsemi': \"\\u204F\",\n\t      'bsim': \"\\u223D\",\n\t      'bsime': \"\\u22CD\",\n\t      'bsol': '\\\\',\n\t      'bsolb': \"\\u29C5\",\n\t      'bsolhsub': \"\\u27C8\",\n\t      'bull': \"\\u2022\",\n\t      'bullet': \"\\u2022\",\n\t      'bump': \"\\u224E\",\n\t      'bumpe': \"\\u224F\",\n\t      'bumpE': \"\\u2AAE\",\n\t      'bumpeq': \"\\u224F\",\n\t      'Bumpeq': \"\\u224E\",\n\t      'cacute': \"\\u0107\",\n\t      'Cacute': \"\\u0106\",\n\t      'cap': \"\\u2229\",\n\t      'Cap': \"\\u22D2\",\n\t      'capand': \"\\u2A44\",\n\t      'capbrcup': \"\\u2A49\",\n\t      'capcap': \"\\u2A4B\",\n\t      'capcup': \"\\u2A47\",\n\t      'capdot': \"\\u2A40\",\n\t      'CapitalDifferentialD': \"\\u2145\",\n\t      'caps': \"\\u2229\\uFE00\",\n\t      'caret': \"\\u2041\",\n\t      'caron': \"\\u02C7\",\n\t      'Cayleys': \"\\u212D\",\n\t      'ccaps': \"\\u2A4D\",\n\t      'ccaron': \"\\u010D\",\n\t      'Ccaron': \"\\u010C\",\n\t      'ccedil': '\\xE7',\n\t      'Ccedil': '\\xC7',\n\t      'ccirc': \"\\u0109\",\n\t      'Ccirc': \"\\u0108\",\n\t      'Cconint': \"\\u2230\",\n\t      'ccups': \"\\u2A4C\",\n\t      'ccupssm': \"\\u2A50\",\n\t      'cdot': \"\\u010B\",\n\t      'Cdot': \"\\u010A\",\n\t      'cedil': '\\xB8',\n\t      'Cedilla': '\\xB8',\n\t      'cemptyv': \"\\u29B2\",\n\t      'cent': '\\xA2',\n\t      'centerdot': '\\xB7',\n\t      'CenterDot': '\\xB7',\n\t      'cfr': \"\\uD835\\uDD20\",\n\t      'Cfr': \"\\u212D\",\n\t      'chcy': \"\\u0447\",\n\t      'CHcy': \"\\u0427\",\n\t      'check': \"\\u2713\",\n\t      'checkmark': \"\\u2713\",\n\t      'chi': \"\\u03C7\",\n\t      'Chi': \"\\u03A7\",\n\t      'cir': \"\\u25CB\",\n\t      'circ': \"\\u02C6\",\n\t      'circeq': \"\\u2257\",\n\t      'circlearrowleft': \"\\u21BA\",\n\t      'circlearrowright': \"\\u21BB\",\n\t      'circledast': \"\\u229B\",\n\t      'circledcirc': \"\\u229A\",\n\t      'circleddash': \"\\u229D\",\n\t      'CircleDot': \"\\u2299\",\n\t      'circledR': '\\xAE',\n\t      'circledS': \"\\u24C8\",\n\t      'CircleMinus': \"\\u2296\",\n\t      'CirclePlus': \"\\u2295\",\n\t      'CircleTimes': \"\\u2297\",\n\t      'cire': \"\\u2257\",\n\t      'cirE': \"\\u29C3\",\n\t      'cirfnint': \"\\u2A10\",\n\t      'cirmid': \"\\u2AEF\",\n\t      'cirscir': \"\\u29C2\",\n\t      'ClockwiseContourIntegral': \"\\u2232\",\n\t      'CloseCurlyDoubleQuote': \"\\u201D\",\n\t      'CloseCurlyQuote': \"\\u2019\",\n\t      'clubs': \"\\u2663\",\n\t      'clubsuit': \"\\u2663\",\n\t      'colon': ':',\n\t      'Colon': \"\\u2237\",\n\t      'colone': \"\\u2254\",\n\t      'Colone': \"\\u2A74\",\n\t      'coloneq': \"\\u2254\",\n\t      'comma': ',',\n\t      'commat': '@',\n\t      'comp': \"\\u2201\",\n\t      'compfn': \"\\u2218\",\n\t      'complement': \"\\u2201\",\n\t      'complexes': \"\\u2102\",\n\t      'cong': \"\\u2245\",\n\t      'congdot': \"\\u2A6D\",\n\t      'Congruent': \"\\u2261\",\n\t      'conint': \"\\u222E\",\n\t      'Conint': \"\\u222F\",\n\t      'ContourIntegral': \"\\u222E\",\n\t      'copf': \"\\uD835\\uDD54\",\n\t      'Copf': \"\\u2102\",\n\t      'coprod': \"\\u2210\",\n\t      'Coproduct': \"\\u2210\",\n\t      'copy': '\\xA9',\n\t      'COPY': '\\xA9',\n\t      'copysr': \"\\u2117\",\n\t      'CounterClockwiseContourIntegral': \"\\u2233\",\n\t      'crarr': \"\\u21B5\",\n\t      'cross': \"\\u2717\",\n\t      'Cross': \"\\u2A2F\",\n\t      'cscr': \"\\uD835\\uDCB8\",\n\t      'Cscr': \"\\uD835\\uDC9E\",\n\t      'csub': \"\\u2ACF\",\n\t      'csube': \"\\u2AD1\",\n\t      'csup': \"\\u2AD0\",\n\t      'csupe': \"\\u2AD2\",\n\t      'ctdot': \"\\u22EF\",\n\t      'cudarrl': \"\\u2938\",\n\t      'cudarrr': \"\\u2935\",\n\t      'cuepr': \"\\u22DE\",\n\t      'cuesc': \"\\u22DF\",\n\t      'cularr': \"\\u21B6\",\n\t      'cularrp': \"\\u293D\",\n\t      'cup': \"\\u222A\",\n\t      'Cup': \"\\u22D3\",\n\t      'cupbrcap': \"\\u2A48\",\n\t      'cupcap': \"\\u2A46\",\n\t      'CupCap': \"\\u224D\",\n\t      'cupcup': \"\\u2A4A\",\n\t      'cupdot': \"\\u228D\",\n\t      'cupor': \"\\u2A45\",\n\t      'cups': \"\\u222A\\uFE00\",\n\t      'curarr': \"\\u21B7\",\n\t      'curarrm': \"\\u293C\",\n\t      'curlyeqprec': \"\\u22DE\",\n\t      'curlyeqsucc': \"\\u22DF\",\n\t      'curlyvee': \"\\u22CE\",\n\t      'curlywedge': \"\\u22CF\",\n\t      'curren': '\\xA4',\n\t      'curvearrowleft': \"\\u21B6\",\n\t      'curvearrowright': \"\\u21B7\",\n\t      'cuvee': \"\\u22CE\",\n\t      'cuwed': \"\\u22CF\",\n\t      'cwconint': \"\\u2232\",\n\t      'cwint': \"\\u2231\",\n\t      'cylcty': \"\\u232D\",\n\t      'dagger': \"\\u2020\",\n\t      'Dagger': \"\\u2021\",\n\t      'daleth': \"\\u2138\",\n\t      'darr': \"\\u2193\",\n\t      'dArr': \"\\u21D3\",\n\t      'Darr': \"\\u21A1\",\n\t      'dash': \"\\u2010\",\n\t      'dashv': \"\\u22A3\",\n\t      'Dashv': \"\\u2AE4\",\n\t      'dbkarow': \"\\u290F\",\n\t      'dblac': \"\\u02DD\",\n\t      'dcaron': \"\\u010F\",\n\t      'Dcaron': \"\\u010E\",\n\t      'dcy': \"\\u0434\",\n\t      'Dcy': \"\\u0414\",\n\t      'dd': \"\\u2146\",\n\t      'DD': \"\\u2145\",\n\t      'ddagger': \"\\u2021\",\n\t      'ddarr': \"\\u21CA\",\n\t      'DDotrahd': \"\\u2911\",\n\t      'ddotseq': \"\\u2A77\",\n\t      'deg': '\\xB0',\n\t      'Del': \"\\u2207\",\n\t      'delta': \"\\u03B4\",\n\t      'Delta': \"\\u0394\",\n\t      'demptyv': \"\\u29B1\",\n\t      'dfisht': \"\\u297F\",\n\t      'dfr': \"\\uD835\\uDD21\",\n\t      'Dfr': \"\\uD835\\uDD07\",\n\t      'dHar': \"\\u2965\",\n\t      'dharl': \"\\u21C3\",\n\t      'dharr': \"\\u21C2\",\n\t      'DiacriticalAcute': '\\xB4',\n\t      'DiacriticalDot': \"\\u02D9\",\n\t      'DiacriticalDoubleAcute': \"\\u02DD\",\n\t      'DiacriticalGrave': '`',\n\t      'DiacriticalTilde': \"\\u02DC\",\n\t      'diam': \"\\u22C4\",\n\t      'diamond': \"\\u22C4\",\n\t      'Diamond': \"\\u22C4\",\n\t      'diamondsuit': \"\\u2666\",\n\t      'diams': \"\\u2666\",\n\t      'die': '\\xA8',\n\t      'DifferentialD': \"\\u2146\",\n\t      'digamma': \"\\u03DD\",\n\t      'disin': \"\\u22F2\",\n\t      'div': '\\xF7',\n\t      'divide': '\\xF7',\n\t      'divideontimes': \"\\u22C7\",\n\t      'divonx': \"\\u22C7\",\n\t      'djcy': \"\\u0452\",\n\t      'DJcy': \"\\u0402\",\n\t      'dlcorn': \"\\u231E\",\n\t      'dlcrop': \"\\u230D\",\n\t      'dollar': '$',\n\t      'dopf': \"\\uD835\\uDD55\",\n\t      'Dopf': \"\\uD835\\uDD3B\",\n\t      'dot': \"\\u02D9\",\n\t      'Dot': '\\xA8',\n\t      'DotDot': \"\\u20DC\",\n\t      'doteq': \"\\u2250\",\n\t      'doteqdot': \"\\u2251\",\n\t      'DotEqual': \"\\u2250\",\n\t      'dotminus': \"\\u2238\",\n\t      'dotplus': \"\\u2214\",\n\t      'dotsquare': \"\\u22A1\",\n\t      'doublebarwedge': \"\\u2306\",\n\t      'DoubleContourIntegral': \"\\u222F\",\n\t      'DoubleDot': '\\xA8',\n\t      'DoubleDownArrow': \"\\u21D3\",\n\t      'DoubleLeftArrow': \"\\u21D0\",\n\t      'DoubleLeftRightArrow': \"\\u21D4\",\n\t      'DoubleLeftTee': \"\\u2AE4\",\n\t      'DoubleLongLeftArrow': \"\\u27F8\",\n\t      'DoubleLongLeftRightArrow': \"\\u27FA\",\n\t      'DoubleLongRightArrow': \"\\u27F9\",\n\t      'DoubleRightArrow': \"\\u21D2\",\n\t      'DoubleRightTee': \"\\u22A8\",\n\t      'DoubleUpArrow': \"\\u21D1\",\n\t      'DoubleUpDownArrow': \"\\u21D5\",\n\t      'DoubleVerticalBar': \"\\u2225\",\n\t      'downarrow': \"\\u2193\",\n\t      'Downarrow': \"\\u21D3\",\n\t      'DownArrow': \"\\u2193\",\n\t      'DownArrowBar': \"\\u2913\",\n\t      'DownArrowUpArrow': \"\\u21F5\",\n\t      'DownBreve': \"\\u0311\",\n\t      'downdownarrows': \"\\u21CA\",\n\t      'downharpoonleft': \"\\u21C3\",\n\t      'downharpoonright': \"\\u21C2\",\n\t      'DownLeftRightVector': \"\\u2950\",\n\t      'DownLeftTeeVector': \"\\u295E\",\n\t      'DownLeftVector': \"\\u21BD\",\n\t      'DownLeftVectorBar': \"\\u2956\",\n\t      'DownRightTeeVector': \"\\u295F\",\n\t      'DownRightVector': \"\\u21C1\",\n\t      'DownRightVectorBar': \"\\u2957\",\n\t      'DownTee': \"\\u22A4\",\n\t      'DownTeeArrow': \"\\u21A7\",\n\t      'drbkarow': \"\\u2910\",\n\t      'drcorn': \"\\u231F\",\n\t      'drcrop': \"\\u230C\",\n\t      'dscr': \"\\uD835\\uDCB9\",\n\t      'Dscr': \"\\uD835\\uDC9F\",\n\t      'dscy': \"\\u0455\",\n\t      'DScy': \"\\u0405\",\n\t      'dsol': \"\\u29F6\",\n\t      'dstrok': \"\\u0111\",\n\t      'Dstrok': \"\\u0110\",\n\t      'dtdot': \"\\u22F1\",\n\t      'dtri': \"\\u25BF\",\n\t      'dtrif': \"\\u25BE\",\n\t      'duarr': \"\\u21F5\",\n\t      'duhar': \"\\u296F\",\n\t      'dwangle': \"\\u29A6\",\n\t      'dzcy': \"\\u045F\",\n\t      'DZcy': \"\\u040F\",\n\t      'dzigrarr': \"\\u27FF\",\n\t      'eacute': '\\xE9',\n\t      'Eacute': '\\xC9',\n\t      'easter': \"\\u2A6E\",\n\t      'ecaron': \"\\u011B\",\n\t      'Ecaron': \"\\u011A\",\n\t      'ecir': \"\\u2256\",\n\t      'ecirc': '\\xEA',\n\t      'Ecirc': '\\xCA',\n\t      'ecolon': \"\\u2255\",\n\t      'ecy': \"\\u044D\",\n\t      'Ecy': \"\\u042D\",\n\t      'eDDot': \"\\u2A77\",\n\t      'edot': \"\\u0117\",\n\t      'eDot': \"\\u2251\",\n\t      'Edot': \"\\u0116\",\n\t      'ee': \"\\u2147\",\n\t      'efDot': \"\\u2252\",\n\t      'efr': \"\\uD835\\uDD22\",\n\t      'Efr': \"\\uD835\\uDD08\",\n\t      'eg': \"\\u2A9A\",\n\t      'egrave': '\\xE8',\n\t      'Egrave': '\\xC8',\n\t      'egs': \"\\u2A96\",\n\t      'egsdot': \"\\u2A98\",\n\t      'el': \"\\u2A99\",\n\t      'Element': \"\\u2208\",\n\t      'elinters': \"\\u23E7\",\n\t      'ell': \"\\u2113\",\n\t      'els': \"\\u2A95\",\n\t      'elsdot': \"\\u2A97\",\n\t      'emacr': \"\\u0113\",\n\t      'Emacr': \"\\u0112\",\n\t      'empty': \"\\u2205\",\n\t      'emptyset': \"\\u2205\",\n\t      'EmptySmallSquare': \"\\u25FB\",\n\t      'emptyv': \"\\u2205\",\n\t      'EmptyVerySmallSquare': \"\\u25AB\",\n\t      'emsp': \"\\u2003\",\n\t      'emsp13': \"\\u2004\",\n\t      'emsp14': \"\\u2005\",\n\t      'eng': \"\\u014B\",\n\t      'ENG': \"\\u014A\",\n\t      'ensp': \"\\u2002\",\n\t      'eogon': \"\\u0119\",\n\t      'Eogon': \"\\u0118\",\n\t      'eopf': \"\\uD835\\uDD56\",\n\t      'Eopf': \"\\uD835\\uDD3C\",\n\t      'epar': \"\\u22D5\",\n\t      'eparsl': \"\\u29E3\",\n\t      'eplus': \"\\u2A71\",\n\t      'epsi': \"\\u03B5\",\n\t      'epsilon': \"\\u03B5\",\n\t      'Epsilon': \"\\u0395\",\n\t      'epsiv': \"\\u03F5\",\n\t      'eqcirc': \"\\u2256\",\n\t      'eqcolon': \"\\u2255\",\n\t      'eqsim': \"\\u2242\",\n\t      'eqslantgtr': \"\\u2A96\",\n\t      'eqslantless': \"\\u2A95\",\n\t      'Equal': \"\\u2A75\",\n\t      'equals': '=',\n\t      'EqualTilde': \"\\u2242\",\n\t      'equest': \"\\u225F\",\n\t      'Equilibrium': \"\\u21CC\",\n\t      'equiv': \"\\u2261\",\n\t      'equivDD': \"\\u2A78\",\n\t      'eqvparsl': \"\\u29E5\",\n\t      'erarr': \"\\u2971\",\n\t      'erDot': \"\\u2253\",\n\t      'escr': \"\\u212F\",\n\t      'Escr': \"\\u2130\",\n\t      'esdot': \"\\u2250\",\n\t      'esim': \"\\u2242\",\n\t      'Esim': \"\\u2A73\",\n\t      'eta': \"\\u03B7\",\n\t      'Eta': \"\\u0397\",\n\t      'eth': '\\xF0',\n\t      'ETH': '\\xD0',\n\t      'euml': '\\xEB',\n\t      'Euml': '\\xCB',\n\t      'euro': \"\\u20AC\",\n\t      'excl': '!',\n\t      'exist': \"\\u2203\",\n\t      'Exists': \"\\u2203\",\n\t      'expectation': \"\\u2130\",\n\t      'exponentiale': \"\\u2147\",\n\t      'ExponentialE': \"\\u2147\",\n\t      'fallingdotseq': \"\\u2252\",\n\t      'fcy': \"\\u0444\",\n\t      'Fcy': \"\\u0424\",\n\t      'female': \"\\u2640\",\n\t      'ffilig': \"\\uFB03\",\n\t      'fflig': \"\\uFB00\",\n\t      'ffllig': \"\\uFB04\",\n\t      'ffr': \"\\uD835\\uDD23\",\n\t      'Ffr': \"\\uD835\\uDD09\",\n\t      'filig': \"\\uFB01\",\n\t      'FilledSmallSquare': \"\\u25FC\",\n\t      'FilledVerySmallSquare': \"\\u25AA\",\n\t      'fjlig': 'fj',\n\t      'flat': \"\\u266D\",\n\t      'fllig': \"\\uFB02\",\n\t      'fltns': \"\\u25B1\",\n\t      'fnof': \"\\u0192\",\n\t      'fopf': \"\\uD835\\uDD57\",\n\t      'Fopf': \"\\uD835\\uDD3D\",\n\t      'forall': \"\\u2200\",\n\t      'ForAll': \"\\u2200\",\n\t      'fork': \"\\u22D4\",\n\t      'forkv': \"\\u2AD9\",\n\t      'Fouriertrf': \"\\u2131\",\n\t      'fpartint': \"\\u2A0D\",\n\t      'frac12': '\\xBD',\n\t      'frac13': \"\\u2153\",\n\t      'frac14': '\\xBC',\n\t      'frac15': \"\\u2155\",\n\t      'frac16': \"\\u2159\",\n\t      'frac18': \"\\u215B\",\n\t      'frac23': \"\\u2154\",\n\t      'frac25': \"\\u2156\",\n\t      'frac34': '\\xBE',\n\t      'frac35': \"\\u2157\",\n\t      'frac38': \"\\u215C\",\n\t      'frac45': \"\\u2158\",\n\t      'frac56': \"\\u215A\",\n\t      'frac58': \"\\u215D\",\n\t      'frac78': \"\\u215E\",\n\t      'frasl': \"\\u2044\",\n\t      'frown': \"\\u2322\",\n\t      'fscr': \"\\uD835\\uDCBB\",\n\t      'Fscr': \"\\u2131\",\n\t      'gacute': \"\\u01F5\",\n\t      'gamma': \"\\u03B3\",\n\t      'Gamma': \"\\u0393\",\n\t      'gammad': \"\\u03DD\",\n\t      'Gammad': \"\\u03DC\",\n\t      'gap': \"\\u2A86\",\n\t      'gbreve': \"\\u011F\",\n\t      'Gbreve': \"\\u011E\",\n\t      'Gcedil': \"\\u0122\",\n\t      'gcirc': \"\\u011D\",\n\t      'Gcirc': \"\\u011C\",\n\t      'gcy': \"\\u0433\",\n\t      'Gcy': \"\\u0413\",\n\t      'gdot': \"\\u0121\",\n\t      'Gdot': \"\\u0120\",\n\t      'ge': \"\\u2265\",\n\t      'gE': \"\\u2267\",\n\t      'gel': \"\\u22DB\",\n\t      'gEl': \"\\u2A8C\",\n\t      'geq': \"\\u2265\",\n\t      'geqq': \"\\u2267\",\n\t      'geqslant': \"\\u2A7E\",\n\t      'ges': \"\\u2A7E\",\n\t      'gescc': \"\\u2AA9\",\n\t      'gesdot': \"\\u2A80\",\n\t      'gesdoto': \"\\u2A82\",\n\t      'gesdotol': \"\\u2A84\",\n\t      'gesl': \"\\u22DB\\uFE00\",\n\t      'gesles': \"\\u2A94\",\n\t      'gfr': \"\\uD835\\uDD24\",\n\t      'Gfr': \"\\uD835\\uDD0A\",\n\t      'gg': \"\\u226B\",\n\t      'Gg': \"\\u22D9\",\n\t      'ggg': \"\\u22D9\",\n\t      'gimel': \"\\u2137\",\n\t      'gjcy': \"\\u0453\",\n\t      'GJcy': \"\\u0403\",\n\t      'gl': \"\\u2277\",\n\t      'gla': \"\\u2AA5\",\n\t      'glE': \"\\u2A92\",\n\t      'glj': \"\\u2AA4\",\n\t      'gnap': \"\\u2A8A\",\n\t      'gnapprox': \"\\u2A8A\",\n\t      'gne': \"\\u2A88\",\n\t      'gnE': \"\\u2269\",\n\t      'gneq': \"\\u2A88\",\n\t      'gneqq': \"\\u2269\",\n\t      'gnsim': \"\\u22E7\",\n\t      'gopf': \"\\uD835\\uDD58\",\n\t      'Gopf': \"\\uD835\\uDD3E\",\n\t      'grave': '`',\n\t      'GreaterEqual': \"\\u2265\",\n\t      'GreaterEqualLess': \"\\u22DB\",\n\t      'GreaterFullEqual': \"\\u2267\",\n\t      'GreaterGreater': \"\\u2AA2\",\n\t      'GreaterLess': \"\\u2277\",\n\t      'GreaterSlantEqual': \"\\u2A7E\",\n\t      'GreaterTilde': \"\\u2273\",\n\t      'gscr': \"\\u210A\",\n\t      'Gscr': \"\\uD835\\uDCA2\",\n\t      'gsim': \"\\u2273\",\n\t      'gsime': \"\\u2A8E\",\n\t      'gsiml': \"\\u2A90\",\n\t      'gt': '>',\n\t      'Gt': \"\\u226B\",\n\t      'GT': '>',\n\t      'gtcc': \"\\u2AA7\",\n\t      'gtcir': \"\\u2A7A\",\n\t      'gtdot': \"\\u22D7\",\n\t      'gtlPar': \"\\u2995\",\n\t      'gtquest': \"\\u2A7C\",\n\t      'gtrapprox': \"\\u2A86\",\n\t      'gtrarr': \"\\u2978\",\n\t      'gtrdot': \"\\u22D7\",\n\t      'gtreqless': \"\\u22DB\",\n\t      'gtreqqless': \"\\u2A8C\",\n\t      'gtrless': \"\\u2277\",\n\t      'gtrsim': \"\\u2273\",\n\t      'gvertneqq': \"\\u2269\\uFE00\",\n\t      'gvnE': \"\\u2269\\uFE00\",\n\t      'Hacek': \"\\u02C7\",\n\t      'hairsp': \"\\u200A\",\n\t      'half': '\\xBD',\n\t      'hamilt': \"\\u210B\",\n\t      'hardcy': \"\\u044A\",\n\t      'HARDcy': \"\\u042A\",\n\t      'harr': \"\\u2194\",\n\t      'hArr': \"\\u21D4\",\n\t      'harrcir': \"\\u2948\",\n\t      'harrw': \"\\u21AD\",\n\t      'Hat': '^',\n\t      'hbar': \"\\u210F\",\n\t      'hcirc': \"\\u0125\",\n\t      'Hcirc': \"\\u0124\",\n\t      'hearts': \"\\u2665\",\n\t      'heartsuit': \"\\u2665\",\n\t      'hellip': \"\\u2026\",\n\t      'hercon': \"\\u22B9\",\n\t      'hfr': \"\\uD835\\uDD25\",\n\t      'Hfr': \"\\u210C\",\n\t      'HilbertSpace': \"\\u210B\",\n\t      'hksearow': \"\\u2925\",\n\t      'hkswarow': \"\\u2926\",\n\t      'hoarr': \"\\u21FF\",\n\t      'homtht': \"\\u223B\",\n\t      'hookleftarrow': \"\\u21A9\",\n\t      'hookrightarrow': \"\\u21AA\",\n\t      'hopf': \"\\uD835\\uDD59\",\n\t      'Hopf': \"\\u210D\",\n\t      'horbar': \"\\u2015\",\n\t      'HorizontalLine': \"\\u2500\",\n\t      'hscr': \"\\uD835\\uDCBD\",\n\t      'Hscr': \"\\u210B\",\n\t      'hslash': \"\\u210F\",\n\t      'hstrok': \"\\u0127\",\n\t      'Hstrok': \"\\u0126\",\n\t      'HumpDownHump': \"\\u224E\",\n\t      'HumpEqual': \"\\u224F\",\n\t      'hybull': \"\\u2043\",\n\t      'hyphen': \"\\u2010\",\n\t      'iacute': '\\xED',\n\t      'Iacute': '\\xCD',\n\t      'ic': \"\\u2063\",\n\t      'icirc': '\\xEE',\n\t      'Icirc': '\\xCE',\n\t      'icy': \"\\u0438\",\n\t      'Icy': \"\\u0418\",\n\t      'Idot': \"\\u0130\",\n\t      'iecy': \"\\u0435\",\n\t      'IEcy': \"\\u0415\",\n\t      'iexcl': '\\xA1',\n\t      'iff': \"\\u21D4\",\n\t      'ifr': \"\\uD835\\uDD26\",\n\t      'Ifr': \"\\u2111\",\n\t      'igrave': '\\xEC',\n\t      'Igrave': '\\xCC',\n\t      'ii': \"\\u2148\",\n\t      'iiiint': \"\\u2A0C\",\n\t      'iiint': \"\\u222D\",\n\t      'iinfin': \"\\u29DC\",\n\t      'iiota': \"\\u2129\",\n\t      'ijlig': \"\\u0133\",\n\t      'IJlig': \"\\u0132\",\n\t      'Im': \"\\u2111\",\n\t      'imacr': \"\\u012B\",\n\t      'Imacr': \"\\u012A\",\n\t      'image': \"\\u2111\",\n\t      'ImaginaryI': \"\\u2148\",\n\t      'imagline': \"\\u2110\",\n\t      'imagpart': \"\\u2111\",\n\t      'imath': \"\\u0131\",\n\t      'imof': \"\\u22B7\",\n\t      'imped': \"\\u01B5\",\n\t      'Implies': \"\\u21D2\",\n\t      'in': \"\\u2208\",\n\t      'incare': \"\\u2105\",\n\t      'infin': \"\\u221E\",\n\t      'infintie': \"\\u29DD\",\n\t      'inodot': \"\\u0131\",\n\t      'int': \"\\u222B\",\n\t      'Int': \"\\u222C\",\n\t      'intcal': \"\\u22BA\",\n\t      'integers': \"\\u2124\",\n\t      'Integral': \"\\u222B\",\n\t      'intercal': \"\\u22BA\",\n\t      'Intersection': \"\\u22C2\",\n\t      'intlarhk': \"\\u2A17\",\n\t      'intprod': \"\\u2A3C\",\n\t      'InvisibleComma': \"\\u2063\",\n\t      'InvisibleTimes': \"\\u2062\",\n\t      'iocy': \"\\u0451\",\n\t      'IOcy': \"\\u0401\",\n\t      'iogon': \"\\u012F\",\n\t      'Iogon': \"\\u012E\",\n\t      'iopf': \"\\uD835\\uDD5A\",\n\t      'Iopf': \"\\uD835\\uDD40\",\n\t      'iota': \"\\u03B9\",\n\t      'Iota': \"\\u0399\",\n\t      'iprod': \"\\u2A3C\",\n\t      'iquest': '\\xBF',\n\t      'iscr': \"\\uD835\\uDCBE\",\n\t      'Iscr': \"\\u2110\",\n\t      'isin': \"\\u2208\",\n\t      'isindot': \"\\u22F5\",\n\t      'isinE': \"\\u22F9\",\n\t      'isins': \"\\u22F4\",\n\t      'isinsv': \"\\u22F3\",\n\t      'isinv': \"\\u2208\",\n\t      'it': \"\\u2062\",\n\t      'itilde': \"\\u0129\",\n\t      'Itilde': \"\\u0128\",\n\t      'iukcy': \"\\u0456\",\n\t      'Iukcy': \"\\u0406\",\n\t      'iuml': '\\xEF',\n\t      'Iuml': '\\xCF',\n\t      'jcirc': \"\\u0135\",\n\t      'Jcirc': \"\\u0134\",\n\t      'jcy': \"\\u0439\",\n\t      'Jcy': \"\\u0419\",\n\t      'jfr': \"\\uD835\\uDD27\",\n\t      'Jfr': \"\\uD835\\uDD0D\",\n\t      'jmath': \"\\u0237\",\n\t      'jopf': \"\\uD835\\uDD5B\",\n\t      'Jopf': \"\\uD835\\uDD41\",\n\t      'jscr': \"\\uD835\\uDCBF\",\n\t      'Jscr': \"\\uD835\\uDCA5\",\n\t      'jsercy': \"\\u0458\",\n\t      'Jsercy': \"\\u0408\",\n\t      'jukcy': \"\\u0454\",\n\t      'Jukcy': \"\\u0404\",\n\t      'kappa': \"\\u03BA\",\n\t      'Kappa': \"\\u039A\",\n\t      'kappav': \"\\u03F0\",\n\t      'kcedil': \"\\u0137\",\n\t      'Kcedil': \"\\u0136\",\n\t      'kcy': \"\\u043A\",\n\t      'Kcy': \"\\u041A\",\n\t      'kfr': \"\\uD835\\uDD28\",\n\t      'Kfr': \"\\uD835\\uDD0E\",\n\t      'kgreen': \"\\u0138\",\n\t      'khcy': \"\\u0445\",\n\t      'KHcy': \"\\u0425\",\n\t      'kjcy': \"\\u045C\",\n\t      'KJcy': \"\\u040C\",\n\t      'kopf': \"\\uD835\\uDD5C\",\n\t      'Kopf': \"\\uD835\\uDD42\",\n\t      'kscr': \"\\uD835\\uDCC0\",\n\t      'Kscr': \"\\uD835\\uDCA6\",\n\t      'lAarr': \"\\u21DA\",\n\t      'lacute': \"\\u013A\",\n\t      'Lacute': \"\\u0139\",\n\t      'laemptyv': \"\\u29B4\",\n\t      'lagran': \"\\u2112\",\n\t      'lambda': \"\\u03BB\",\n\t      'Lambda': \"\\u039B\",\n\t      'lang': \"\\u27E8\",\n\t      'Lang': \"\\u27EA\",\n\t      'langd': \"\\u2991\",\n\t      'langle': \"\\u27E8\",\n\t      'lap': \"\\u2A85\",\n\t      'Laplacetrf': \"\\u2112\",\n\t      'laquo': '\\xAB',\n\t      'larr': \"\\u2190\",\n\t      'lArr': \"\\u21D0\",\n\t      'Larr': \"\\u219E\",\n\t      'larrb': \"\\u21E4\",\n\t      'larrbfs': \"\\u291F\",\n\t      'larrfs': \"\\u291D\",\n\t      'larrhk': \"\\u21A9\",\n\t      'larrlp': \"\\u21AB\",\n\t      'larrpl': \"\\u2939\",\n\t      'larrsim': \"\\u2973\",\n\t      'larrtl': \"\\u21A2\",\n\t      'lat': \"\\u2AAB\",\n\t      'latail': \"\\u2919\",\n\t      'lAtail': \"\\u291B\",\n\t      'late': \"\\u2AAD\",\n\t      'lates': \"\\u2AAD\\uFE00\",\n\t      'lbarr': \"\\u290C\",\n\t      'lBarr': \"\\u290E\",\n\t      'lbbrk': \"\\u2772\",\n\t      'lbrace': '{',\n\t      'lbrack': '[',\n\t      'lbrke': \"\\u298B\",\n\t      'lbrksld': \"\\u298F\",\n\t      'lbrkslu': \"\\u298D\",\n\t      'lcaron': \"\\u013E\",\n\t      'Lcaron': \"\\u013D\",\n\t      'lcedil': \"\\u013C\",\n\t      'Lcedil': \"\\u013B\",\n\t      'lceil': \"\\u2308\",\n\t      'lcub': '{',\n\t      'lcy': \"\\u043B\",\n\t      'Lcy': \"\\u041B\",\n\t      'ldca': \"\\u2936\",\n\t      'ldquo': \"\\u201C\",\n\t      'ldquor': \"\\u201E\",\n\t      'ldrdhar': \"\\u2967\",\n\t      'ldrushar': \"\\u294B\",\n\t      'ldsh': \"\\u21B2\",\n\t      'le': \"\\u2264\",\n\t      'lE': \"\\u2266\",\n\t      'LeftAngleBracket': \"\\u27E8\",\n\t      'leftarrow': \"\\u2190\",\n\t      'Leftarrow': \"\\u21D0\",\n\t      'LeftArrow': \"\\u2190\",\n\t      'LeftArrowBar': \"\\u21E4\",\n\t      'LeftArrowRightArrow': \"\\u21C6\",\n\t      'leftarrowtail': \"\\u21A2\",\n\t      'LeftCeiling': \"\\u2308\",\n\t      'LeftDoubleBracket': \"\\u27E6\",\n\t      'LeftDownTeeVector': \"\\u2961\",\n\t      'LeftDownVector': \"\\u21C3\",\n\t      'LeftDownVectorBar': \"\\u2959\",\n\t      'LeftFloor': \"\\u230A\",\n\t      'leftharpoondown': \"\\u21BD\",\n\t      'leftharpoonup': \"\\u21BC\",\n\t      'leftleftarrows': \"\\u21C7\",\n\t      'leftrightarrow': \"\\u2194\",\n\t      'Leftrightarrow': \"\\u21D4\",\n\t      'LeftRightArrow': \"\\u2194\",\n\t      'leftrightarrows': \"\\u21C6\",\n\t      'leftrightharpoons': \"\\u21CB\",\n\t      'leftrightsquigarrow': \"\\u21AD\",\n\t      'LeftRightVector': \"\\u294E\",\n\t      'LeftTee': \"\\u22A3\",\n\t      'LeftTeeArrow': \"\\u21A4\",\n\t      'LeftTeeVector': \"\\u295A\",\n\t      'leftthreetimes': \"\\u22CB\",\n\t      'LeftTriangle': \"\\u22B2\",\n\t      'LeftTriangleBar': \"\\u29CF\",\n\t      'LeftTriangleEqual': \"\\u22B4\",\n\t      'LeftUpDownVector': \"\\u2951\",\n\t      'LeftUpTeeVector': \"\\u2960\",\n\t      'LeftUpVector': \"\\u21BF\",\n\t      'LeftUpVectorBar': \"\\u2958\",\n\t      'LeftVector': \"\\u21BC\",\n\t      'LeftVectorBar': \"\\u2952\",\n\t      'leg': \"\\u22DA\",\n\t      'lEg': \"\\u2A8B\",\n\t      'leq': \"\\u2264\",\n\t      'leqq': \"\\u2266\",\n\t      'leqslant': \"\\u2A7D\",\n\t      'les': \"\\u2A7D\",\n\t      'lescc': \"\\u2AA8\",\n\t      'lesdot': \"\\u2A7F\",\n\t      'lesdoto': \"\\u2A81\",\n\t      'lesdotor': \"\\u2A83\",\n\t      'lesg': \"\\u22DA\\uFE00\",\n\t      'lesges': \"\\u2A93\",\n\t      'lessapprox': \"\\u2A85\",\n\t      'lessdot': \"\\u22D6\",\n\t      'lesseqgtr': \"\\u22DA\",\n\t      'lesseqqgtr': \"\\u2A8B\",\n\t      'LessEqualGreater': \"\\u22DA\",\n\t      'LessFullEqual': \"\\u2266\",\n\t      'LessGreater': \"\\u2276\",\n\t      'lessgtr': \"\\u2276\",\n\t      'LessLess': \"\\u2AA1\",\n\t      'lesssim': \"\\u2272\",\n\t      'LessSlantEqual': \"\\u2A7D\",\n\t      'LessTilde': \"\\u2272\",\n\t      'lfisht': \"\\u297C\",\n\t      'lfloor': \"\\u230A\",\n\t      'lfr': \"\\uD835\\uDD29\",\n\t      'Lfr': \"\\uD835\\uDD0F\",\n\t      'lg': \"\\u2276\",\n\t      'lgE': \"\\u2A91\",\n\t      'lHar': \"\\u2962\",\n\t      'lhard': \"\\u21BD\",\n\t      'lharu': \"\\u21BC\",\n\t      'lharul': \"\\u296A\",\n\t      'lhblk': \"\\u2584\",\n\t      'ljcy': \"\\u0459\",\n\t      'LJcy': \"\\u0409\",\n\t      'll': \"\\u226A\",\n\t      'Ll': \"\\u22D8\",\n\t      'llarr': \"\\u21C7\",\n\t      'llcorner': \"\\u231E\",\n\t      'Lleftarrow': \"\\u21DA\",\n\t      'llhard': \"\\u296B\",\n\t      'lltri': \"\\u25FA\",\n\t      'lmidot': \"\\u0140\",\n\t      'Lmidot': \"\\u013F\",\n\t      'lmoust': \"\\u23B0\",\n\t      'lmoustache': \"\\u23B0\",\n\t      'lnap': \"\\u2A89\",\n\t      'lnapprox': \"\\u2A89\",\n\t      'lne': \"\\u2A87\",\n\t      'lnE': \"\\u2268\",\n\t      'lneq': \"\\u2A87\",\n\t      'lneqq': \"\\u2268\",\n\t      'lnsim': \"\\u22E6\",\n\t      'loang': \"\\u27EC\",\n\t      'loarr': \"\\u21FD\",\n\t      'lobrk': \"\\u27E6\",\n\t      'longleftarrow': \"\\u27F5\",\n\t      'Longleftarrow': \"\\u27F8\",\n\t      'LongLeftArrow': \"\\u27F5\",\n\t      'longleftrightarrow': \"\\u27F7\",\n\t      'Longleftrightarrow': \"\\u27FA\",\n\t      'LongLeftRightArrow': \"\\u27F7\",\n\t      'longmapsto': \"\\u27FC\",\n\t      'longrightarrow': \"\\u27F6\",\n\t      'Longrightarrow': \"\\u27F9\",\n\t      'LongRightArrow': \"\\u27F6\",\n\t      'looparrowleft': \"\\u21AB\",\n\t      'looparrowright': \"\\u21AC\",\n\t      'lopar': \"\\u2985\",\n\t      'lopf': \"\\uD835\\uDD5D\",\n\t      'Lopf': \"\\uD835\\uDD43\",\n\t      'loplus': \"\\u2A2D\",\n\t      'lotimes': \"\\u2A34\",\n\t      'lowast': \"\\u2217\",\n\t      'lowbar': '_',\n\t      'LowerLeftArrow': \"\\u2199\",\n\t      'LowerRightArrow': \"\\u2198\",\n\t      'loz': \"\\u25CA\",\n\t      'lozenge': \"\\u25CA\",\n\t      'lozf': \"\\u29EB\",\n\t      'lpar': '(',\n\t      'lparlt': \"\\u2993\",\n\t      'lrarr': \"\\u21C6\",\n\t      'lrcorner': \"\\u231F\",\n\t      'lrhar': \"\\u21CB\",\n\t      'lrhard': \"\\u296D\",\n\t      'lrm': \"\\u200E\",\n\t      'lrtri': \"\\u22BF\",\n\t      'lsaquo': \"\\u2039\",\n\t      'lscr': \"\\uD835\\uDCC1\",\n\t      'Lscr': \"\\u2112\",\n\t      'lsh': \"\\u21B0\",\n\t      'Lsh': \"\\u21B0\",\n\t      'lsim': \"\\u2272\",\n\t      'lsime': \"\\u2A8D\",\n\t      'lsimg': \"\\u2A8F\",\n\t      'lsqb': '[',\n\t      'lsquo': \"\\u2018\",\n\t      'lsquor': \"\\u201A\",\n\t      'lstrok': \"\\u0142\",\n\t      'Lstrok': \"\\u0141\",\n\t      'lt': '<',\n\t      'Lt': \"\\u226A\",\n\t      'LT': '<',\n\t      'ltcc': \"\\u2AA6\",\n\t      'ltcir': \"\\u2A79\",\n\t      'ltdot': \"\\u22D6\",\n\t      'lthree': \"\\u22CB\",\n\t      'ltimes': \"\\u22C9\",\n\t      'ltlarr': \"\\u2976\",\n\t      'ltquest': \"\\u2A7B\",\n\t      'ltri': \"\\u25C3\",\n\t      'ltrie': \"\\u22B4\",\n\t      'ltrif': \"\\u25C2\",\n\t      'ltrPar': \"\\u2996\",\n\t      'lurdshar': \"\\u294A\",\n\t      'luruhar': \"\\u2966\",\n\t      'lvertneqq': \"\\u2268\\uFE00\",\n\t      'lvnE': \"\\u2268\\uFE00\",\n\t      'macr': '\\xAF',\n\t      'male': \"\\u2642\",\n\t      'malt': \"\\u2720\",\n\t      'maltese': \"\\u2720\",\n\t      'map': \"\\u21A6\",\n\t      'Map': \"\\u2905\",\n\t      'mapsto': \"\\u21A6\",\n\t      'mapstodown': \"\\u21A7\",\n\t      'mapstoleft': \"\\u21A4\",\n\t      'mapstoup': \"\\u21A5\",\n\t      'marker': \"\\u25AE\",\n\t      'mcomma': \"\\u2A29\",\n\t      'mcy': \"\\u043C\",\n\t      'Mcy': \"\\u041C\",\n\t      'mdash': \"\\u2014\",\n\t      'mDDot': \"\\u223A\",\n\t      'measuredangle': \"\\u2221\",\n\t      'MediumSpace': \"\\u205F\",\n\t      'Mellintrf': \"\\u2133\",\n\t      'mfr': \"\\uD835\\uDD2A\",\n\t      'Mfr': \"\\uD835\\uDD10\",\n\t      'mho': \"\\u2127\",\n\t      'micro': '\\xB5',\n\t      'mid': \"\\u2223\",\n\t      'midast': '*',\n\t      'midcir': \"\\u2AF0\",\n\t      'middot': '\\xB7',\n\t      'minus': \"\\u2212\",\n\t      'minusb': \"\\u229F\",\n\t      'minusd': \"\\u2238\",\n\t      'minusdu': \"\\u2A2A\",\n\t      'MinusPlus': \"\\u2213\",\n\t      'mlcp': \"\\u2ADB\",\n\t      'mldr': \"\\u2026\",\n\t      'mnplus': \"\\u2213\",\n\t      'models': \"\\u22A7\",\n\t      'mopf': \"\\uD835\\uDD5E\",\n\t      'Mopf': \"\\uD835\\uDD44\",\n\t      'mp': \"\\u2213\",\n\t      'mscr': \"\\uD835\\uDCC2\",\n\t      'Mscr': \"\\u2133\",\n\t      'mstpos': \"\\u223E\",\n\t      'mu': \"\\u03BC\",\n\t      'Mu': \"\\u039C\",\n\t      'multimap': \"\\u22B8\",\n\t      'mumap': \"\\u22B8\",\n\t      'nabla': \"\\u2207\",\n\t      'nacute': \"\\u0144\",\n\t      'Nacute': \"\\u0143\",\n\t      'nang': \"\\u2220\\u20D2\",\n\t      'nap': \"\\u2249\",\n\t      'napE': \"\\u2A70\\u0338\",\n\t      'napid': \"\\u224B\\u0338\",\n\t      'napos': \"\\u0149\",\n\t      'napprox': \"\\u2249\",\n\t      'natur': \"\\u266E\",\n\t      'natural': \"\\u266E\",\n\t      'naturals': \"\\u2115\",\n\t      'nbsp': '\\xA0',\n\t      'nbump': \"\\u224E\\u0338\",\n\t      'nbumpe': \"\\u224F\\u0338\",\n\t      'ncap': \"\\u2A43\",\n\t      'ncaron': \"\\u0148\",\n\t      'Ncaron': \"\\u0147\",\n\t      'ncedil': \"\\u0146\",\n\t      'Ncedil': \"\\u0145\",\n\t      'ncong': \"\\u2247\",\n\t      'ncongdot': \"\\u2A6D\\u0338\",\n\t      'ncup': \"\\u2A42\",\n\t      'ncy': \"\\u043D\",\n\t      'Ncy': \"\\u041D\",\n\t      'ndash': \"\\u2013\",\n\t      'ne': \"\\u2260\",\n\t      'nearhk': \"\\u2924\",\n\t      'nearr': \"\\u2197\",\n\t      'neArr': \"\\u21D7\",\n\t      'nearrow': \"\\u2197\",\n\t      'nedot': \"\\u2250\\u0338\",\n\t      'NegativeMediumSpace': \"\\u200B\",\n\t      'NegativeThickSpace': \"\\u200B\",\n\t      'NegativeThinSpace': \"\\u200B\",\n\t      'NegativeVeryThinSpace': \"\\u200B\",\n\t      'nequiv': \"\\u2262\",\n\t      'nesear': \"\\u2928\",\n\t      'nesim': \"\\u2242\\u0338\",\n\t      'NestedGreaterGreater': \"\\u226B\",\n\t      'NestedLessLess': \"\\u226A\",\n\t      'NewLine': '\\n',\n\t      'nexist': \"\\u2204\",\n\t      'nexists': \"\\u2204\",\n\t      'nfr': \"\\uD835\\uDD2B\",\n\t      'Nfr': \"\\uD835\\uDD11\",\n\t      'nge': \"\\u2271\",\n\t      'ngE': \"\\u2267\\u0338\",\n\t      'ngeq': \"\\u2271\",\n\t      'ngeqq': \"\\u2267\\u0338\",\n\t      'ngeqslant': \"\\u2A7E\\u0338\",\n\t      'nges': \"\\u2A7E\\u0338\",\n\t      'nGg': \"\\u22D9\\u0338\",\n\t      'ngsim': \"\\u2275\",\n\t      'ngt': \"\\u226F\",\n\t      'nGt': \"\\u226B\\u20D2\",\n\t      'ngtr': \"\\u226F\",\n\t      'nGtv': \"\\u226B\\u0338\",\n\t      'nharr': \"\\u21AE\",\n\t      'nhArr': \"\\u21CE\",\n\t      'nhpar': \"\\u2AF2\",\n\t      'ni': \"\\u220B\",\n\t      'nis': \"\\u22FC\",\n\t      'nisd': \"\\u22FA\",\n\t      'niv': \"\\u220B\",\n\t      'njcy': \"\\u045A\",\n\t      'NJcy': \"\\u040A\",\n\t      'nlarr': \"\\u219A\",\n\t      'nlArr': \"\\u21CD\",\n\t      'nldr': \"\\u2025\",\n\t      'nle': \"\\u2270\",\n\t      'nlE': \"\\u2266\\u0338\",\n\t      'nleftarrow': \"\\u219A\",\n\t      'nLeftarrow': \"\\u21CD\",\n\t      'nleftrightarrow': \"\\u21AE\",\n\t      'nLeftrightarrow': \"\\u21CE\",\n\t      'nleq': \"\\u2270\",\n\t      'nleqq': \"\\u2266\\u0338\",\n\t      'nleqslant': \"\\u2A7D\\u0338\",\n\t      'nles': \"\\u2A7D\\u0338\",\n\t      'nless': \"\\u226E\",\n\t      'nLl': \"\\u22D8\\u0338\",\n\t      'nlsim': \"\\u2274\",\n\t      'nlt': \"\\u226E\",\n\t      'nLt': \"\\u226A\\u20D2\",\n\t      'nltri': \"\\u22EA\",\n\t      'nltrie': \"\\u22EC\",\n\t      'nLtv': \"\\u226A\\u0338\",\n\t      'nmid': \"\\u2224\",\n\t      'NoBreak': \"\\u2060\",\n\t      'NonBreakingSpace': '\\xA0',\n\t      'nopf': \"\\uD835\\uDD5F\",\n\t      'Nopf': \"\\u2115\",\n\t      'not': '\\xAC',\n\t      'Not': \"\\u2AEC\",\n\t      'NotCongruent': \"\\u2262\",\n\t      'NotCupCap': \"\\u226D\",\n\t      'NotDoubleVerticalBar': \"\\u2226\",\n\t      'NotElement': \"\\u2209\",\n\t      'NotEqual': \"\\u2260\",\n\t      'NotEqualTilde': \"\\u2242\\u0338\",\n\t      'NotExists': \"\\u2204\",\n\t      'NotGreater': \"\\u226F\",\n\t      'NotGreaterEqual': \"\\u2271\",\n\t      'NotGreaterFullEqual': \"\\u2267\\u0338\",\n\t      'NotGreaterGreater': \"\\u226B\\u0338\",\n\t      'NotGreaterLess': \"\\u2279\",\n\t      'NotGreaterSlantEqual': \"\\u2A7E\\u0338\",\n\t      'NotGreaterTilde': \"\\u2275\",\n\t      'NotHumpDownHump': \"\\u224E\\u0338\",\n\t      'NotHumpEqual': \"\\u224F\\u0338\",\n\t      'notin': \"\\u2209\",\n\t      'notindot': \"\\u22F5\\u0338\",\n\t      'notinE': \"\\u22F9\\u0338\",\n\t      'notinva': \"\\u2209\",\n\t      'notinvb': \"\\u22F7\",\n\t      'notinvc': \"\\u22F6\",\n\t      'NotLeftTriangle': \"\\u22EA\",\n\t      'NotLeftTriangleBar': \"\\u29CF\\u0338\",\n\t      'NotLeftTriangleEqual': \"\\u22EC\",\n\t      'NotLess': \"\\u226E\",\n\t      'NotLessEqual': \"\\u2270\",\n\t      'NotLessGreater': \"\\u2278\",\n\t      'NotLessLess': \"\\u226A\\u0338\",\n\t      'NotLessSlantEqual': \"\\u2A7D\\u0338\",\n\t      'NotLessTilde': \"\\u2274\",\n\t      'NotNestedGreaterGreater': \"\\u2AA2\\u0338\",\n\t      'NotNestedLessLess': \"\\u2AA1\\u0338\",\n\t      'notni': \"\\u220C\",\n\t      'notniva': \"\\u220C\",\n\t      'notnivb': \"\\u22FE\",\n\t      'notnivc': \"\\u22FD\",\n\t      'NotPrecedes': \"\\u2280\",\n\t      'NotPrecedesEqual': \"\\u2AAF\\u0338\",\n\t      'NotPrecedesSlantEqual': \"\\u22E0\",\n\t      'NotReverseElement': \"\\u220C\",\n\t      'NotRightTriangle': \"\\u22EB\",\n\t      'NotRightTriangleBar': \"\\u29D0\\u0338\",\n\t      'NotRightTriangleEqual': \"\\u22ED\",\n\t      'NotSquareSubset': \"\\u228F\\u0338\",\n\t      'NotSquareSubsetEqual': \"\\u22E2\",\n\t      'NotSquareSuperset': \"\\u2290\\u0338\",\n\t      'NotSquareSupersetEqual': \"\\u22E3\",\n\t      'NotSubset': \"\\u2282\\u20D2\",\n\t      'NotSubsetEqual': \"\\u2288\",\n\t      'NotSucceeds': \"\\u2281\",\n\t      'NotSucceedsEqual': \"\\u2AB0\\u0338\",\n\t      'NotSucceedsSlantEqual': \"\\u22E1\",\n\t      'NotSucceedsTilde': \"\\u227F\\u0338\",\n\t      'NotSuperset': \"\\u2283\\u20D2\",\n\t      'NotSupersetEqual': \"\\u2289\",\n\t      'NotTilde': \"\\u2241\",\n\t      'NotTildeEqual': \"\\u2244\",\n\t      'NotTildeFullEqual': \"\\u2247\",\n\t      'NotTildeTilde': \"\\u2249\",\n\t      'NotVerticalBar': \"\\u2224\",\n\t      'npar': \"\\u2226\",\n\t      'nparallel': \"\\u2226\",\n\t      'nparsl': \"\\u2AFD\\u20E5\",\n\t      'npart': \"\\u2202\\u0338\",\n\t      'npolint': \"\\u2A14\",\n\t      'npr': \"\\u2280\",\n\t      'nprcue': \"\\u22E0\",\n\t      'npre': \"\\u2AAF\\u0338\",\n\t      'nprec': \"\\u2280\",\n\t      'npreceq': \"\\u2AAF\\u0338\",\n\t      'nrarr': \"\\u219B\",\n\t      'nrArr': \"\\u21CF\",\n\t      'nrarrc': \"\\u2933\\u0338\",\n\t      'nrarrw': \"\\u219D\\u0338\",\n\t      'nrightarrow': \"\\u219B\",\n\t      'nRightarrow': \"\\u21CF\",\n\t      'nrtri': \"\\u22EB\",\n\t      'nrtrie': \"\\u22ED\",\n\t      'nsc': \"\\u2281\",\n\t      'nsccue': \"\\u22E1\",\n\t      'nsce': \"\\u2AB0\\u0338\",\n\t      'nscr': \"\\uD835\\uDCC3\",\n\t      'Nscr': \"\\uD835\\uDCA9\",\n\t      'nshortmid': \"\\u2224\",\n\t      'nshortparallel': \"\\u2226\",\n\t      'nsim': \"\\u2241\",\n\t      'nsime': \"\\u2244\",\n\t      'nsimeq': \"\\u2244\",\n\t      'nsmid': \"\\u2224\",\n\t      'nspar': \"\\u2226\",\n\t      'nsqsube': \"\\u22E2\",\n\t      'nsqsupe': \"\\u22E3\",\n\t      'nsub': \"\\u2284\",\n\t      'nsube': \"\\u2288\",\n\t      'nsubE': \"\\u2AC5\\u0338\",\n\t      'nsubset': \"\\u2282\\u20D2\",\n\t      'nsubseteq': \"\\u2288\",\n\t      'nsubseteqq': \"\\u2AC5\\u0338\",\n\t      'nsucc': \"\\u2281\",\n\t      'nsucceq': \"\\u2AB0\\u0338\",\n\t      'nsup': \"\\u2285\",\n\t      'nsupe': \"\\u2289\",\n\t      'nsupE': \"\\u2AC6\\u0338\",\n\t      'nsupset': \"\\u2283\\u20D2\",\n\t      'nsupseteq': \"\\u2289\",\n\t      'nsupseteqq': \"\\u2AC6\\u0338\",\n\t      'ntgl': \"\\u2279\",\n\t      'ntilde': '\\xF1',\n\t      'Ntilde': '\\xD1',\n\t      'ntlg': \"\\u2278\",\n\t      'ntriangleleft': \"\\u22EA\",\n\t      'ntrianglelefteq': \"\\u22EC\",\n\t      'ntriangleright': \"\\u22EB\",\n\t      'ntrianglerighteq': \"\\u22ED\",\n\t      'nu': \"\\u03BD\",\n\t      'Nu': \"\\u039D\",\n\t      'num': '#',\n\t      'numero': \"\\u2116\",\n\t      'numsp': \"\\u2007\",\n\t      'nvap': \"\\u224D\\u20D2\",\n\t      'nvdash': \"\\u22AC\",\n\t      'nvDash': \"\\u22AD\",\n\t      'nVdash': \"\\u22AE\",\n\t      'nVDash': \"\\u22AF\",\n\t      'nvge': \"\\u2265\\u20D2\",\n\t      'nvgt': \">\\u20D2\",\n\t      'nvHarr': \"\\u2904\",\n\t      'nvinfin': \"\\u29DE\",\n\t      'nvlArr': \"\\u2902\",\n\t      'nvle': \"\\u2264\\u20D2\",\n\t      'nvlt': \"<\\u20D2\",\n\t      'nvltrie': \"\\u22B4\\u20D2\",\n\t      'nvrArr': \"\\u2903\",\n\t      'nvrtrie': \"\\u22B5\\u20D2\",\n\t      'nvsim': \"\\u223C\\u20D2\",\n\t      'nwarhk': \"\\u2923\",\n\t      'nwarr': \"\\u2196\",\n\t      'nwArr': \"\\u21D6\",\n\t      'nwarrow': \"\\u2196\",\n\t      'nwnear': \"\\u2927\",\n\t      'oacute': '\\xF3',\n\t      'Oacute': '\\xD3',\n\t      'oast': \"\\u229B\",\n\t      'ocir': \"\\u229A\",\n\t      'ocirc': '\\xF4',\n\t      'Ocirc': '\\xD4',\n\t      'ocy': \"\\u043E\",\n\t      'Ocy': \"\\u041E\",\n\t      'odash': \"\\u229D\",\n\t      'odblac': \"\\u0151\",\n\t      'Odblac': \"\\u0150\",\n\t      'odiv': \"\\u2A38\",\n\t      'odot': \"\\u2299\",\n\t      'odsold': \"\\u29BC\",\n\t      'oelig': \"\\u0153\",\n\t      'OElig': \"\\u0152\",\n\t      'ofcir': \"\\u29BF\",\n\t      'ofr': \"\\uD835\\uDD2C\",\n\t      'Ofr': \"\\uD835\\uDD12\",\n\t      'ogon': \"\\u02DB\",\n\t      'ograve': '\\xF2',\n\t      'Ograve': '\\xD2',\n\t      'ogt': \"\\u29C1\",\n\t      'ohbar': \"\\u29B5\",\n\t      'ohm': \"\\u03A9\",\n\t      'oint': \"\\u222E\",\n\t      'olarr': \"\\u21BA\",\n\t      'olcir': \"\\u29BE\",\n\t      'olcross': \"\\u29BB\",\n\t      'oline': \"\\u203E\",\n\t      'olt': \"\\u29C0\",\n\t      'omacr': \"\\u014D\",\n\t      'Omacr': \"\\u014C\",\n\t      'omega': \"\\u03C9\",\n\t      'Omega': \"\\u03A9\",\n\t      'omicron': \"\\u03BF\",\n\t      'Omicron': \"\\u039F\",\n\t      'omid': \"\\u29B6\",\n\t      'ominus': \"\\u2296\",\n\t      'oopf': \"\\uD835\\uDD60\",\n\t      'Oopf': \"\\uD835\\uDD46\",\n\t      'opar': \"\\u29B7\",\n\t      'OpenCurlyDoubleQuote': \"\\u201C\",\n\t      'OpenCurlyQuote': \"\\u2018\",\n\t      'operp': \"\\u29B9\",\n\t      'oplus': \"\\u2295\",\n\t      'or': \"\\u2228\",\n\t      'Or': \"\\u2A54\",\n\t      'orarr': \"\\u21BB\",\n\t      'ord': \"\\u2A5D\",\n\t      'order': \"\\u2134\",\n\t      'orderof': \"\\u2134\",\n\t      'ordf': '\\xAA',\n\t      'ordm': '\\xBA',\n\t      'origof': \"\\u22B6\",\n\t      'oror': \"\\u2A56\",\n\t      'orslope': \"\\u2A57\",\n\t      'orv': \"\\u2A5B\",\n\t      'oS': \"\\u24C8\",\n\t      'oscr': \"\\u2134\",\n\t      'Oscr': \"\\uD835\\uDCAA\",\n\t      'oslash': '\\xF8',\n\t      'Oslash': '\\xD8',\n\t      'osol': \"\\u2298\",\n\t      'otilde': '\\xF5',\n\t      'Otilde': '\\xD5',\n\t      'otimes': \"\\u2297\",\n\t      'Otimes': \"\\u2A37\",\n\t      'otimesas': \"\\u2A36\",\n\t      'ouml': '\\xF6',\n\t      'Ouml': '\\xD6',\n\t      'ovbar': \"\\u233D\",\n\t      'OverBar': \"\\u203E\",\n\t      'OverBrace': \"\\u23DE\",\n\t      'OverBracket': \"\\u23B4\",\n\t      'OverParenthesis': \"\\u23DC\",\n\t      'par': \"\\u2225\",\n\t      'para': '\\xB6',\n\t      'parallel': \"\\u2225\",\n\t      'parsim': \"\\u2AF3\",\n\t      'parsl': \"\\u2AFD\",\n\t      'part': \"\\u2202\",\n\t      'PartialD': \"\\u2202\",\n\t      'pcy': \"\\u043F\",\n\t      'Pcy': \"\\u041F\",\n\t      'percnt': '%',\n\t      'period': '.',\n\t      'permil': \"\\u2030\",\n\t      'perp': \"\\u22A5\",\n\t      'pertenk': \"\\u2031\",\n\t      'pfr': \"\\uD835\\uDD2D\",\n\t      'Pfr': \"\\uD835\\uDD13\",\n\t      'phi': \"\\u03C6\",\n\t      'Phi': \"\\u03A6\",\n\t      'phiv': \"\\u03D5\",\n\t      'phmmat': \"\\u2133\",\n\t      'phone': \"\\u260E\",\n\t      'pi': \"\\u03C0\",\n\t      'Pi': \"\\u03A0\",\n\t      'pitchfork': \"\\u22D4\",\n\t      'piv': \"\\u03D6\",\n\t      'planck': \"\\u210F\",\n\t      'planckh': \"\\u210E\",\n\t      'plankv': \"\\u210F\",\n\t      'plus': '+',\n\t      'plusacir': \"\\u2A23\",\n\t      'plusb': \"\\u229E\",\n\t      'pluscir': \"\\u2A22\",\n\t      'plusdo': \"\\u2214\",\n\t      'plusdu': \"\\u2A25\",\n\t      'pluse': \"\\u2A72\",\n\t      'PlusMinus': '\\xB1',\n\t      'plusmn': '\\xB1',\n\t      'plussim': \"\\u2A26\",\n\t      'plustwo': \"\\u2A27\",\n\t      'pm': '\\xB1',\n\t      'Poincareplane': \"\\u210C\",\n\t      'pointint': \"\\u2A15\",\n\t      'popf': \"\\uD835\\uDD61\",\n\t      'Popf': \"\\u2119\",\n\t      'pound': '\\xA3',\n\t      'pr': \"\\u227A\",\n\t      'Pr': \"\\u2ABB\",\n\t      'prap': \"\\u2AB7\",\n\t      'prcue': \"\\u227C\",\n\t      'pre': \"\\u2AAF\",\n\t      'prE': \"\\u2AB3\",\n\t      'prec': \"\\u227A\",\n\t      'precapprox': \"\\u2AB7\",\n\t      'preccurlyeq': \"\\u227C\",\n\t      'Precedes': \"\\u227A\",\n\t      'PrecedesEqual': \"\\u2AAF\",\n\t      'PrecedesSlantEqual': \"\\u227C\",\n\t      'PrecedesTilde': \"\\u227E\",\n\t      'preceq': \"\\u2AAF\",\n\t      'precnapprox': \"\\u2AB9\",\n\t      'precneqq': \"\\u2AB5\",\n\t      'precnsim': \"\\u22E8\",\n\t      'precsim': \"\\u227E\",\n\t      'prime': \"\\u2032\",\n\t      'Prime': \"\\u2033\",\n\t      'primes': \"\\u2119\",\n\t      'prnap': \"\\u2AB9\",\n\t      'prnE': \"\\u2AB5\",\n\t      'prnsim': \"\\u22E8\",\n\t      'prod': \"\\u220F\",\n\t      'Product': \"\\u220F\",\n\t      'profalar': \"\\u232E\",\n\t      'profline': \"\\u2312\",\n\t      'profsurf': \"\\u2313\",\n\t      'prop': \"\\u221D\",\n\t      'Proportion': \"\\u2237\",\n\t      'Proportional': \"\\u221D\",\n\t      'propto': \"\\u221D\",\n\t      'prsim': \"\\u227E\",\n\t      'prurel': \"\\u22B0\",\n\t      'pscr': \"\\uD835\\uDCC5\",\n\t      'Pscr': \"\\uD835\\uDCAB\",\n\t      'psi': \"\\u03C8\",\n\t      'Psi': \"\\u03A8\",\n\t      'puncsp': \"\\u2008\",\n\t      'qfr': \"\\uD835\\uDD2E\",\n\t      'Qfr': \"\\uD835\\uDD14\",\n\t      'qint': \"\\u2A0C\",\n\t      'qopf': \"\\uD835\\uDD62\",\n\t      'Qopf': \"\\u211A\",\n\t      'qprime': \"\\u2057\",\n\t      'qscr': \"\\uD835\\uDCC6\",\n\t      'Qscr': \"\\uD835\\uDCAC\",\n\t      'quaternions': \"\\u210D\",\n\t      'quatint': \"\\u2A16\",\n\t      'quest': '?',\n\t      'questeq': \"\\u225F\",\n\t      'quot': '\"',\n\t      'QUOT': '\"',\n\t      'rAarr': \"\\u21DB\",\n\t      'race': \"\\u223D\\u0331\",\n\t      'racute': \"\\u0155\",\n\t      'Racute': \"\\u0154\",\n\t      'radic': \"\\u221A\",\n\t      'raemptyv': \"\\u29B3\",\n\t      'rang': \"\\u27E9\",\n\t      'Rang': \"\\u27EB\",\n\t      'rangd': \"\\u2992\",\n\t      'range': \"\\u29A5\",\n\t      'rangle': \"\\u27E9\",\n\t      'raquo': '\\xBB',\n\t      'rarr': \"\\u2192\",\n\t      'rArr': \"\\u21D2\",\n\t      'Rarr': \"\\u21A0\",\n\t      'rarrap': \"\\u2975\",\n\t      'rarrb': \"\\u21E5\",\n\t      'rarrbfs': \"\\u2920\",\n\t      'rarrc': \"\\u2933\",\n\t      'rarrfs': \"\\u291E\",\n\t      'rarrhk': \"\\u21AA\",\n\t      'rarrlp': \"\\u21AC\",\n\t      'rarrpl': \"\\u2945\",\n\t      'rarrsim': \"\\u2974\",\n\t      'rarrtl': \"\\u21A3\",\n\t      'Rarrtl': \"\\u2916\",\n\t      'rarrw': \"\\u219D\",\n\t      'ratail': \"\\u291A\",\n\t      'rAtail': \"\\u291C\",\n\t      'ratio': \"\\u2236\",\n\t      'rationals': \"\\u211A\",\n\t      'rbarr': \"\\u290D\",\n\t      'rBarr': \"\\u290F\",\n\t      'RBarr': \"\\u2910\",\n\t      'rbbrk': \"\\u2773\",\n\t      'rbrace': '}',\n\t      'rbrack': ']',\n\t      'rbrke': \"\\u298C\",\n\t      'rbrksld': \"\\u298E\",\n\t      'rbrkslu': \"\\u2990\",\n\t      'rcaron': \"\\u0159\",\n\t      'Rcaron': \"\\u0158\",\n\t      'rcedil': \"\\u0157\",\n\t      'Rcedil': \"\\u0156\",\n\t      'rceil': \"\\u2309\",\n\t      'rcub': '}',\n\t      'rcy': \"\\u0440\",\n\t      'Rcy': \"\\u0420\",\n\t      'rdca': \"\\u2937\",\n\t      'rdldhar': \"\\u2969\",\n\t      'rdquo': \"\\u201D\",\n\t      'rdquor': \"\\u201D\",\n\t      'rdsh': \"\\u21B3\",\n\t      'Re': \"\\u211C\",\n\t      'real': \"\\u211C\",\n\t      'realine': \"\\u211B\",\n\t      'realpart': \"\\u211C\",\n\t      'reals': \"\\u211D\",\n\t      'rect': \"\\u25AD\",\n\t      'reg': '\\xAE',\n\t      'REG': '\\xAE',\n\t      'ReverseElement': \"\\u220B\",\n\t      'ReverseEquilibrium': \"\\u21CB\",\n\t      'ReverseUpEquilibrium': \"\\u296F\",\n\t      'rfisht': \"\\u297D\",\n\t      'rfloor': \"\\u230B\",\n\t      'rfr': \"\\uD835\\uDD2F\",\n\t      'Rfr': \"\\u211C\",\n\t      'rHar': \"\\u2964\",\n\t      'rhard': \"\\u21C1\",\n\t      'rharu': \"\\u21C0\",\n\t      'rharul': \"\\u296C\",\n\t      'rho': \"\\u03C1\",\n\t      'Rho': \"\\u03A1\",\n\t      'rhov': \"\\u03F1\",\n\t      'RightAngleBracket': \"\\u27E9\",\n\t      'rightarrow': \"\\u2192\",\n\t      'Rightarrow': \"\\u21D2\",\n\t      'RightArrow': \"\\u2192\",\n\t      'RightArrowBar': \"\\u21E5\",\n\t      'RightArrowLeftArrow': \"\\u21C4\",\n\t      'rightarrowtail': \"\\u21A3\",\n\t      'RightCeiling': \"\\u2309\",\n\t      'RightDoubleBracket': \"\\u27E7\",\n\t      'RightDownTeeVector': \"\\u295D\",\n\t      'RightDownVector': \"\\u21C2\",\n\t      'RightDownVectorBar': \"\\u2955\",\n\t      'RightFloor': \"\\u230B\",\n\t      'rightharpoondown': \"\\u21C1\",\n\t      'rightharpoonup': \"\\u21C0\",\n\t      'rightleftarrows': \"\\u21C4\",\n\t      'rightleftharpoons': \"\\u21CC\",\n\t      'rightrightarrows': \"\\u21C9\",\n\t      'rightsquigarrow': \"\\u219D\",\n\t      'RightTee': \"\\u22A2\",\n\t      'RightTeeArrow': \"\\u21A6\",\n\t      'RightTeeVector': \"\\u295B\",\n\t      'rightthreetimes': \"\\u22CC\",\n\t      'RightTriangle': \"\\u22B3\",\n\t      'RightTriangleBar': \"\\u29D0\",\n\t      'RightTriangleEqual': \"\\u22B5\",\n\t      'RightUpDownVector': \"\\u294F\",\n\t      'RightUpTeeVector': \"\\u295C\",\n\t      'RightUpVector': \"\\u21BE\",\n\t      'RightUpVectorBar': \"\\u2954\",\n\t      'RightVector': \"\\u21C0\",\n\t      'RightVectorBar': \"\\u2953\",\n\t      'ring': \"\\u02DA\",\n\t      'risingdotseq': \"\\u2253\",\n\t      'rlarr': \"\\u21C4\",\n\t      'rlhar': \"\\u21CC\",\n\t      'rlm': \"\\u200F\",\n\t      'rmoust': \"\\u23B1\",\n\t      'rmoustache': \"\\u23B1\",\n\t      'rnmid': \"\\u2AEE\",\n\t      'roang': \"\\u27ED\",\n\t      'roarr': \"\\u21FE\",\n\t      'robrk': \"\\u27E7\",\n\t      'ropar': \"\\u2986\",\n\t      'ropf': \"\\uD835\\uDD63\",\n\t      'Ropf': \"\\u211D\",\n\t      'roplus': \"\\u2A2E\",\n\t      'rotimes': \"\\u2A35\",\n\t      'RoundImplies': \"\\u2970\",\n\t      'rpar': ')',\n\t      'rpargt': \"\\u2994\",\n\t      'rppolint': \"\\u2A12\",\n\t      'rrarr': \"\\u21C9\",\n\t      'Rrightarrow': \"\\u21DB\",\n\t      'rsaquo': \"\\u203A\",\n\t      'rscr': \"\\uD835\\uDCC7\",\n\t      'Rscr': \"\\u211B\",\n\t      'rsh': \"\\u21B1\",\n\t      'Rsh': \"\\u21B1\",\n\t      'rsqb': ']',\n\t      'rsquo': \"\\u2019\",\n\t      'rsquor': \"\\u2019\",\n\t      'rthree': \"\\u22CC\",\n\t      'rtimes': \"\\u22CA\",\n\t      'rtri': \"\\u25B9\",\n\t      'rtrie': \"\\u22B5\",\n\t      'rtrif': \"\\u25B8\",\n\t      'rtriltri': \"\\u29CE\",\n\t      'RuleDelayed': \"\\u29F4\",\n\t      'ruluhar': \"\\u2968\",\n\t      'rx': \"\\u211E\",\n\t      'sacute': \"\\u015B\",\n\t      'Sacute': \"\\u015A\",\n\t      'sbquo': \"\\u201A\",\n\t      'sc': \"\\u227B\",\n\t      'Sc': \"\\u2ABC\",\n\t      'scap': \"\\u2AB8\",\n\t      'scaron': \"\\u0161\",\n\t      'Scaron': \"\\u0160\",\n\t      'sccue': \"\\u227D\",\n\t      'sce': \"\\u2AB0\",\n\t      'scE': \"\\u2AB4\",\n\t      'scedil': \"\\u015F\",\n\t      'Scedil': \"\\u015E\",\n\t      'scirc': \"\\u015D\",\n\t      'Scirc': \"\\u015C\",\n\t      'scnap': \"\\u2ABA\",\n\t      'scnE': \"\\u2AB6\",\n\t      'scnsim': \"\\u22E9\",\n\t      'scpolint': \"\\u2A13\",\n\t      'scsim': \"\\u227F\",\n\t      'scy': \"\\u0441\",\n\t      'Scy': \"\\u0421\",\n\t      'sdot': \"\\u22C5\",\n\t      'sdotb': \"\\u22A1\",\n\t      'sdote': \"\\u2A66\",\n\t      'searhk': \"\\u2925\",\n\t      'searr': \"\\u2198\",\n\t      'seArr': \"\\u21D8\",\n\t      'searrow': \"\\u2198\",\n\t      'sect': '\\xA7',\n\t      'semi': ';',\n\t      'seswar': \"\\u2929\",\n\t      'setminus': \"\\u2216\",\n\t      'setmn': \"\\u2216\",\n\t      'sext': \"\\u2736\",\n\t      'sfr': \"\\uD835\\uDD30\",\n\t      'Sfr': \"\\uD835\\uDD16\",\n\t      'sfrown': \"\\u2322\",\n\t      'sharp': \"\\u266F\",\n\t      'shchcy': \"\\u0449\",\n\t      'SHCHcy': \"\\u0429\",\n\t      'shcy': \"\\u0448\",\n\t      'SHcy': \"\\u0428\",\n\t      'ShortDownArrow': \"\\u2193\",\n\t      'ShortLeftArrow': \"\\u2190\",\n\t      'shortmid': \"\\u2223\",\n\t      'shortparallel': \"\\u2225\",\n\t      'ShortRightArrow': \"\\u2192\",\n\t      'ShortUpArrow': \"\\u2191\",\n\t      'shy': '\\xAD',\n\t      'sigma': \"\\u03C3\",\n\t      'Sigma': \"\\u03A3\",\n\t      'sigmaf': \"\\u03C2\",\n\t      'sigmav': \"\\u03C2\",\n\t      'sim': \"\\u223C\",\n\t      'simdot': \"\\u2A6A\",\n\t      'sime': \"\\u2243\",\n\t      'simeq': \"\\u2243\",\n\t      'simg': \"\\u2A9E\",\n\t      'simgE': \"\\u2AA0\",\n\t      'siml': \"\\u2A9D\",\n\t      'simlE': \"\\u2A9F\",\n\t      'simne': \"\\u2246\",\n\t      'simplus': \"\\u2A24\",\n\t      'simrarr': \"\\u2972\",\n\t      'slarr': \"\\u2190\",\n\t      'SmallCircle': \"\\u2218\",\n\t      'smallsetminus': \"\\u2216\",\n\t      'smashp': \"\\u2A33\",\n\t      'smeparsl': \"\\u29E4\",\n\t      'smid': \"\\u2223\",\n\t      'smile': \"\\u2323\",\n\t      'smt': \"\\u2AAA\",\n\t      'smte': \"\\u2AAC\",\n\t      'smtes': \"\\u2AAC\\uFE00\",\n\t      'softcy': \"\\u044C\",\n\t      'SOFTcy': \"\\u042C\",\n\t      'sol': '/',\n\t      'solb': \"\\u29C4\",\n\t      'solbar': \"\\u233F\",\n\t      'sopf': \"\\uD835\\uDD64\",\n\t      'Sopf': \"\\uD835\\uDD4A\",\n\t      'spades': \"\\u2660\",\n\t      'spadesuit': \"\\u2660\",\n\t      'spar': \"\\u2225\",\n\t      'sqcap': \"\\u2293\",\n\t      'sqcaps': \"\\u2293\\uFE00\",\n\t      'sqcup': \"\\u2294\",\n\t      'sqcups': \"\\u2294\\uFE00\",\n\t      'Sqrt': \"\\u221A\",\n\t      'sqsub': \"\\u228F\",\n\t      'sqsube': \"\\u2291\",\n\t      'sqsubset': \"\\u228F\",\n\t      'sqsubseteq': \"\\u2291\",\n\t      'sqsup': \"\\u2290\",\n\t      'sqsupe': \"\\u2292\",\n\t      'sqsupset': \"\\u2290\",\n\t      'sqsupseteq': \"\\u2292\",\n\t      'squ': \"\\u25A1\",\n\t      'square': \"\\u25A1\",\n\t      'Square': \"\\u25A1\",\n\t      'SquareIntersection': \"\\u2293\",\n\t      'SquareSubset': \"\\u228F\",\n\t      'SquareSubsetEqual': \"\\u2291\",\n\t      'SquareSuperset': \"\\u2290\",\n\t      'SquareSupersetEqual': \"\\u2292\",\n\t      'SquareUnion': \"\\u2294\",\n\t      'squarf': \"\\u25AA\",\n\t      'squf': \"\\u25AA\",\n\t      'srarr': \"\\u2192\",\n\t      'sscr': \"\\uD835\\uDCC8\",\n\t      'Sscr': \"\\uD835\\uDCAE\",\n\t      'ssetmn': \"\\u2216\",\n\t      'ssmile': \"\\u2323\",\n\t      'sstarf': \"\\u22C6\",\n\t      'star': \"\\u2606\",\n\t      'Star': \"\\u22C6\",\n\t      'starf': \"\\u2605\",\n\t      'straightepsilon': \"\\u03F5\",\n\t      'straightphi': \"\\u03D5\",\n\t      'strns': '\\xAF',\n\t      'sub': \"\\u2282\",\n\t      'Sub': \"\\u22D0\",\n\t      'subdot': \"\\u2ABD\",\n\t      'sube': \"\\u2286\",\n\t      'subE': \"\\u2AC5\",\n\t      'subedot': \"\\u2AC3\",\n\t      'submult': \"\\u2AC1\",\n\t      'subne': \"\\u228A\",\n\t      'subnE': \"\\u2ACB\",\n\t      'subplus': \"\\u2ABF\",\n\t      'subrarr': \"\\u2979\",\n\t      'subset': \"\\u2282\",\n\t      'Subset': \"\\u22D0\",\n\t      'subseteq': \"\\u2286\",\n\t      'subseteqq': \"\\u2AC5\",\n\t      'SubsetEqual': \"\\u2286\",\n\t      'subsetneq': \"\\u228A\",\n\t      'subsetneqq': \"\\u2ACB\",\n\t      'subsim': \"\\u2AC7\",\n\t      'subsub': \"\\u2AD5\",\n\t      'subsup': \"\\u2AD3\",\n\t      'succ': \"\\u227B\",\n\t      'succapprox': \"\\u2AB8\",\n\t      'succcurlyeq': \"\\u227D\",\n\t      'Succeeds': \"\\u227B\",\n\t      'SucceedsEqual': \"\\u2AB0\",\n\t      'SucceedsSlantEqual': \"\\u227D\",\n\t      'SucceedsTilde': \"\\u227F\",\n\t      'succeq': \"\\u2AB0\",\n\t      'succnapprox': \"\\u2ABA\",\n\t      'succneqq': \"\\u2AB6\",\n\t      'succnsim': \"\\u22E9\",\n\t      'succsim': \"\\u227F\",\n\t      'SuchThat': \"\\u220B\",\n\t      'sum': \"\\u2211\",\n\t      'Sum': \"\\u2211\",\n\t      'sung': \"\\u266A\",\n\t      'sup': \"\\u2283\",\n\t      'Sup': \"\\u22D1\",\n\t      'sup1': '\\xB9',\n\t      'sup2': '\\xB2',\n\t      'sup3': '\\xB3',\n\t      'supdot': \"\\u2ABE\",\n\t      'supdsub': \"\\u2AD8\",\n\t      'supe': \"\\u2287\",\n\t      'supE': \"\\u2AC6\",\n\t      'supedot': \"\\u2AC4\",\n\t      'Superset': \"\\u2283\",\n\t      'SupersetEqual': \"\\u2287\",\n\t      'suphsol': \"\\u27C9\",\n\t      'suphsub': \"\\u2AD7\",\n\t      'suplarr': \"\\u297B\",\n\t      'supmult': \"\\u2AC2\",\n\t      'supne': \"\\u228B\",\n\t      'supnE': \"\\u2ACC\",\n\t      'supplus': \"\\u2AC0\",\n\t      'supset': \"\\u2283\",\n\t      'Supset': \"\\u22D1\",\n\t      'supseteq': \"\\u2287\",\n\t      'supseteqq': \"\\u2AC6\",\n\t      'supsetneq': \"\\u228B\",\n\t      'supsetneqq': \"\\u2ACC\",\n\t      'supsim': \"\\u2AC8\",\n\t      'supsub': \"\\u2AD4\",\n\t      'supsup': \"\\u2AD6\",\n\t      'swarhk': \"\\u2926\",\n\t      'swarr': \"\\u2199\",\n\t      'swArr': \"\\u21D9\",\n\t      'swarrow': \"\\u2199\",\n\t      'swnwar': \"\\u292A\",\n\t      'szlig': '\\xDF',\n\t      'Tab': '\\t',\n\t      'target': \"\\u2316\",\n\t      'tau': \"\\u03C4\",\n\t      'Tau': \"\\u03A4\",\n\t      'tbrk': \"\\u23B4\",\n\t      'tcaron': \"\\u0165\",\n\t      'Tcaron': \"\\u0164\",\n\t      'tcedil': \"\\u0163\",\n\t      'Tcedil': \"\\u0162\",\n\t      'tcy': \"\\u0442\",\n\t      'Tcy': \"\\u0422\",\n\t      'tdot': \"\\u20DB\",\n\t      'telrec': \"\\u2315\",\n\t      'tfr': \"\\uD835\\uDD31\",\n\t      'Tfr': \"\\uD835\\uDD17\",\n\t      'there4': \"\\u2234\",\n\t      'therefore': \"\\u2234\",\n\t      'Therefore': \"\\u2234\",\n\t      'theta': \"\\u03B8\",\n\t      'Theta': \"\\u0398\",\n\t      'thetasym': \"\\u03D1\",\n\t      'thetav': \"\\u03D1\",\n\t      'thickapprox': \"\\u2248\",\n\t      'thicksim': \"\\u223C\",\n\t      'ThickSpace': \"\\u205F\\u200A\",\n\t      'thinsp': \"\\u2009\",\n\t      'ThinSpace': \"\\u2009\",\n\t      'thkap': \"\\u2248\",\n\t      'thksim': \"\\u223C\",\n\t      'thorn': '\\xFE',\n\t      'THORN': '\\xDE',\n\t      'tilde': \"\\u02DC\",\n\t      'Tilde': \"\\u223C\",\n\t      'TildeEqual': \"\\u2243\",\n\t      'TildeFullEqual': \"\\u2245\",\n\t      'TildeTilde': \"\\u2248\",\n\t      'times': '\\xD7',\n\t      'timesb': \"\\u22A0\",\n\t      'timesbar': \"\\u2A31\",\n\t      'timesd': \"\\u2A30\",\n\t      'tint': \"\\u222D\",\n\t      'toea': \"\\u2928\",\n\t      'top': \"\\u22A4\",\n\t      'topbot': \"\\u2336\",\n\t      'topcir': \"\\u2AF1\",\n\t      'topf': \"\\uD835\\uDD65\",\n\t      'Topf': \"\\uD835\\uDD4B\",\n\t      'topfork': \"\\u2ADA\",\n\t      'tosa': \"\\u2929\",\n\t      'tprime': \"\\u2034\",\n\t      'trade': \"\\u2122\",\n\t      'TRADE': \"\\u2122\",\n\t      'triangle': \"\\u25B5\",\n\t      'triangledown': \"\\u25BF\",\n\t      'triangleleft': \"\\u25C3\",\n\t      'trianglelefteq': \"\\u22B4\",\n\t      'triangleq': \"\\u225C\",\n\t      'triangleright': \"\\u25B9\",\n\t      'trianglerighteq': \"\\u22B5\",\n\t      'tridot': \"\\u25EC\",\n\t      'trie': \"\\u225C\",\n\t      'triminus': \"\\u2A3A\",\n\t      'TripleDot': \"\\u20DB\",\n\t      'triplus': \"\\u2A39\",\n\t      'trisb': \"\\u29CD\",\n\t      'tritime': \"\\u2A3B\",\n\t      'trpezium': \"\\u23E2\",\n\t      'tscr': \"\\uD835\\uDCC9\",\n\t      'Tscr': \"\\uD835\\uDCAF\",\n\t      'tscy': \"\\u0446\",\n\t      'TScy': \"\\u0426\",\n\t      'tshcy': \"\\u045B\",\n\t      'TSHcy': \"\\u040B\",\n\t      'tstrok': \"\\u0167\",\n\t      'Tstrok': \"\\u0166\",\n\t      'twixt': \"\\u226C\",\n\t      'twoheadleftarrow': \"\\u219E\",\n\t      'twoheadrightarrow': \"\\u21A0\",\n\t      'uacute': '\\xFA',\n\t      'Uacute': '\\xDA',\n\t      'uarr': \"\\u2191\",\n\t      'uArr': \"\\u21D1\",\n\t      'Uarr': \"\\u219F\",\n\t      'Uarrocir': \"\\u2949\",\n\t      'ubrcy': \"\\u045E\",\n\t      'Ubrcy': \"\\u040E\",\n\t      'ubreve': \"\\u016D\",\n\t      'Ubreve': \"\\u016C\",\n\t      'ucirc': '\\xFB',\n\t      'Ucirc': '\\xDB',\n\t      'ucy': \"\\u0443\",\n\t      'Ucy': \"\\u0423\",\n\t      'udarr': \"\\u21C5\",\n\t      'udblac': \"\\u0171\",\n\t      'Udblac': \"\\u0170\",\n\t      'udhar': \"\\u296E\",\n\t      'ufisht': \"\\u297E\",\n\t      'ufr': \"\\uD835\\uDD32\",\n\t      'Ufr': \"\\uD835\\uDD18\",\n\t      'ugrave': '\\xF9',\n\t      'Ugrave': '\\xD9',\n\t      'uHar': \"\\u2963\",\n\t      'uharl': \"\\u21BF\",\n\t      'uharr': \"\\u21BE\",\n\t      'uhblk': \"\\u2580\",\n\t      'ulcorn': \"\\u231C\",\n\t      'ulcorner': \"\\u231C\",\n\t      'ulcrop': \"\\u230F\",\n\t      'ultri': \"\\u25F8\",\n\t      'umacr': \"\\u016B\",\n\t      'Umacr': \"\\u016A\",\n\t      'uml': '\\xA8',\n\t      'UnderBar': '_',\n\t      'UnderBrace': \"\\u23DF\",\n\t      'UnderBracket': \"\\u23B5\",\n\t      'UnderParenthesis': \"\\u23DD\",\n\t      'Union': \"\\u22C3\",\n\t      'UnionPlus': \"\\u228E\",\n\t      'uogon': \"\\u0173\",\n\t      'Uogon': \"\\u0172\",\n\t      'uopf': \"\\uD835\\uDD66\",\n\t      'Uopf': \"\\uD835\\uDD4C\",\n\t      'uparrow': \"\\u2191\",\n\t      'Uparrow': \"\\u21D1\",\n\t      'UpArrow': \"\\u2191\",\n\t      'UpArrowBar': \"\\u2912\",\n\t      'UpArrowDownArrow': \"\\u21C5\",\n\t      'updownarrow': \"\\u2195\",\n\t      'Updownarrow': \"\\u21D5\",\n\t      'UpDownArrow': \"\\u2195\",\n\t      'UpEquilibrium': \"\\u296E\",\n\t      'upharpoonleft': \"\\u21BF\",\n\t      'upharpoonright': \"\\u21BE\",\n\t      'uplus': \"\\u228E\",\n\t      'UpperLeftArrow': \"\\u2196\",\n\t      'UpperRightArrow': \"\\u2197\",\n\t      'upsi': \"\\u03C5\",\n\t      'Upsi': \"\\u03D2\",\n\t      'upsih': \"\\u03D2\",\n\t      'upsilon': \"\\u03C5\",\n\t      'Upsilon': \"\\u03A5\",\n\t      'UpTee': \"\\u22A5\",\n\t      'UpTeeArrow': \"\\u21A5\",\n\t      'upuparrows': \"\\u21C8\",\n\t      'urcorn': \"\\u231D\",\n\t      'urcorner': \"\\u231D\",\n\t      'urcrop': \"\\u230E\",\n\t      'uring': \"\\u016F\",\n\t      'Uring': \"\\u016E\",\n\t      'urtri': \"\\u25F9\",\n\t      'uscr': \"\\uD835\\uDCCA\",\n\t      'Uscr': \"\\uD835\\uDCB0\",\n\t      'utdot': \"\\u22F0\",\n\t      'utilde': \"\\u0169\",\n\t      'Utilde': \"\\u0168\",\n\t      'utri': \"\\u25B5\",\n\t      'utrif': \"\\u25B4\",\n\t      'uuarr': \"\\u21C8\",\n\t      'uuml': '\\xFC',\n\t      'Uuml': '\\xDC',\n\t      'uwangle': \"\\u29A7\",\n\t      'vangrt': \"\\u299C\",\n\t      'varepsilon': \"\\u03F5\",\n\t      'varkappa': \"\\u03F0\",\n\t      'varnothing': \"\\u2205\",\n\t      'varphi': \"\\u03D5\",\n\t      'varpi': \"\\u03D6\",\n\t      'varpropto': \"\\u221D\",\n\t      'varr': \"\\u2195\",\n\t      'vArr': \"\\u21D5\",\n\t      'varrho': \"\\u03F1\",\n\t      'varsigma': \"\\u03C2\",\n\t      'varsubsetneq': \"\\u228A\\uFE00\",\n\t      'varsubsetneqq': \"\\u2ACB\\uFE00\",\n\t      'varsupsetneq': \"\\u228B\\uFE00\",\n\t      'varsupsetneqq': \"\\u2ACC\\uFE00\",\n\t      'vartheta': \"\\u03D1\",\n\t      'vartriangleleft': \"\\u22B2\",\n\t      'vartriangleright': \"\\u22B3\",\n\t      'vBar': \"\\u2AE8\",\n\t      'Vbar': \"\\u2AEB\",\n\t      'vBarv': \"\\u2AE9\",\n\t      'vcy': \"\\u0432\",\n\t      'Vcy': \"\\u0412\",\n\t      'vdash': \"\\u22A2\",\n\t      'vDash': \"\\u22A8\",\n\t      'Vdash': \"\\u22A9\",\n\t      'VDash': \"\\u22AB\",\n\t      'Vdashl': \"\\u2AE6\",\n\t      'vee': \"\\u2228\",\n\t      'Vee': \"\\u22C1\",\n\t      'veebar': \"\\u22BB\",\n\t      'veeeq': \"\\u225A\",\n\t      'vellip': \"\\u22EE\",\n\t      'verbar': '|',\n\t      'Verbar': \"\\u2016\",\n\t      'vert': '|',\n\t      'Vert': \"\\u2016\",\n\t      'VerticalBar': \"\\u2223\",\n\t      'VerticalLine': '|',\n\t      'VerticalSeparator': \"\\u2758\",\n\t      'VerticalTilde': \"\\u2240\",\n\t      'VeryThinSpace': \"\\u200A\",\n\t      'vfr': \"\\uD835\\uDD33\",\n\t      'Vfr': \"\\uD835\\uDD19\",\n\t      'vltri': \"\\u22B2\",\n\t      'vnsub': \"\\u2282\\u20D2\",\n\t      'vnsup': \"\\u2283\\u20D2\",\n\t      'vopf': \"\\uD835\\uDD67\",\n\t      'Vopf': \"\\uD835\\uDD4D\",\n\t      'vprop': \"\\u221D\",\n\t      'vrtri': \"\\u22B3\",\n\t      'vscr': \"\\uD835\\uDCCB\",\n\t      'Vscr': \"\\uD835\\uDCB1\",\n\t      'vsubne': \"\\u228A\\uFE00\",\n\t      'vsubnE': \"\\u2ACB\\uFE00\",\n\t      'vsupne': \"\\u228B\\uFE00\",\n\t      'vsupnE': \"\\u2ACC\\uFE00\",\n\t      'Vvdash': \"\\u22AA\",\n\t      'vzigzag': \"\\u299A\",\n\t      'wcirc': \"\\u0175\",\n\t      'Wcirc': \"\\u0174\",\n\t      'wedbar': \"\\u2A5F\",\n\t      'wedge': \"\\u2227\",\n\t      'Wedge': \"\\u22C0\",\n\t      'wedgeq': \"\\u2259\",\n\t      'weierp': \"\\u2118\",\n\t      'wfr': \"\\uD835\\uDD34\",\n\t      'Wfr': \"\\uD835\\uDD1A\",\n\t      'wopf': \"\\uD835\\uDD68\",\n\t      'Wopf': \"\\uD835\\uDD4E\",\n\t      'wp': \"\\u2118\",\n\t      'wr': \"\\u2240\",\n\t      'wreath': \"\\u2240\",\n\t      'wscr': \"\\uD835\\uDCCC\",\n\t      'Wscr': \"\\uD835\\uDCB2\",\n\t      'xcap': \"\\u22C2\",\n\t      'xcirc': \"\\u25EF\",\n\t      'xcup': \"\\u22C3\",\n\t      'xdtri': \"\\u25BD\",\n\t      'xfr': \"\\uD835\\uDD35\",\n\t      'Xfr': \"\\uD835\\uDD1B\",\n\t      'xharr': \"\\u27F7\",\n\t      'xhArr': \"\\u27FA\",\n\t      'xi': \"\\u03BE\",\n\t      'Xi': \"\\u039E\",\n\t      'xlarr': \"\\u27F5\",\n\t      'xlArr': \"\\u27F8\",\n\t      'xmap': \"\\u27FC\",\n\t      'xnis': \"\\u22FB\",\n\t      'xodot': \"\\u2A00\",\n\t      'xopf': \"\\uD835\\uDD69\",\n\t      'Xopf': \"\\uD835\\uDD4F\",\n\t      'xoplus': \"\\u2A01\",\n\t      'xotime': \"\\u2A02\",\n\t      'xrarr': \"\\u27F6\",\n\t      'xrArr': \"\\u27F9\",\n\t      'xscr': \"\\uD835\\uDCCD\",\n\t      'Xscr': \"\\uD835\\uDCB3\",\n\t      'xsqcup': \"\\u2A06\",\n\t      'xuplus': \"\\u2A04\",\n\t      'xutri': \"\\u25B3\",\n\t      'xvee': \"\\u22C1\",\n\t      'xwedge': \"\\u22C0\",\n\t      'yacute': '\\xFD',\n\t      'Yacute': '\\xDD',\n\t      'yacy': \"\\u044F\",\n\t      'YAcy': \"\\u042F\",\n\t      'ycirc': \"\\u0177\",\n\t      'Ycirc': \"\\u0176\",\n\t      'ycy': \"\\u044B\",\n\t      'Ycy': \"\\u042B\",\n\t      'yen': '\\xA5',\n\t      'yfr': \"\\uD835\\uDD36\",\n\t      'Yfr': \"\\uD835\\uDD1C\",\n\t      'yicy': \"\\u0457\",\n\t      'YIcy': \"\\u0407\",\n\t      'yopf': \"\\uD835\\uDD6A\",\n\t      'Yopf': \"\\uD835\\uDD50\",\n\t      'yscr': \"\\uD835\\uDCCE\",\n\t      'Yscr': \"\\uD835\\uDCB4\",\n\t      'yucy': \"\\u044E\",\n\t      'YUcy': \"\\u042E\",\n\t      'yuml': '\\xFF',\n\t      'Yuml': \"\\u0178\",\n\t      'zacute': \"\\u017A\",\n\t      'Zacute': \"\\u0179\",\n\t      'zcaron': \"\\u017E\",\n\t      'Zcaron': \"\\u017D\",\n\t      'zcy': \"\\u0437\",\n\t      'Zcy': \"\\u0417\",\n\t      'zdot': \"\\u017C\",\n\t      'Zdot': \"\\u017B\",\n\t      'zeetrf': \"\\u2128\",\n\t      'ZeroWidthSpace': \"\\u200B\",\n\t      'zeta': \"\\u03B6\",\n\t      'Zeta': \"\\u0396\",\n\t      'zfr': \"\\uD835\\uDD37\",\n\t      'Zfr': \"\\u2128\",\n\t      'zhcy': \"\\u0436\",\n\t      'ZHcy': \"\\u0416\",\n\t      'zigrarr': \"\\u21DD\",\n\t      'zopf': \"\\uD835\\uDD6B\",\n\t      'Zopf': \"\\u2124\",\n\t      'zscr': \"\\uD835\\uDCCF\",\n\t      'Zscr': \"\\uD835\\uDCB5\",\n\t      'zwj': \"\\u200D\",\n\t      'zwnj': \"\\u200C\"\n\t    };\n\t    var decodeMapLegacy = {\n\t      'aacute': '\\xE1',\n\t      'Aacute': '\\xC1',\n\t      'acirc': '\\xE2',\n\t      'Acirc': '\\xC2',\n\t      'acute': '\\xB4',\n\t      'aelig': '\\xE6',\n\t      'AElig': '\\xC6',\n\t      'agrave': '\\xE0',\n\t      'Agrave': '\\xC0',\n\t      'amp': '&',\n\t      'AMP': '&',\n\t      'aring': '\\xE5',\n\t      'Aring': '\\xC5',\n\t      'atilde': '\\xE3',\n\t      'Atilde': '\\xC3',\n\t      'auml': '\\xE4',\n\t      'Auml': '\\xC4',\n\t      'brvbar': '\\xA6',\n\t      'ccedil': '\\xE7',\n\t      'Ccedil': '\\xC7',\n\t      'cedil': '\\xB8',\n\t      'cent': '\\xA2',\n\t      'copy': '\\xA9',\n\t      'COPY': '\\xA9',\n\t      'curren': '\\xA4',\n\t      'deg': '\\xB0',\n\t      'divide': '\\xF7',\n\t      'eacute': '\\xE9',\n\t      'Eacute': '\\xC9',\n\t      'ecirc': '\\xEA',\n\t      'Ecirc': '\\xCA',\n\t      'egrave': '\\xE8',\n\t      'Egrave': '\\xC8',\n\t      'eth': '\\xF0',\n\t      'ETH': '\\xD0',\n\t      'euml': '\\xEB',\n\t      'Euml': '\\xCB',\n\t      'frac12': '\\xBD',\n\t      'frac14': '\\xBC',\n\t      'frac34': '\\xBE',\n\t      'gt': '>',\n\t      'GT': '>',\n\t      'iacute': '\\xED',\n\t      'Iacute': '\\xCD',\n\t      'icirc': '\\xEE',\n\t      'Icirc': '\\xCE',\n\t      'iexcl': '\\xA1',\n\t      'igrave': '\\xEC',\n\t      'Igrave': '\\xCC',\n\t      'iquest': '\\xBF',\n\t      'iuml': '\\xEF',\n\t      'Iuml': '\\xCF',\n\t      'laquo': '\\xAB',\n\t      'lt': '<',\n\t      'LT': '<',\n\t      'macr': '\\xAF',\n\t      'micro': '\\xB5',\n\t      'middot': '\\xB7',\n\t      'nbsp': '\\xA0',\n\t      'not': '\\xAC',\n\t      'ntilde': '\\xF1',\n\t      'Ntilde': '\\xD1',\n\t      'oacute': '\\xF3',\n\t      'Oacute': '\\xD3',\n\t      'ocirc': '\\xF4',\n\t      'Ocirc': '\\xD4',\n\t      'ograve': '\\xF2',\n\t      'Ograve': '\\xD2',\n\t      'ordf': '\\xAA',\n\t      'ordm': '\\xBA',\n\t      'oslash': '\\xF8',\n\t      'Oslash': '\\xD8',\n\t      'otilde': '\\xF5',\n\t      'Otilde': '\\xD5',\n\t      'ouml': '\\xF6',\n\t      'Ouml': '\\xD6',\n\t      'para': '\\xB6',\n\t      'plusmn': '\\xB1',\n\t      'pound': '\\xA3',\n\t      'quot': '\"',\n\t      'QUOT': '\"',\n\t      'raquo': '\\xBB',\n\t      'reg': '\\xAE',\n\t      'REG': '\\xAE',\n\t      'sect': '\\xA7',\n\t      'shy': '\\xAD',\n\t      'sup1': '\\xB9',\n\t      'sup2': '\\xB2',\n\t      'sup3': '\\xB3',\n\t      'szlig': '\\xDF',\n\t      'thorn': '\\xFE',\n\t      'THORN': '\\xDE',\n\t      'times': '\\xD7',\n\t      'uacute': '\\xFA',\n\t      'Uacute': '\\xDA',\n\t      'ucirc': '\\xFB',\n\t      'Ucirc': '\\xDB',\n\t      'ugrave': '\\xF9',\n\t      'Ugrave': '\\xD9',\n\t      'uml': '\\xA8',\n\t      'uuml': '\\xFC',\n\t      'Uuml': '\\xDC',\n\t      'yacute': '\\xFD',\n\t      'Yacute': '\\xDD',\n\t      'yen': '\\xA5',\n\t      'yuml': '\\xFF'\n\t    };\n\t    var decodeMapNumeric = {\n\t      '0': \"\\uFFFD\",\n\t      '128': \"\\u20AC\",\n\t      '130': \"\\u201A\",\n\t      '131': \"\\u0192\",\n\t      '132': \"\\u201E\",\n\t      '133': \"\\u2026\",\n\t      '134': \"\\u2020\",\n\t      '135': \"\\u2021\",\n\t      '136': \"\\u02C6\",\n\t      '137': \"\\u2030\",\n\t      '138': \"\\u0160\",\n\t      '139': \"\\u2039\",\n\t      '140': \"\\u0152\",\n\t      '142': \"\\u017D\",\n\t      '145': \"\\u2018\",\n\t      '146': \"\\u2019\",\n\t      '147': \"\\u201C\",\n\t      '148': \"\\u201D\",\n\t      '149': \"\\u2022\",\n\t      '150': \"\\u2013\",\n\t      '151': \"\\u2014\",\n\t      '152': \"\\u02DC\",\n\t      '153': \"\\u2122\",\n\t      '154': \"\\u0161\",\n\t      '155': \"\\u203A\",\n\t      '156': \"\\u0153\",\n\t      '158': \"\\u017E\",\n\t      '159': \"\\u0178\"\n\t    };\n\t    var invalidReferenceCodePoints = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65000, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];\n\t    /*--------------------------------------------------------------------------*/\n\n\t    var stringFromCharCode = String.fromCharCode;\n\t    var object = {};\n\t    var hasOwnProperty = object.hasOwnProperty;\n\n\t    var has = function has(object, propertyName) {\n\t      return hasOwnProperty.call(object, propertyName);\n\t    };\n\n\t    var contains = function contains(array, value) {\n\t      var index = -1;\n\t      var length = array.length;\n\n\t      while (++index < length) {\n\t        if (array[index] == value) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    var merge = function merge(options, defaults) {\n\t      if (!options) {\n\t        return defaults;\n\t      }\n\n\t      var result = {};\n\t      var key;\n\n\t      for (key in defaults) {\n\t        // A `hasOwnProperty` check is not needed here, since only recognized\n\t        // option names are used anyway. Any others are ignored.\n\t        result[key] = has(options, key) ? options[key] : defaults[key];\n\t      }\n\n\t      return result;\n\t    }; // Modified version of `ucs2encode`; see https://mths.be/punycode.\n\n\n\t    var codePointToSymbol = function codePointToSymbol(codePoint, strict) {\n\t      var output = '';\n\n\t      if (codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF) {\n\t        // See issue #4:\n\t        // “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t        // greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t        // REPLACEMENT CHARACTER.”\n\t        if (strict) {\n\t          parseError('character reference outside the permissible Unicode range');\n\t        }\n\n\t        return \"\\uFFFD\";\n\t      }\n\n\t      if (has(decodeMapNumeric, codePoint)) {\n\t        if (strict) {\n\t          parseError('disallowed character reference');\n\t        }\n\n\t        return decodeMapNumeric[codePoint];\n\t      }\n\n\t      if (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t        parseError('disallowed character reference');\n\t      }\n\n\t      if (codePoint > 0xFFFF) {\n\t        codePoint -= 0x10000;\n\t        output += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t        codePoint = 0xDC00 | codePoint & 0x3FF;\n\t      }\n\n\t      output += stringFromCharCode(codePoint);\n\t      return output;\n\t    };\n\n\t    var hexEscape = function hexEscape(codePoint) {\n\t      return '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t    };\n\n\t    var decEscape = function decEscape(codePoint) {\n\t      return '&#' + codePoint + ';';\n\t    };\n\n\t    var parseError = function parseError(message) {\n\t      throw Error('Parse error: ' + message);\n\t    };\n\t    /*--------------------------------------------------------------------------*/\n\n\n\t    var encode = function encode(string, options) {\n\t      options = merge(options, encode.options);\n\t      var strict = options.strict;\n\n\t      if (strict && regexInvalidRawCodePoint.test(string)) {\n\t        parseError('forbidden code point');\n\t      }\n\n\t      var encodeEverything = options.encodeEverything;\n\t      var useNamedReferences = options.useNamedReferences;\n\t      var allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t      var escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t      var escapeBmpSymbol = function escapeBmpSymbol(symbol) {\n\t        return escapeCodePoint(symbol.charCodeAt(0));\n\t      };\n\n\t      if (encodeEverything) {\n\t        // Encode ASCII symbols.\n\t        string = string.replace(regexAsciiWhitelist, function (symbol) {\n\t          // Use named references if requested & possible.\n\t          if (useNamedReferences && has(encodeMap, symbol)) {\n\t            return '&' + encodeMap[symbol] + ';';\n\t          }\n\n\t          return escapeBmpSymbol(symbol);\n\t        }); // Shorten a few escapes that represent two symbols, of which at least one\n\t        // is within the ASCII range.\n\n\t        if (useNamedReferences) {\n\t          string = string.replace(/&gt;\\u20D2/g, '&nvgt;').replace(/&lt;\\u20D2/g, '&nvlt;').replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t        } // Encode non-ASCII symbols.\n\n\n\t        if (useNamedReferences) {\n\t          // Encode non-ASCII symbols that can be replaced with a named reference.\n\t          string = string.replace(regexEncodeNonAscii, function (string) {\n\t            // Note: there is no need to check `has(encodeMap, string)` here.\n\t            return '&' + encodeMap[string] + ';';\n\t          });\n\t        } // Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\n\t      } else if (useNamedReferences) {\n\t        // Apply named character references.\n\t        // Encode `<>\"'&` using named character references.\n\t        if (!allowUnsafeSymbols) {\n\t          string = string.replace(regexEscape, function (string) {\n\t            return '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t          });\n\t        } // Shorten escapes that represent two symbols, of which at least one is\n\t        // `<>\"'&`.\n\n\n\t        string = string.replace(/&gt;\\u20D2/g, '&nvgt;').replace(/&lt;\\u20D2/g, '&nvlt;'); // Encode non-ASCII symbols that can be replaced with a named reference.\n\n\t        string = string.replace(regexEncodeNonAscii, function (string) {\n\t          // Note: there is no need to check `has(encodeMap, string)` here.\n\t          return '&' + encodeMap[string] + ';';\n\t        });\n\t      } else if (!allowUnsafeSymbols) {\n\t        // Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t        // using named character references.\n\t        string = string.replace(regexEscape, escapeBmpSymbol);\n\t      }\n\n\t      return string // Encode astral symbols.\n\t      .replace(regexAstralSymbols, function ($0) {\n\t        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t        var high = $0.charCodeAt(0);\n\t        var low = $0.charCodeAt(1);\n\t        var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t        return escapeCodePoint(codePoint);\n\t      }) // Encode any remaining BMP symbols that are not printable ASCII symbols\n\t      // using a hexadecimal escape.\n\t      .replace(regexBmpWhitelist, escapeBmpSymbol);\n\t    }; // Expose default options (so they can be overridden globally).\n\n\n\t    encode.options = {\n\t      'allowUnsafeSymbols': false,\n\t      'encodeEverything': false,\n\t      'strict': false,\n\t      'useNamedReferences': false,\n\t      'decimal': false\n\t    };\n\n\t    var decode = function decode(html, options) {\n\t      options = merge(options, decode.options);\n\t      var strict = options.strict;\n\n\t      if (strict && regexInvalidEntity.test(html)) {\n\t        parseError('malformed character reference');\n\t      }\n\n\t      return html.replace(regexDecode, function ($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t        var codePoint;\n\t        var semicolon;\n\t        var decDigits;\n\t        var hexDigits;\n\t        var reference;\n\t        var next;\n\n\t        if ($1) {\n\t          reference = $1; // Note: there is no need to check `has(decodeMap, reference)`.\n\n\t          return decodeMap[reference];\n\t        }\n\n\t        if ($2) {\n\t          // Decode named character references without trailing `;`, e.g. `&amp`.\n\t          // This is only a parse error if it gets converted to `&`, or if it is\n\t          // followed by `=` in an attribute context.\n\t          reference = $2;\n\t          next = $3;\n\n\t          if (next && options.isAttributeValue) {\n\t            if (strict && next == '=') {\n\t              parseError('`&` did not start a character reference');\n\t            }\n\n\t            return $0;\n\t          } else {\n\t            if (strict) {\n\t              parseError('named character reference was not terminated by a semicolon');\n\t            } // Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\n\n\t            return decodeMapLegacy[reference] + (next || '');\n\t          }\n\t        }\n\n\t        if ($4) {\n\t          // Decode decimal escapes, e.g. `&#119558;`.\n\t          decDigits = $4;\n\t          semicolon = $5;\n\n\t          if (strict && !semicolon) {\n\t            parseError('character reference was not terminated by a semicolon');\n\t          }\n\n\t          codePoint = parseInt(decDigits, 10);\n\t          return codePointToSymbol(codePoint, strict);\n\t        }\n\n\t        if ($6) {\n\t          // Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t          hexDigits = $6;\n\t          semicolon = $7;\n\n\t          if (strict && !semicolon) {\n\t            parseError('character reference was not terminated by a semicolon');\n\t          }\n\n\t          codePoint = parseInt(hexDigits, 16);\n\t          return codePointToSymbol(codePoint, strict);\n\t        } // If we’re still here, `if ($7)` is implied; it’s an ambiguous\n\t        // ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\n\n\t        if (strict) {\n\t          parseError('named character reference was not terminated by a semicolon');\n\t        }\n\n\t        return $0;\n\t      });\n\t    }; // Expose default options (so they can be overridden globally).\n\n\n\t    decode.options = {\n\t      'isAttributeValue': false,\n\t      'strict': false\n\t    };\n\n\t    var escape = function escape(string) {\n\t      return string.replace(regexEscape, function ($0) {\n\t        // Note: there is no need to check `has(escapeMap, $0)` here.\n\t        return escapeMap[$0];\n\t      });\n\t    };\n\t    /*--------------------------------------------------------------------------*/\n\n\n\t    var he = {\n\t      'version': '1.2.0',\n\t      'encode': encode,\n\t      'decode': decode,\n\t      'escape': escape,\n\t      'unescape': decode\n\t    }; // Some AMD build optimizers, like r.js, check for specific condition patterns\n\t    // like the following:\n\n\t    if (freeExports && !freeExports.nodeType) {\n\t      if (freeModule) {\n\t        // in Node.js, io.js, or RingoJS v0.8.0+\n\t        freeModule.exports = he;\n\t      } else {\n\t        // in Narwhal or RingoJS v0.7.0-\n\t        for (var key in he) {\n\t          has(he, key) && (freeExports[key] = he[key]);\n\t        }\n\t      }\n\t    } else {\n\t      // in Rhino or a web browser\n\t      root.he = he;\n\t    }\n\t  })(commonjsGlobal);\n\t});\n\n\tvar propertyIsEnumerable = objectPropertyIsEnumerable.f;\n\n\t// `Object.{ entries, values }` methods implementation\n\tvar createMethod$5 = function (TO_ENTRIES) {\n\t  return function (it) {\n\t    var O = toIndexedObject(it);\n\t    var keys = objectKeys(O);\n\t    var length = keys.length;\n\t    var i = 0;\n\t    var result = [];\n\t    var key;\n\t    while (length > i) {\n\t      key = keys[i++];\n\t      if (!descriptors || propertyIsEnumerable.call(O, key)) {\n\t        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t};\n\n\tvar objectToArray = {\n\t  // `Object.entries` method\n\t  // https://tc39.es/ecma262/#sec-object.entries\n\t  entries: createMethod$5(true),\n\t  // `Object.values` method\n\t  // https://tc39.es/ecma262/#sec-object.values\n\t  values: createMethod$5(false)\n\t};\n\n\tvar $values = objectToArray.values;\n\n\t// `Object.values` method\n\t// https://tc39.es/ecma262/#sec-object.values\n\t_export({ target: 'Object', stat: true }, {\n\t  values: function values(O) {\n\t    return $values(O);\n\t  }\n\t});\n\n\tvar format$1 = util.format;\n\t/**\n\t * Contains error codes, factory functions to create throwable error objects,\n\t * and warning/deprecation functions.\n\t * @module\n\t */\n\n\t/**\n\t * process.emitWarning or a polyfill\n\t * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options\n\t * @ignore\n\t */\n\n\tvar emitWarning$1 = function emitWarning(msg, type) {\n\t  if (process$1.emitWarning) {\n\t    process$1.emitWarning(msg, type);\n\t  } else {\n\t    /* istanbul ignore next */\n\t    nextTick(function () {\n\t      console.warn(type + ': ' + msg);\n\t    });\n\t  }\n\t};\n\t/**\n\t * Show a deprecation warning. Each distinct message is only displayed once.\n\t * Ignores empty messages.\n\t *\n\t * @param {string} [msg] - Warning to print\n\t * @private\n\t */\n\n\n\tvar deprecate$1 = function deprecate(msg) {\n\t  msg = String(msg);\n\n\t  if (msg && !deprecate.cache[msg]) {\n\t    deprecate.cache[msg] = true;\n\t    emitWarning$1(msg, 'DeprecationWarning');\n\t  }\n\t};\n\n\tdeprecate$1.cache = {};\n\t/**\n\t * Show a generic warning.\n\t * Ignores empty messages.\n\t *\n\t * @param {string} [msg] - Warning to print\n\t * @private\n\t */\n\n\tvar warn = function warn(msg) {\n\t  if (msg) {\n\t    emitWarning$1(msg);\n\t  }\n\t};\n\t/**\n\t * When Mocha throws exceptions (or rejects `Promise`s), it attempts to assign a `code` property to the `Error` object, for easier handling. These are the potential values of `code`.\n\t * @public\n\t * @namespace\n\t * @memberof module:lib/errors\n\t */\n\n\n\tvar constants = {\n\t  /**\n\t   * An unrecoverable error.\n\t   * @constant\n\t   * @default\n\t   */\n\t  FATAL: 'ERR_MOCHA_FATAL',\n\n\t  /**\n\t   * The type of an argument to a function call is invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_ARG_TYPE: 'ERR_MOCHA_INVALID_ARG_TYPE',\n\n\t  /**\n\t   * The value of an argument to a function call is invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_ARG_VALUE: 'ERR_MOCHA_INVALID_ARG_VALUE',\n\n\t  /**\n\t   * Something was thrown, but it wasn't an `Error`\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_EXCEPTION: 'ERR_MOCHA_INVALID_EXCEPTION',\n\n\t  /**\n\t   * An interface (e.g., `Mocha.interfaces`) is unknown or invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_INTERFACE: 'ERR_MOCHA_INVALID_INTERFACE',\n\n\t  /**\n\t   * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_REPORTER: 'ERR_MOCHA_INVALID_REPORTER',\n\n\t  /**\n\t   * `done()` was called twice in a `Test` or `Hook` callback\n\t   * @constant\n\t   * @default\n\t   */\n\t  MULTIPLE_DONE: 'ERR_MOCHA_MULTIPLE_DONE',\n\n\t  /**\n\t   * No files matched the pattern provided by the user\n\t   * @constant\n\t   * @default\n\t   */\n\t  NO_FILES_MATCH_PATTERN: 'ERR_MOCHA_NO_FILES_MATCH_PATTERN',\n\n\t  /**\n\t   * Known, but unsupported behavior of some kind\n\t   * @constant\n\t   * @default\n\t   */\n\t  UNSUPPORTED: 'ERR_MOCHA_UNSUPPORTED',\n\n\t  /**\n\t   * Invalid state transition occurring in `Mocha` instance\n\t   * @constant\n\t   * @default\n\t   */\n\t  INSTANCE_ALREADY_RUNNING: 'ERR_MOCHA_INSTANCE_ALREADY_RUNNING',\n\n\t  /**\n\t   * Invalid state transition occurring in `Mocha` instance\n\t   * @constant\n\t   * @default\n\t   */\n\t  INSTANCE_ALREADY_DISPOSED: 'ERR_MOCHA_INSTANCE_ALREADY_DISPOSED',\n\n\t  /**\n\t   * Use of `only()` w/ `--forbid-only` results in this error.\n\t   * @constant\n\t   * @default\n\t   */\n\t  FORBIDDEN_EXCLUSIVITY: 'ERR_MOCHA_FORBIDDEN_EXCLUSIVITY',\n\n\t  /**\n\t   * To be thrown when a user-defined plugin implementation (e.g., `mochaHooks`) is invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_PLUGIN_IMPLEMENTATION: 'ERR_MOCHA_INVALID_PLUGIN_IMPLEMENTATION',\n\n\t  /**\n\t   * To be thrown when a builtin or third-party plugin definition (the _definition_ of `mochaHooks`) is invalid\n\t   * @constant\n\t   * @default\n\t   */\n\t  INVALID_PLUGIN_DEFINITION: 'ERR_MOCHA_INVALID_PLUGIN_DEFINITION',\n\n\t  /**\n\t   * When a runnable exceeds its allowed run time.\n\t   * @constant\n\t   * @default\n\t   */\n\t  TIMEOUT: 'ERR_MOCHA_TIMEOUT'\n\t};\n\t/**\n\t * A set containing all string values of all Mocha error constants, for use by {@link isMochaError}.\n\t * @private\n\t */\n\n\tvar MOCHA_ERRORS = new Set(Object.values(constants));\n\t/**\n\t * Creates an error object to be thrown when no files to be tested could be found using specified pattern.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} pattern - User-specified argument value.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\tfunction createNoFilesMatchPatternError(message, pattern) {\n\t  var err = new Error(message);\n\t  err.code = constants.NO_FILES_MATCH_PATTERN;\n\t  err.pattern = pattern;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when the reporter specified in the options was not found.\n\t *\n\t * @public\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} reporter - User-specified reporter value.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createInvalidReporterError(message, reporter) {\n\t  var err = new TypeError(message);\n\t  err.code = constants.INVALID_REPORTER;\n\t  err.reporter = reporter;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when the interface specified in the options was not found.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} ui - User-specified interface value.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createInvalidInterfaceError(message, ui) {\n\t  var err = new Error(message);\n\t  err.code = constants.INVALID_INTERFACE;\n\t  err[\"interface\"] = ui;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createUnsupportedError(message) {\n\t  var err = new Error(message);\n\t  err.code = constants.UNSUPPORTED;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when an argument is missing.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} argument - Argument name.\n\t * @param {string} expected - Expected argument datatype.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createMissingArgumentError(message, argument, expected) {\n\t  return createInvalidArgumentTypeError(message, argument, expected);\n\t}\n\t/**\n\t * Creates an error object to be thrown when an argument did not use the supported type\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} argument - Argument name.\n\t * @param {string} expected - Expected argument datatype.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createInvalidArgumentTypeError(message, argument, expected) {\n\t  var err = new TypeError(message);\n\t  err.code = constants.INVALID_ARG_TYPE;\n\t  err.argument = argument;\n\t  err.expected = expected;\n\t  err.actual = _typeof(argument);\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when an argument did not use the supported value\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @param {string} argument - Argument name.\n\t * @param {string} value - Argument value.\n\t * @param {string} [reason] - Why value is invalid.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createInvalidArgumentValueError(message, argument, value, reason) {\n\t  var err = new TypeError(message);\n\t  err.code = constants.INVALID_ARG_VALUE;\n\t  err.argument = argument;\n\t  err.value = value;\n\t  err.reason = typeof reason !== 'undefined' ? reason : 'is invalid';\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createInvalidExceptionError(message, value) {\n\t  var err = new Error(message);\n\t  err.code = constants.INVALID_EXCEPTION;\n\t  err.valueType = _typeof(value);\n\t  err.value = value;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when an unrecoverable error occurs.\n\t *\n\t * @public\n\t * @static\n\t * @param {string} message - Error message to be displayed.\n\t * @returns {Error} instance detailing the error condition\n\t */\n\n\n\tfunction createFatalError(message, value) {\n\t  var err = new Error(message);\n\t  err.code = constants.FATAL;\n\t  err.valueType = _typeof(value);\n\t  err.value = value;\n\t  return err;\n\t}\n\t/**\n\t * Dynamically creates a plugin-type-specific error based on plugin type\n\t * @param {string} message - Error message\n\t * @param {\"reporter\"|\"interface\"} pluginType - Plugin type. Future: expand as needed\n\t * @param {string} [pluginId] - Name/path of plugin, if any\n\t * @throws When `pluginType` is not known\n\t * @public\n\t * @static\n\t * @returns {Error}\n\t */\n\n\n\tfunction createInvalidLegacyPluginError(message, pluginType, pluginId) {\n\t  switch (pluginType) {\n\t    case 'reporter':\n\t      return createInvalidReporterError(message, pluginId);\n\n\t    case 'interface':\n\t      return createInvalidInterfaceError(message, pluginId);\n\n\t    default:\n\t      throw new Error('unknown pluginType \"' + pluginType + '\"');\n\t  }\n\t}\n\t/**\n\t * **DEPRECATED**.  Use {@link createInvalidLegacyPluginError} instead  Dynamically creates a plugin-type-specific error based on plugin type\n\t * @deprecated\n\t * @param {string} message - Error message\n\t * @param {\"reporter\"|\"interface\"} pluginType - Plugin type. Future: expand as needed\n\t * @param {string} [pluginId] - Name/path of plugin, if any\n\t * @throws When `pluginType` is not known\n\t * @public\n\t * @static\n\t * @returns {Error}\n\t */\n\n\n\tfunction createInvalidPluginError() {\n\t  deprecate$1('Use createInvalidLegacyPluginError() instead');\n\t  return createInvalidLegacyPluginError.apply(void 0, arguments);\n\t}\n\t/**\n\t * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.\n\t * @param {string} message The error message to be displayed.\n\t * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`\n\t * @param {Mocha} instance the mocha instance that throw this error\n\t * @static\n\t */\n\n\n\tfunction createMochaInstanceAlreadyDisposedError(message, cleanReferencesAfterRun, instance) {\n\t  var err = new Error(message);\n\t  err.code = constants.INSTANCE_ALREADY_DISPOSED;\n\t  err.cleanReferencesAfterRun = cleanReferencesAfterRun;\n\t  err.instance = instance;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.\n\t * @param {string} message The error message to be displayed.\n\t * @static\n\t * @public\n\t */\n\n\n\tfunction createMochaInstanceAlreadyRunningError(message, instance) {\n\t  var err = new Error(message);\n\t  err.code = constants.INSTANCE_ALREADY_RUNNING;\n\t  err.instance = instance;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when done() is called multiple times in a test\n\t *\n\t * @public\n\t * @param {Runnable} runnable - Original runnable\n\t * @param {Error} [originalErr] - Original error, if any\n\t * @returns {Error} instance detailing the error condition\n\t * @static\n\t */\n\n\n\tfunction createMultipleDoneError(runnable, originalErr) {\n\t  var title;\n\n\t  try {\n\t    title = format$1('<%s>', runnable.fullTitle());\n\n\t    if (runnable.parent.root) {\n\t      title += ' (of root suite)';\n\t    }\n\t  } catch (ignored) {\n\t    title = format$1('<%s> (of unknown suite)', runnable.title);\n\t  }\n\n\t  var message = format$1('done() called multiple times in %s %s', runnable.type ? runnable.type : 'unknown runnable', title);\n\n\t  if (runnable.file) {\n\t    message += format$1(' of file %s', runnable.file);\n\t  }\n\n\t  if (originalErr) {\n\t    message += format$1('; in addition, done() received error: %s', originalErr);\n\t  }\n\n\t  var err = new Error(message);\n\t  err.code = constants.MULTIPLE_DONE;\n\t  err.valueType = _typeof(originalErr);\n\t  err.value = originalErr;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when `.only()` is used with\n\t * `--forbid-only`.\n\t * @static\n\t * @public\n\t * @param {Mocha} mocha - Mocha instance\n\t * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}\n\t */\n\n\n\tfunction createForbiddenExclusivityError(mocha) {\n\t  var err = new Error(mocha.isWorker ? '`.only` is not supported in parallel mode' : '`.only` forbidden by --forbid-only');\n\t  err.code = constants.FORBIDDEN_EXCLUSIVITY;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when a plugin definition is invalid\n\t * @static\n\t * @param {string} msg - Error message\n\t * @param {PluginDefinition} [pluginDef] - Problematic plugin definition\n\t * @public\n\t * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n\t */\n\n\n\tfunction createInvalidPluginDefinitionError(msg, pluginDef) {\n\t  var err = new Error(msg);\n\t  err.code = constants.INVALID_PLUGIN_DEFINITION;\n\t  err.pluginDef = pluginDef;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when a plugin implementation (user code) is invalid\n\t * @static\n\t * @param {string} msg - Error message\n\t * @param {Object} [opts] - Plugin definition and user-supplied implementation\n\t * @param {PluginDefinition} [opts.pluginDef] - Plugin Definition\n\t * @param {*} [opts.pluginImpl] - Plugin Implementation (user-supplied)\n\t * @public\n\t * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n\t */\n\n\n\tfunction createInvalidPluginImplementationError(msg) {\n\t  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t      pluginDef = _ref.pluginDef,\n\t      pluginImpl = _ref.pluginImpl;\n\n\t  var err = new Error(msg);\n\t  err.code = constants.INVALID_PLUGIN_IMPLEMENTATION;\n\t  err.pluginDef = pluginDef;\n\t  err.pluginImpl = pluginImpl;\n\t  return err;\n\t}\n\t/**\n\t * Creates an error object to be thrown when a runnable exceeds its allowed run time.\n\t * @static\n\t * @param {string} msg - Error message\n\t * @param {number} [timeout] - Timeout in ms\n\t * @param {string} [file] - File, if given\n\t * @returns {MochaTimeoutError}\n\t */\n\n\n\tfunction createTimeoutError(msg, timeout, file) {\n\t  var err = new Error(msg);\n\t  err.code = constants.TIMEOUT;\n\t  err.timeout = timeout;\n\t  err.file = file;\n\t  return err;\n\t}\n\t/**\n\t * Returns `true` if an error came out of Mocha.\n\t * _Can suffer from false negatives, but not false positives._\n\t * @static\n\t * @public\n\t * @param {*} err - Error, or anything\n\t * @returns {boolean}\n\t */\n\n\n\tvar isMochaError = function isMochaError(err) {\n\t  return Boolean(err && _typeof(err) === 'object' && MOCHA_ERRORS.has(err.code));\n\t};\n\n\tvar errors = {\n\t  constants: constants,\n\t  createFatalError: createFatalError,\n\t  createForbiddenExclusivityError: createForbiddenExclusivityError,\n\t  createInvalidArgumentTypeError: createInvalidArgumentTypeError,\n\t  createInvalidArgumentValueError: createInvalidArgumentValueError,\n\t  createInvalidExceptionError: createInvalidExceptionError,\n\t  createInvalidInterfaceError: createInvalidInterfaceError,\n\t  createInvalidLegacyPluginError: createInvalidLegacyPluginError,\n\t  createInvalidPluginDefinitionError: createInvalidPluginDefinitionError,\n\t  createInvalidPluginError: createInvalidPluginError,\n\t  createInvalidPluginImplementationError: createInvalidPluginImplementationError,\n\t  createInvalidReporterError: createInvalidReporterError,\n\t  createMissingArgumentError: createMissingArgumentError,\n\t  createMochaInstanceAlreadyDisposedError: createMochaInstanceAlreadyDisposedError,\n\t  createMochaInstanceAlreadyRunningError: createMochaInstanceAlreadyRunningError,\n\t  createMultipleDoneError: createMultipleDoneError,\n\t  createNoFilesMatchPatternError: createNoFilesMatchPatternError,\n\t  createTimeoutError: createTimeoutError,\n\t  createUnsupportedError: createUnsupportedError,\n\t  deprecate: deprecate$1,\n\t  isMochaError: isMochaError,\n\t  warn: warn\n\t};\n\n\tvar _nodeResolve_empty = {};\n\n\tvar _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\t'default': _nodeResolve_empty\n\t});\n\n\tvar require$$11 = getCjsExportFromNamespace(_nodeResolve_empty$1);\n\n\tvar utils = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * Various utility functions used throughout Mocha's codebase.\n\t   * @module utils\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var nanoid = nonSecure.nanoid;\n\t  var MOCHA_ID_PROP_NAME = '__mocha_id__';\n\t  /**\n\t   * Inherit the prototype methods from one constructor into another.\n\t   *\n\t   * @param {function} ctor - Constructor function which needs to inherit the\n\t   *     prototype.\n\t   * @param {function} superCtor - Constructor function to inherit prototype from.\n\t   * @throws {TypeError} if either constructor is null, or if super constructor\n\t   *     lacks a prototype.\n\t   */\n\n\t  exports.inherits = util.inherits;\n\t  /**\n\t   * Escape special characters in the given string of html.\n\t   *\n\t   * @private\n\t   * @param  {string} html\n\t   * @return {string}\n\t   */\n\n\t  exports.escape = function (html) {\n\t    return he.encode(String(html), {\n\t      useNamedReferences: false\n\t    });\n\t  };\n\t  /**\n\t   * Test if the given obj is type of string.\n\t   *\n\t   * @private\n\t   * @param {Object} obj\n\t   * @return {boolean}\n\t   */\n\n\n\t  exports.isString = function (obj) {\n\t    return typeof obj === 'string';\n\t  };\n\t  /**\n\t   * Compute a slug from the given `str`.\n\t   *\n\t   * @private\n\t   * @param {string} str\n\t   * @return {string}\n\t   */\n\n\n\t  exports.slug = function (str) {\n\t    return str.toLowerCase().replace(/\\s+/g, '-').replace(/[^-\\w]/g, '').replace(/-{2,}/g, '-');\n\t  };\n\t  /**\n\t   * Strip the function definition from `str`, and re-indent for pre whitespace.\n\t   *\n\t   * @param {string} str\n\t   * @return {string}\n\t   */\n\n\n\t  exports.clean = function (str) {\n\t    str = str.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '') // (traditional)->  space/name     parameters    body     (lambda)-> parameters       body   multi-statement/single          keep body content\n\t    .replace(/^function(?:\\s*|\\s+[^(]*)\\([^)]*\\)\\s*\\{((?:.|\\n)*?)\\s*\\}$|^\\([^)]*\\)\\s*=>\\s*(?:\\{((?:.|\\n)*?)\\s*\\}|((?:.|\\n)*))$/, '$1$2$3');\n\t    var spaces = str.match(/^\\n?( *)/)[1].length;\n\t    var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n\t    var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs || spaces) + '}', 'gm');\n\t    str = str.replace(re, '');\n\t    return str.trim();\n\t  };\n\t  /**\n\t   * If a value could have properties, and has none, this function is called,\n\t   * which returns a string representation of the empty value.\n\t   *\n\t   * Functions w/ no properties return `'[Function]'`\n\t   * Arrays w/ length === 0 return `'[]'`\n\t   * Objects w/ no properties return `'{}'`\n\t   * All else: return result of `value.toString()`\n\t   *\n\t   * @private\n\t   * @param {*} value The value to inspect.\n\t   * @param {string} typeHint The type of the value\n\t   * @returns {string}\n\t   */\n\n\n\t  function emptyRepresentation(value, typeHint) {\n\t    switch (typeHint) {\n\t      case 'function':\n\t        return '[Function]';\n\n\t      case 'object':\n\t        return '{}';\n\n\t      case 'array':\n\t        return '[]';\n\n\t      default:\n\t        return value.toString();\n\t    }\n\t  }\n\t  /**\n\t   * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n\t   * is.\n\t   *\n\t   * @private\n\t   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n\t   * @param {*} value The value to test.\n\t   * @returns {string} Computed type\n\t   * @example\n\t   * canonicalType({}) // 'object'\n\t   * canonicalType([]) // 'array'\n\t   * canonicalType(1) // 'number'\n\t   * canonicalType(false) // 'boolean'\n\t   * canonicalType(Infinity) // 'number'\n\t   * canonicalType(null) // 'null'\n\t   * canonicalType(new Date()) // 'date'\n\t   * canonicalType(/foo/) // 'regexp'\n\t   * canonicalType('type') // 'string'\n\t   * canonicalType(global) // 'global'\n\t   * canonicalType(new String('foo') // 'object'\n\t   * canonicalType(async function() {}) // 'asyncfunction'\n\t   * canonicalType(await import(name)) // 'module'\n\t   */\n\n\n\t  var canonicalType = exports.canonicalType = function canonicalType(value) {\n\t    if (value === undefined) {\n\t      return 'undefined';\n\t    } else if (value === null) {\n\t      return 'null';\n\t    } else if (isBuffer(value)) {\n\t      return 'buffer';\n\t    }\n\n\t    return Object.prototype.toString.call(value).replace(/^\\[.+\\s(.+?)]$/, '$1').toLowerCase();\n\t  };\n\t  /**\n\t   *\n\t   * Returns a general type or data structure of a variable\n\t   * @private\n\t   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\n\t   * @param {*} value The value to test.\n\t   * @returns {string} One of undefined, boolean, number, string, bigint, symbol, object\n\t   * @example\n\t   * type({}) // 'object'\n\t   * type([]) // 'array'\n\t   * type(1) // 'number'\n\t   * type(false) // 'boolean'\n\t   * type(Infinity) // 'number'\n\t   * type(null) // 'null'\n\t   * type(new Date()) // 'object'\n\t   * type(/foo/) // 'object'\n\t   * type('type') // 'string'\n\t   * type(global) // 'object'\n\t   * type(new String('foo') // 'string'\n\t   */\n\n\n\t  exports.type = function type(value) {\n\t    // Null is special\n\t    if (value === null) return 'null';\n\t    var primitives = new Set(['undefined', 'boolean', 'number', 'string', 'bigint', 'symbol']);\n\n\t    var _type = _typeof(value);\n\n\t    if (_type === 'function') return _type;\n\t    if (primitives.has(_type)) return _type;\n\t    if (value instanceof String) return 'string';\n\t    if (value instanceof Error) return 'error';\n\t    if (Array.isArray(value)) return 'array';\n\t    return _type;\n\t  };\n\t  /**\n\t   * Stringify `value`. Different behavior depending on type of value:\n\t   *\n\t   * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n\t   * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n\t   * - If `value` is an *empty* object, function, or array, return result of function\n\t   *   {@link emptyRepresentation}.\n\t   * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n\t   *   JSON.stringify().\n\t   *\n\t   * @private\n\t   * @see exports.type\n\t   * @param {*} value\n\t   * @return {string}\n\t   */\n\n\n\t  exports.stringify = function (value) {\n\t    var typeHint = canonicalType(value);\n\n\t    if (!~['object', 'array', 'function'].indexOf(typeHint)) {\n\t      if (typeHint === 'buffer') {\n\t        var json = Buffer.prototype.toJSON.call(value); // Based on the toJSON result\n\n\t        return jsonStringify(json.data && json.type ? json.data : json, 2).replace(/,(\\n|$)/g, '$1');\n\t      } // IE7/IE8 has a bizarre String constructor; needs to be coerced\n\t      // into an array and back to obj.\n\n\n\t      if (typeHint === 'string' && _typeof(value) === 'object') {\n\t        value = value.split('').reduce(function (acc, _char, idx) {\n\t          acc[idx] = _char;\n\t          return acc;\n\t        }, {});\n\t        typeHint = 'object';\n\t      } else {\n\t        return jsonStringify(value);\n\t      }\n\t    }\n\n\t    for (var prop in value) {\n\t      if (Object.prototype.hasOwnProperty.call(value, prop)) {\n\t        return jsonStringify(exports.canonicalize(value, null, typeHint), 2).replace(/,(\\n|$)/g, '$1');\n\t      }\n\t    }\n\n\t    return emptyRepresentation(value, typeHint);\n\t  };\n\t  /**\n\t   * like JSON.stringify but more sense.\n\t   *\n\t   * @private\n\t   * @param {Object}  object\n\t   * @param {number=} spaces\n\t   * @param {number=} depth\n\t   * @returns {*}\n\t   */\n\n\n\t  function jsonStringify(object, spaces, depth) {\n\t    if (typeof spaces === 'undefined') {\n\t      // primitive types\n\t      return _stringify(object);\n\t    }\n\n\t    depth = depth || 1;\n\t    var space = spaces * depth;\n\t    var str = Array.isArray(object) ? '[' : '{';\n\t    var end = Array.isArray(object) ? ']' : '}';\n\t    var length = typeof object.length === 'number' ? object.length : Object.keys(object).length; // `.repeat()` polyfill\n\n\t    function repeat(s, n) {\n\t      return new Array(n).join(s);\n\t    }\n\n\t    function _stringify(val) {\n\t      switch (canonicalType(val)) {\n\t        case 'null':\n\t        case 'undefined':\n\t          val = '[' + val + ']';\n\t          break;\n\n\t        case 'array':\n\t        case 'object':\n\t          val = jsonStringify(val, spaces, depth + 1);\n\t          break;\n\n\t        case 'boolean':\n\t        case 'regexp':\n\t        case 'symbol':\n\t        case 'number':\n\t          val = val === 0 && 1 / val === -Infinity // `-0`\n\t          ? '-0' : val.toString();\n\t          break;\n\n\t        case 'bigint':\n\t          val = val.toString() + 'n';\n\t          break;\n\n\t        case 'date':\n\t          var sDate = isNaN(val.getTime()) ? val.toString() : val.toISOString();\n\t          val = '[Date: ' + sDate + ']';\n\t          break;\n\n\t        case 'buffer':\n\t          var json = val.toJSON(); // Based on the toJSON result\n\n\t          json = json.data && json.type ? json.data : json;\n\t          val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n\t          break;\n\n\t        default:\n\t          val = val === '[Function]' || val === '[Circular]' ? val : JSON.stringify(val);\n\t        // string\n\t      }\n\n\t      return val;\n\t    }\n\n\t    for (var i in object) {\n\t      if (!Object.prototype.hasOwnProperty.call(object, i)) {\n\t        continue; // not my business\n\t      }\n\n\t      --length;\n\t      str += '\\n ' + repeat(' ', space) + (Array.isArray(object) ? '' : '\"' + i + '\": ') + // key\n\t      _stringify(object[i]) + ( // value\n\t      length ? ',' : ''); // comma\n\t    }\n\n\t    return str + ( // [], {}\n\t    str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n\t  }\n\t  /**\n\t   * Return a new Thing that has the keys in sorted order. Recursive.\n\t   *\n\t   * If the Thing...\n\t   * - has already been seen, return string `'[Circular]'`\n\t   * - is `undefined`, return string `'[undefined]'`\n\t   * - is `null`, return value `null`\n\t   * - is some other primitive, return the value\n\t   * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n\t   * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n\t   * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n\t   *\n\t   * @private\n\t   * @see {@link exports.stringify}\n\t   * @param {*} value Thing to inspect.  May or may not have properties.\n\t   * @param {Array} [stack=[]] Stack of seen values\n\t   * @param {string} [typeHint] Type hint\n\t   * @return {(Object|Array|Function|string|undefined)}\n\t   */\n\n\n\t  exports.canonicalize = function canonicalize(value, stack, typeHint) {\n\t    var canonicalizedObj;\n\t    /* eslint-disable no-unused-vars */\n\n\t    var prop;\n\t    /* eslint-enable no-unused-vars */\n\n\t    typeHint = typeHint || canonicalType(value);\n\n\t    function withStack(value, fn) {\n\t      stack.push(value);\n\t      fn();\n\t      stack.pop();\n\t    }\n\n\t    stack = stack || [];\n\n\t    if (stack.indexOf(value) !== -1) {\n\t      return '[Circular]';\n\t    }\n\n\t    switch (typeHint) {\n\t      case 'undefined':\n\t      case 'buffer':\n\t      case 'null':\n\t        canonicalizedObj = value;\n\t        break;\n\n\t      case 'array':\n\t        withStack(value, function () {\n\t          canonicalizedObj = value.map(function (item) {\n\t            return exports.canonicalize(item, stack);\n\t          });\n\t        });\n\t        break;\n\n\t      case 'function':\n\t        /* eslint-disable-next-line no-unused-vars */\n\t        for (prop in value) {\n\t          canonicalizedObj = {};\n\t          break;\n\t        }\n\t        /* eslint-enable guard-for-in */\n\n\n\t        if (!canonicalizedObj) {\n\t          canonicalizedObj = emptyRepresentation(value, typeHint);\n\t          break;\n\t        }\n\n\t      /* falls through */\n\n\t      case 'object':\n\t        canonicalizedObj = canonicalizedObj || {};\n\t        withStack(value, function () {\n\t          Object.keys(value).sort().forEach(function (key) {\n\t            canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n\t          });\n\t        });\n\t        break;\n\n\t      case 'date':\n\t      case 'number':\n\t      case 'regexp':\n\t      case 'boolean':\n\t      case 'symbol':\n\t        canonicalizedObj = value;\n\t        break;\n\n\t      default:\n\t        canonicalizedObj = value + '';\n\t    }\n\n\t    return canonicalizedObj;\n\t  };\n\t  /**\n\t   * @summary\n\t   * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n\t   * @description\n\t   * When invoking this function you get a filter function that get the Error.stack as an input,\n\t   * and return a prettify output.\n\t   * (i.e: strip Mocha and internal node functions from stack trace).\n\t   * @returns {Function}\n\t   */\n\n\n\t  exports.stackTraceFilter = function () {\n\t    // TODO: Replace with `process.browser`\n\t    var is = typeof document === 'undefined' ? {\n\t      node: true\n\t    } : {\n\t      browser: true\n\t    };\n\t    var slash = path$1.sep;\n\t    var cwd;\n\n\t    if (is.node) {\n\t      cwd = exports.cwd() + slash;\n\t    } else {\n\t      cwd = (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^/]*$/, '/');\n\t      slash = '/';\n\t    }\n\n\t    function isMochaInternal(line) {\n\t      return ~line.indexOf('node_modules' + slash + 'mocha' + slash) || ~line.indexOf(slash + 'mocha.js') || ~line.indexOf(slash + 'mocha.min.js');\n\t    }\n\n\t    function isNodeInternal(line) {\n\t      return ~line.indexOf('(timers.js:') || ~line.indexOf('(events.js:') || ~line.indexOf('(node.js:') || ~line.indexOf('(module.js:') || ~line.indexOf('GeneratorFunctionPrototype.next (native)') || false;\n\t    }\n\n\t    return function (stack) {\n\t      stack = stack.split('\\n');\n\t      stack = stack.reduce(function (list, line) {\n\t        if (isMochaInternal(line)) {\n\t          return list;\n\t        }\n\n\t        if (is.node && isNodeInternal(line)) {\n\t          return list;\n\t        } // Clean up cwd(absolute)\n\n\n\t        if (/:\\d+:\\d+\\)?$/.test(line)) {\n\t          line = line.replace('(' + cwd, '(');\n\t        }\n\n\t        list.push(line);\n\t        return list;\n\t      }, []);\n\t      return stack.join('\\n');\n\t    };\n\t  };\n\t  /**\n\t   * Crude, but effective.\n\t   * @public\n\t   * @param {*} value\n\t   * @returns {boolean} Whether or not `value` is a Promise\n\t   */\n\n\n\t  exports.isPromise = function isPromise(value) {\n\t    return _typeof(value) === 'object' && value !== null && typeof value.then === 'function';\n\t  };\n\t  /**\n\t   * Clamps a numeric value to an inclusive range.\n\t   *\n\t   * @param {number} value - Value to be clamped.\n\t   * @param {number[]} range - Two element array specifying [min, max] range.\n\t   * @returns {number} clamped value\n\t   */\n\n\n\t  exports.clamp = function clamp(value, range) {\n\t    return Math.min(Math.max(value, range[0]), range[1]);\n\t  };\n\t  /**\n\t   * Single quote text by combining with undirectional ASCII quotation marks.\n\t   *\n\t   * @description\n\t   * Provides a simple means of markup for quoting text to be used in output.\n\t   * Use this to quote names of variables, methods, and packages.\n\t   *\n\t   * <samp>package 'foo' cannot be found</samp>\n\t   *\n\t   * @private\n\t   * @param {string} str - Value to be quoted.\n\t   * @returns {string} quoted value\n\t   * @example\n\t   * sQuote('n') // => 'n'\n\t   */\n\n\n\t  exports.sQuote = function (str) {\n\t    return \"'\" + str + \"'\";\n\t  };\n\t  /**\n\t   * Double quote text by combining with undirectional ASCII quotation marks.\n\t   *\n\t   * @description\n\t   * Provides a simple means of markup for quoting text to be used in output.\n\t   * Use this to quote names of datatypes, classes, pathnames, and strings.\n\t   *\n\t   * <samp>argument 'value' must be \"string\" or \"number\"</samp>\n\t   *\n\t   * @private\n\t   * @param {string} str - Value to be quoted.\n\t   * @returns {string} quoted value\n\t   * @example\n\t   * dQuote('number') // => \"number\"\n\t   */\n\n\n\t  exports.dQuote = function (str) {\n\t    return '\"' + str + '\"';\n\t  };\n\t  /**\n\t   * It's a noop.\n\t   * @public\n\t   */\n\n\n\t  exports.noop = function () {};\n\t  /**\n\t   * Creates a map-like object.\n\t   *\n\t   * @description\n\t   * A \"map\" is an object with no prototype, for our purposes. In some cases\n\t   * this would be more appropriate than a `Map`, especially if your environment\n\t   * doesn't support it. Recommended for use in Mocha's public APIs.\n\t   *\n\t   * @public\n\t   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Custom_and_Null_objects|MDN:Map}\n\t   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}\n\t   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Custom_and_Null_objects|MDN:Object.assign}\n\t   * @param {...*} [obj] - Arguments to `Object.assign()`.\n\t   * @returns {Object} An object with no prototype, having `...obj` properties\n\t   */\n\n\n\t  exports.createMap = function (obj) {\n\t    return Object.assign.apply(null, [Object.create(null)].concat(Array.prototype.slice.call(arguments)));\n\t  };\n\t  /**\n\t   * Creates a read-only map-like object.\n\t   *\n\t   * @description\n\t   * This differs from {@link module:utils.createMap createMap} only in that\n\t   * the argument must be non-empty, because the result is frozen.\n\t   *\n\t   * @see {@link module:utils.createMap createMap}\n\t   * @param {...*} [obj] - Arguments to `Object.assign()`.\n\t   * @returns {Object} A frozen object with no prototype, having `...obj` properties\n\t   * @throws {TypeError} if argument is not a non-empty object.\n\t   */\n\n\n\t  exports.defineConstants = function (obj) {\n\t    if (canonicalType(obj) !== 'object' || !Object.keys(obj).length) {\n\t      throw new TypeError('Invalid argument; expected a non-empty object');\n\t    }\n\n\t    return Object.freeze(exports.createMap(obj));\n\t  };\n\t  /**\n\t   * Whether current version of Node support ES modules\n\t   *\n\t   * @description\n\t   * Versions prior to 10 did not support ES Modules, and version 10 has an old incompatible version of ESM.\n\t   * This function returns whether Node.JS has ES Module supports that is compatible with Mocha's needs,\n\t   * which is version >=12.11.\n\t   *\n\t   * @param {partialSupport} whether the full Node.js ESM support is available (>= 12) or just something that supports the runtime (>= 10)\n\t   *\n\t   * @returns {Boolean} whether the current version of Node.JS supports ES Modules in a way that is compatible with Mocha\n\t   */\n\n\n\t  exports.supportsEsModules = function (partialSupport) {\n\t    if (!exports.isBrowser() && process$1.versions && process$1.versions.node) {\n\t      var versionFields = process$1.versions.node.split('.');\n\t      var major = +versionFields[0];\n\t      var minor = +versionFields[1];\n\n\t      if (!partialSupport) {\n\t        return major >= 13 || major === 12 && minor >= 11;\n\t      } else {\n\t        return major >= 10;\n\t      }\n\t    }\n\t  };\n\t  /**\n\t   * Returns current working directory\n\t   *\n\t   * Wrapper around `process.cwd()` for isolation\n\t   * @private\n\t   */\n\n\n\t  exports.cwd = function cwd() {\n\t    return process$1.cwd();\n\t  };\n\t  /**\n\t   * Returns `true` if Mocha is running in a browser.\n\t   * Checks for `process.browser`.\n\t   * @returns {boolean}\n\t   * @private\n\t   */\n\n\n\t  exports.isBrowser = function isBrowser() {\n\t    return Boolean(browser$1);\n\t  };\n\t  /**\n\t   * Lookup file names at the given `path`.\n\t   *\n\t   * @description\n\t   * Filenames are returned in _traversal_ order by the OS/filesystem.\n\t   * **Make no assumption that the names will be sorted in any fashion.**\n\t   *\n\t   * @public\n\t   * @alias module:lib/cli.lookupFiles\n\t   * @param {string} filepath - Base path to start searching from.\n\t   * @param {string[]} [extensions=[]] - File extensions to look for.\n\t   * @param {boolean} [recursive=false] - Whether to recurse into subdirectories.\n\t   * @return {string[]} An array of paths.\n\t   * @throws {Error} if no files match pattern.\n\t   * @throws {TypeError} if `filepath` is directory and `extensions` not provided.\n\t   * @deprecated Moved to {@link module:lib/cli.lookupFiles}\n\t   */\n\n\n\t  exports.lookupFiles = function () {\n\t    if (exports.isBrowser()) {\n\t      throw errors.createUnsupportedError('lookupFiles() is only supported in Node.js!');\n\t    }\n\n\t    errors.deprecate('`lookupFiles()` in module `mocha/lib/utils` has moved to module `mocha/lib/cli` and will be removed in the next major revision of Mocha');\n\t    return require$$11.lookupFiles.apply(require$$11, arguments);\n\t  };\n\t  /*\n\t   * Casts `value` to an array; useful for optionally accepting array parameters\n\t   *\n\t   * It follows these rules, depending on `value`.  If `value` is...\n\t   * 1. `undefined`: return an empty Array\n\t   * 2. `null`: return an array with a single `null` element\n\t   * 3. Any other object: return the value of `Array.from()` _if_ the object is iterable\n\t   * 4. otherwise: return an array with a single element, `value`\n\t   * @param {*} value - Something to cast to an Array\n\t   * @returns {Array<*>}\n\t   */\n\n\n\t  exports.castArray = function castArray(value) {\n\t    if (value === undefined) {\n\t      return [];\n\t    }\n\n\t    if (value === null) {\n\t      return [null];\n\t    }\n\n\t    if (_typeof(value) === 'object' && (typeof value[Symbol.iterator] === 'function' || value.length !== undefined)) {\n\t      return Array.from(value);\n\t    }\n\n\t    return [value];\n\t  };\n\n\t  exports.constants = exports.defineConstants({\n\t    MOCHA_ID_PROP_NAME: MOCHA_ID_PROP_NAME\n\t  });\n\t  /**\n\t   * Creates a new unique identifier\n\t   * @returns {string} Unique identifier\n\t   */\n\n\t  exports.uniqueID = function () {\n\t    return nanoid();\n\t  };\n\n\t  exports.assignNewMochaID = function (obj) {\n\t    var id = exports.uniqueID();\n\t    Object.defineProperty(obj, MOCHA_ID_PROP_NAME, {\n\t      get: function get() {\n\t        return id;\n\t      }\n\t    });\n\t    return obj;\n\t  };\n\t  /**\n\t   * Retrieves a Mocha ID from an object, if present.\n\t   * @param {*} [obj] - Object\n\t   * @returns {string|void}\n\t   */\n\n\n\t  exports.getMochaID = function (obj) {\n\t    return obj && _typeof(obj) === 'object' ? obj[MOCHA_ID_PROP_NAME] : undefined;\n\t  };\n\t});\n\n\t// `Map` constructor\n\t// https://tc39.es/ecma262/#sec-map-objects\n\tcollection('Map', function (init) {\n\t  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n\t}, collectionStrong);\n\n\t/**\n\t @module Pending\n\t*/\n\n\tvar pending = Pending;\n\t/**\n\t * Initialize a new `Pending` error with the given message.\n\t *\n\t * @param {string} message\n\t */\n\n\tfunction Pending(message) {\n\t  this.message = message;\n\t}\n\n\t/**\n\t * Helpers.\n\t */\n\tvar s$1 = 1000;\n\tvar m$1 = s$1 * 60;\n\tvar h$1 = m$1 * 60;\n\tvar d$1 = h$1 * 24;\n\tvar w$1 = d$1 * 7;\n\tvar y$1 = d$1 * 365.25;\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\n\tvar ms$1 = function ms(val, options) {\n\t  options = options || {};\n\n\t  var type = _typeof(val);\n\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse$1(val);\n\t  } else if (type === 'number' && isFinite(val)) {\n\t    return options[\"long\"] ? fmtLong$1(val) : fmtShort$1(val);\n\t  }\n\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n\t};\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\n\n\tfunction parse$1(str) {\n\t  str = String(str);\n\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\n\t  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n\t  if (!match) {\n\t    return;\n\t  }\n\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y$1;\n\n\t    case 'weeks':\n\t    case 'week':\n\t    case 'w':\n\t      return n * w$1;\n\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d$1;\n\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h$1;\n\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m$1;\n\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s$1;\n\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\n\tfunction fmtShort$1(ms) {\n\t  var msAbs = Math.abs(ms);\n\n\t  if (msAbs >= d$1) {\n\t    return Math.round(ms / d$1) + 'd';\n\t  }\n\n\t  if (msAbs >= h$1) {\n\t    return Math.round(ms / h$1) + 'h';\n\t  }\n\n\t  if (msAbs >= m$1) {\n\t    return Math.round(ms / m$1) + 'm';\n\t  }\n\n\t  if (msAbs >= s$1) {\n\t    return Math.round(ms / s$1) + 's';\n\t  }\n\n\t  return ms + 'ms';\n\t}\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\n\tfunction fmtLong$1(ms) {\n\t  var msAbs = Math.abs(ms);\n\n\t  if (msAbs >= d$1) {\n\t    return plural$1(ms, msAbs, d$1, 'day');\n\t  }\n\n\t  if (msAbs >= h$1) {\n\t    return plural$1(ms, msAbs, h$1, 'hour');\n\t  }\n\n\t  if (msAbs >= m$1) {\n\t    return plural$1(ms, msAbs, m$1, 'minute');\n\t  }\n\n\t  if (msAbs >= s$1) {\n\t    return plural$1(ms, msAbs, s$1, 'second');\n\t  }\n\n\t  return ms + ' ms';\n\t}\n\t/**\n\t * Pluralization helper.\n\t */\n\n\n\tfunction plural$1(ms, msAbs, n, name) {\n\t  var isPlural = msAbs >= n * 1.5;\n\t  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n\t}\n\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t */\n\n\tfunction setup(env) {\n\t  createDebug.debug = createDebug;\n\t  createDebug[\"default\"] = createDebug;\n\t  createDebug.coerce = coerce;\n\t  createDebug.disable = disable;\n\t  createDebug.enable = enable;\n\t  createDebug.enabled = enabled;\n\t  createDebug.humanize = ms$1;\n\t  createDebug.destroy = destroy;\n\t  Object.keys(env).forEach(function (key) {\n\t    createDebug[key] = env[key];\n\t  });\n\t  /**\n\t  * The currently active debug mode names, and names to skip.\n\t  */\n\n\t  createDebug.names = [];\n\t  createDebug.skips = [];\n\t  /**\n\t  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t  *\n\t  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t  */\n\n\t  createDebug.formatters = {};\n\t  /**\n\t  * Selects a color for a debug namespace\n\t  * @param {String} namespace The namespace string for the for the debug instance to be colored\n\t  * @return {Number|String} An ANSI color code for the given namespace\n\t  * @api private\n\t  */\n\n\t  function selectColor(namespace) {\n\t    var hash = 0;\n\n\t    for (var i = 0; i < namespace.length; i++) {\n\t      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n\t      hash |= 0; // Convert to 32bit integer\n\t    }\n\n\t    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t  }\n\n\t  createDebug.selectColor = selectColor;\n\t  /**\n\t  * Create a debugger with the given `namespace`.\n\t  *\n\t  * @param {String} namespace\n\t  * @return {Function}\n\t  * @api public\n\t  */\n\n\t  function createDebug(namespace) {\n\t    var prevTime;\n\t    var enableOverride = null;\n\n\t    function debug() {\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\n\t      // Disabled?\n\t      if (!debug.enabled) {\n\t        return;\n\t      }\n\n\t      var self = debug; // Set `diff` timestamp\n\n\t      var curr = Number(new Date());\n\t      var ms = curr - (prevTime || curr);\n\t      self.diff = ms;\n\t      self.prev = prevTime;\n\t      self.curr = curr;\n\t      prevTime = curr;\n\t      args[0] = createDebug.coerce(args[0]);\n\n\t      if (typeof args[0] !== 'string') {\n\t        // Anything else let's inspect with %O\n\t        args.unshift('%O');\n\t      } // Apply any `formatters` transformations\n\n\n\t      var index = 0;\n\t      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n\t        // If we encounter an escaped % then don't increase the array index\n\t        if (match === '%%') {\n\t          return '%';\n\t        }\n\n\t        index++;\n\t        var formatter = createDebug.formatters[format];\n\n\t        if (typeof formatter === 'function') {\n\t          var val = args[index];\n\t          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n\t          args.splice(index, 1);\n\t          index--;\n\t        }\n\n\t        return match;\n\t      }); // Apply env-specific formatting (colors, etc.)\n\n\t      createDebug.formatArgs.call(self, args);\n\t      var logFn = self.log || createDebug.log;\n\t      logFn.apply(self, args);\n\t    }\n\n\t    debug.namespace = namespace;\n\t    debug.useColors = createDebug.useColors();\n\t    debug.color = createDebug.selectColor(namespace);\n\t    debug.extend = extend;\n\t    debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t    Object.defineProperty(debug, 'enabled', {\n\t      enumerable: true,\n\t      configurable: false,\n\t      get: function get() {\n\t        return enableOverride === null ? createDebug.enabled(namespace) : enableOverride;\n\t      },\n\t      set: function set(v) {\n\t        enableOverride = v;\n\t      }\n\t    }); // Env-specific initialization logic for debug instances\n\n\t    if (typeof createDebug.init === 'function') {\n\t      createDebug.init(debug);\n\t    }\n\n\t    return debug;\n\t  }\n\n\t  function extend(namespace, delimiter) {\n\t    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t    newDebug.log = this.log;\n\t    return newDebug;\n\t  }\n\t  /**\n\t  * Enables a debug mode by namespaces. This can include modes\n\t  * separated by a colon and wildcards.\n\t  *\n\t  * @param {String} namespaces\n\t  * @api public\n\t  */\n\n\n\t  function enable(namespaces) {\n\t    createDebug.save(namespaces);\n\t    createDebug.names = [];\n\t    createDebug.skips = [];\n\t    var i;\n\t    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t    var len = split.length;\n\n\t    for (i = 0; i < len; i++) {\n\t      if (!split[i]) {\n\t        // ignore empty strings\n\t        continue;\n\t      }\n\n\t      namespaces = split[i].replace(/\\*/g, '.*?');\n\n\t      if (namespaces[0] === '-') {\n\t        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t      } else {\n\t        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t      }\n\t    }\n\t  }\n\t  /**\n\t  * Disable debug output.\n\t  *\n\t  * @return {String} namespaces\n\t  * @api public\n\t  */\n\n\n\t  function disable() {\n\t    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n\t      return '-' + namespace;\n\t    }))).join(',');\n\t    createDebug.enable('');\n\t    return namespaces;\n\t  }\n\t  /**\n\t  * Returns true if the given mode name is enabled, false otherwise.\n\t  *\n\t  * @param {String} name\n\t  * @return {Boolean}\n\t  * @api public\n\t  */\n\n\n\t  function enabled(name) {\n\t    if (name[name.length - 1] === '*') {\n\t      return true;\n\t    }\n\n\t    var i;\n\t    var len;\n\n\t    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t      if (createDebug.skips[i].test(name)) {\n\t        return false;\n\t      }\n\t    }\n\n\t    for (i = 0, len = createDebug.names.length; i < len; i++) {\n\t      if (createDebug.names[i].test(name)) {\n\t        return true;\n\t      }\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t  * Convert regexp to namespace\n\t  *\n\t  * @param {RegExp} regxep\n\t  * @return {String} namespace\n\t  * @api private\n\t  */\n\n\n\t  function toNamespace(regexp) {\n\t    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n\t  }\n\t  /**\n\t  * Coerce `val`.\n\t  *\n\t  * @param {Mixed} val\n\t  * @return {Mixed}\n\t  * @api private\n\t  */\n\n\n\t  function coerce(val) {\n\t    if (val instanceof Error) {\n\t      return val.stack || val.message;\n\t    }\n\n\t    return val;\n\t  }\n\t  /**\n\t  * XXX DO NOT USE. This is a temporary stub function.\n\t  * XXX It WILL be removed in the next major release.\n\t  */\n\n\n\t  function destroy() {\n\t    console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t  }\n\n\t  createDebug.enable(createDebug.load());\n\t  return createDebug;\n\t}\n\n\tvar common = setup;\n\n\tvar browser$2 = createCommonjsModule(function (module, exports) {\n\t  /* eslint-env browser */\n\n\t  /**\n\t   * This is the web browser implementation of `debug()`.\n\t   */\n\t  exports.formatArgs = formatArgs;\n\t  exports.save = save;\n\t  exports.load = load;\n\t  exports.useColors = useColors;\n\t  exports.storage = localstorage();\n\n\t  exports.destroy = function () {\n\t    var warned = false;\n\t    return function () {\n\t      if (!warned) {\n\t        warned = true;\n\t        console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t      }\n\t    };\n\t  }();\n\t  /**\n\t   * Colors.\n\t   */\n\n\n\t  exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n\t  /**\n\t   * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t   * and the Firebug extension (any Firefox version) are known\n\t   * to support \"%c\" CSS customizations.\n\t   *\n\t   * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t   */\n\t  // eslint-disable-next-line complexity\n\n\t  function useColors() {\n\t    // NB: In an Electron preload script, document will be defined but not fully\n\t    // initialized. Since we know we're in Chrome, we'll just detect this case\n\t    // explicitly\n\t    if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t      return true;\n\t    } // Internet Explorer and Edge do not support colors.\n\n\n\t    if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t      return false;\n\t    } // Is webkit? http://stackoverflow.com/a/16459606/376773\n\t    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n\t    return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n\t    typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n\t    typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n\t  }\n\t  /**\n\t   * Colorize log arguments if enabled.\n\t   *\n\t   * @api public\n\t   */\n\n\n\t  function formatArgs(args) {\n\t    args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n\t    if (!this.useColors) {\n\t      return;\n\t    }\n\n\t    var c = 'color: ' + this.color;\n\t    args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n\t    // arguments passed either before or after the %c, so we need to\n\t    // figure out the correct index to insert the CSS into\n\n\t    var index = 0;\n\t    var lastC = 0;\n\t    args[0].replace(/%[a-zA-Z%]/g, function (match) {\n\t      if (match === '%%') {\n\t        return;\n\t      }\n\n\t      index++;\n\n\t      if (match === '%c') {\n\t        // We only are interested in the *last* %c\n\t        // (the user may have provided their own)\n\t        lastC = index;\n\t      }\n\t    });\n\t    args.splice(lastC, 0, c);\n\t  }\n\t  /**\n\t   * Invokes `console.debug()` when available.\n\t   * No-op when `console.debug` is not a \"function\".\n\t   * If `console.debug` is not available, falls back\n\t   * to `console.log`.\n\t   *\n\t   * @api public\n\t   */\n\n\n\t  exports.log = console.debug || console.log || function () {};\n\t  /**\n\t   * Save `namespaces`.\n\t   *\n\t   * @param {String} namespaces\n\t   * @api private\n\t   */\n\n\n\t  function save(namespaces) {\n\t    try {\n\t      if (namespaces) {\n\t        exports.storage.setItem('debug', namespaces);\n\t      } else {\n\t        exports.storage.removeItem('debug');\n\t      }\n\t    } catch (error) {// Swallow\n\t      // XXX (@Qix-) should we be logging these?\n\t    }\n\t  }\n\t  /**\n\t   * Load `namespaces`.\n\t   *\n\t   * @return {String} returns the previously persisted debug modes\n\t   * @api private\n\t   */\n\n\n\t  function load() {\n\t    var r;\n\n\t    try {\n\t      r = exports.storage.getItem('debug');\n\t    } catch (error) {// Swallow\n\t      // XXX (@Qix-) should we be logging these?\n\t    } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n\t    if (!r && typeof process$1 !== 'undefined' && 'env' in process$1) {\n\t      r = process$1.env.DEBUG;\n\t    }\n\n\t    return r;\n\t  }\n\t  /**\n\t   * Localstorage attempts to return the localstorage.\n\t   *\n\t   * This is necessary because safari throws\n\t   * when a user disables cookies/localstorage\n\t   * and you attempt to access it.\n\t   *\n\t   * @return {LocalStorage}\n\t   * @api private\n\t   */\n\n\n\t  function localstorage() {\n\t    try {\n\t      // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t      // The Browser also has localStorage in the global context.\n\t      return localStorage;\n\t    } catch (error) {// Swallow\n\t      // XXX (@Qix-) should we be logging these?\n\t    }\n\t  }\n\n\t  module.exports = common(exports);\n\t  var formatters = module.exports.formatters;\n\t  /**\n\t   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t   */\n\n\t  formatters.j = function (v) {\n\t    try {\n\t      return JSON.stringify(v);\n\t    } catch (error) {\n\t      return '[UnexpectedJSONParseError]: ' + error.message;\n\t    }\n\t  };\n\t});\n\n\tvar EventEmitter$1 = EventEmitter.EventEmitter;\n\tvar debug$1 = browser$2('mocha:runnable');\n\tvar createInvalidExceptionError$1 = errors.createInvalidExceptionError,\n\t    createMultipleDoneError$1 = errors.createMultipleDoneError,\n\t    createTimeoutError$1 = errors.createTimeoutError;\n\t/**\n\t * Save timer references to avoid Sinon interfering (see GH-237).\n\t * @private\n\t */\n\n\tvar Date$1 = commonjsGlobal.Date;\n\tvar setTimeout$1 = commonjsGlobal.setTimeout;\n\tvar clearTimeout$1 = commonjsGlobal.clearTimeout;\n\tvar toString$4 = Object.prototype.toString;\n\tvar runnable = Runnable;\n\t/**\n\t * Initialize a new `Runnable` with the given `title` and callback `fn`.\n\t *\n\t * @class\n\t * @extends external:EventEmitter\n\t * @public\n\t * @param {String} title\n\t * @param {Function} fn\n\t */\n\n\tfunction Runnable(title, fn) {\n\t  this.title = title;\n\t  this.fn = fn;\n\t  this.body = (fn || '').toString();\n\t  this.async = fn && fn.length;\n\t  this.sync = !this.async;\n\t  this._timeout = 2000;\n\t  this._slow = 75;\n\t  this._retries = -1;\n\t  utils.assignNewMochaID(this);\n\t  Object.defineProperty(this, 'id', {\n\t    get: function get() {\n\t      return utils.getMochaID(this);\n\t    }\n\t  });\n\t  this.reset();\n\t}\n\t/**\n\t * Inherit from `EventEmitter.prototype`.\n\t */\n\n\n\tutils.inherits(Runnable, EventEmitter$1);\n\t/**\n\t * Resets the state initially or for a next run.\n\t */\n\n\tRunnable.prototype.reset = function () {\n\t  this.timedOut = false;\n\t  this._currentRetry = 0;\n\t  this.pending = false;\n\t  delete this.state;\n\t  delete this.err;\n\t};\n\t/**\n\t * Get current timeout value in msecs.\n\t *\n\t * @private\n\t * @returns {number} current timeout threshold value\n\t */\n\n\t/**\n\t * @summary\n\t * Set timeout threshold value (msecs).\n\t *\n\t * @description\n\t * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n\t * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n\t * If clamped value matches either range endpoint, timeouts will be disabled.\n\t *\n\t * @private\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n\t * @param {number|string} ms - Timeout threshold value.\n\t * @returns {Runnable} this\n\t * @chainable\n\t */\n\n\n\tRunnable.prototype.timeout = function (ms$1) {\n\t  if (!arguments.length) {\n\t    return this._timeout;\n\t  }\n\n\t  if (typeof ms$1 === 'string') {\n\t    ms$1 = ms(ms$1);\n\t  } // Clamp to range\n\n\n\t  var INT_MAX = Math.pow(2, 31) - 1;\n\t  var range = [0, INT_MAX];\n\t  ms$1 = utils.clamp(ms$1, range); // see #1652 for reasoning\n\n\t  if (ms$1 === range[0] || ms$1 === range[1]) {\n\t    this._timeout = 0;\n\t  } else {\n\t    this._timeout = ms$1;\n\t  }\n\n\t  debug$1('timeout %d', this._timeout);\n\n\t  if (this.timer) {\n\t    this.resetTimeout();\n\t  }\n\n\t  return this;\n\t};\n\t/**\n\t * Set or get slow `ms`.\n\t *\n\t * @private\n\t * @param {number|string} ms\n\t * @return {Runnable|number} ms or Runnable instance.\n\t */\n\n\n\tRunnable.prototype.slow = function (ms$1) {\n\t  if (!arguments.length || typeof ms$1 === 'undefined') {\n\t    return this._slow;\n\t  }\n\n\t  if (typeof ms$1 === 'string') {\n\t    ms$1 = ms(ms$1);\n\t  }\n\n\t  debug$1('slow %d', ms$1);\n\t  this._slow = ms$1;\n\t  return this;\n\t};\n\t/**\n\t * Halt and mark as pending.\n\t *\n\t * @memberof Mocha.Runnable\n\t * @public\n\t */\n\n\n\tRunnable.prototype.skip = function () {\n\t  this.pending = true;\n\t  throw new pending('sync skip; aborting execution');\n\t};\n\t/**\n\t * Check if this runnable or its parent suite is marked as pending.\n\t *\n\t * @private\n\t */\n\n\n\tRunnable.prototype.isPending = function () {\n\t  return this.pending || this.parent && this.parent.isPending();\n\t};\n\t/**\n\t * Return `true` if this Runnable has failed.\n\t * @return {boolean}\n\t * @private\n\t */\n\n\n\tRunnable.prototype.isFailed = function () {\n\t  return !this.isPending() && this.state === constants$1.STATE_FAILED;\n\t};\n\t/**\n\t * Return `true` if this Runnable has passed.\n\t * @return {boolean}\n\t * @private\n\t */\n\n\n\tRunnable.prototype.isPassed = function () {\n\t  return !this.isPending() && this.state === constants$1.STATE_PASSED;\n\t};\n\t/**\n\t * Set or get number of retries.\n\t *\n\t * @private\n\t */\n\n\n\tRunnable.prototype.retries = function (n) {\n\t  if (!arguments.length) {\n\t    return this._retries;\n\t  }\n\n\t  this._retries = n;\n\t};\n\t/**\n\t * Set or get current retry\n\t *\n\t * @private\n\t */\n\n\n\tRunnable.prototype.currentRetry = function (n) {\n\t  if (!arguments.length) {\n\t    return this._currentRetry;\n\t  }\n\n\t  this._currentRetry = n;\n\t};\n\t/**\n\t * Return the full title generated by recursively concatenating the parent's\n\t * full title.\n\t *\n\t * @memberof Mocha.Runnable\n\t * @public\n\t * @return {string}\n\t */\n\n\n\tRunnable.prototype.fullTitle = function () {\n\t  return this.titlePath().join(' ');\n\t};\n\t/**\n\t * Return the title path generated by concatenating the parent's title path with the title.\n\t *\n\t * @memberof Mocha.Runnable\n\t * @public\n\t * @return {string}\n\t */\n\n\n\tRunnable.prototype.titlePath = function () {\n\t  return this.parent.titlePath().concat([this.title]);\n\t};\n\t/**\n\t * Clear the timeout.\n\t *\n\t * @private\n\t */\n\n\n\tRunnable.prototype.clearTimeout = function () {\n\t  clearTimeout$1(this.timer);\n\t};\n\t/**\n\t * Reset the timeout.\n\t *\n\t * @private\n\t */\n\n\n\tRunnable.prototype.resetTimeout = function () {\n\t  var self = this;\n\t  var ms = this.timeout();\n\n\t  if (ms === 0) {\n\t    return;\n\t  }\n\n\t  this.clearTimeout();\n\t  this.timer = setTimeout$1(function () {\n\t    if (self.timeout() === 0) {\n\t      return;\n\t    }\n\n\t    self.callback(self._timeoutError(ms));\n\t    self.timedOut = true;\n\t  }, ms);\n\t};\n\t/**\n\t * Set or get a list of whitelisted globals for this test run.\n\t *\n\t * @private\n\t * @param {string[]} globals\n\t */\n\n\n\tRunnable.prototype.globals = function (globals) {\n\t  if (!arguments.length) {\n\t    return this._allowedGlobals;\n\t  }\n\n\t  this._allowedGlobals = globals;\n\t};\n\t/**\n\t * Run the test and invoke `fn(err)`.\n\t *\n\t * @param {Function} fn\n\t * @private\n\t */\n\n\n\tRunnable.prototype.run = function (fn) {\n\t  var self = this;\n\t  var start = new Date$1();\n\t  var ctx = this.ctx;\n\t  var finished;\n\t  var errorWasHandled = false;\n\t  if (this.isPending()) return fn(); // Sometimes the ctx exists, but it is not runnable\n\n\t  if (ctx && ctx.runnable) {\n\t    ctx.runnable(this);\n\t  } // called multiple times\n\n\n\t  function multiple(err) {\n\t    if (errorWasHandled) {\n\t      return;\n\t    }\n\n\t    errorWasHandled = true;\n\t    self.emit('error', createMultipleDoneError$1(self, err));\n\t  } // finished\n\n\n\t  function done(err) {\n\t    var ms = self.timeout();\n\n\t    if (self.timedOut) {\n\t      return;\n\t    }\n\n\t    if (finished) {\n\t      return multiple(err);\n\t    }\n\n\t    self.clearTimeout();\n\t    self.duration = new Date$1() - start;\n\t    finished = true;\n\n\t    if (!err && self.duration > ms && ms > 0) {\n\t      err = self._timeoutError(ms);\n\t    }\n\n\t    fn(err);\n\t  } // for .resetTimeout() and Runner#uncaught()\n\n\n\t  this.callback = done;\n\n\t  if (this.fn && typeof this.fn.call !== 'function') {\n\t    done(new TypeError('A runnable must be passed a function as its second argument.'));\n\t    return;\n\t  } // explicit async with `done` argument\n\n\n\t  if (this.async) {\n\t    this.resetTimeout(); // allows skip() to be used in an explicit async context\n\n\t    this.skip = function asyncSkip() {\n\t      this.pending = true;\n\t      done(); // halt execution, the uncaught handler will ignore the failure.\n\n\t      throw new pending('async skip; aborting execution');\n\t    };\n\n\t    try {\n\t      callFnAsync(this.fn);\n\t    } catch (err) {\n\t      // handles async runnables which actually run synchronously\n\t      errorWasHandled = true;\n\n\t      if (err instanceof pending) {\n\t        return; // done() is already called in this.skip()\n\t      } else if (this.allowUncaught) {\n\t        throw err;\n\t      }\n\n\t      done(Runnable.toValueOrError(err));\n\t    }\n\n\t    return;\n\t  } // sync or promise-returning\n\n\n\t  try {\n\t    callFn(this.fn);\n\t  } catch (err) {\n\t    errorWasHandled = true;\n\n\t    if (err instanceof pending) {\n\t      return done();\n\t    } else if (this.allowUncaught) {\n\t      throw err;\n\t    }\n\n\t    done(Runnable.toValueOrError(err));\n\t  }\n\n\t  function callFn(fn) {\n\t    var result = fn.call(ctx);\n\n\t    if (result && typeof result.then === 'function') {\n\t      self.resetTimeout();\n\t      result.then(function () {\n\t        done(); // Return null so libraries like bluebird do not warn about\n\t        // subsequently constructed Promises.\n\n\t        return null;\n\t      }, function (reason) {\n\t        done(reason || new Error('Promise rejected with no or falsy reason'));\n\t      });\n\t    } else {\n\t      if (self.asyncOnly) {\n\t        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n\t      }\n\n\t      done();\n\t    }\n\t  }\n\n\t  function callFnAsync(fn) {\n\t    var result = fn.call(ctx, function (err) {\n\t      if (err instanceof Error || toString$4.call(err) === '[object Error]') {\n\t        return done(err);\n\t      }\n\n\t      if (err) {\n\t        if (Object.prototype.toString.call(err) === '[object Object]') {\n\t          return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n\t        }\n\n\t        return done(new Error('done() invoked with non-Error: ' + err));\n\t      }\n\n\t      if (result && utils.isPromise(result)) {\n\t        return done(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'));\n\t      }\n\n\t      done();\n\t    });\n\t  }\n\t};\n\t/**\n\t * Instantiates a \"timeout\" error\n\t *\n\t * @param {number} ms - Timeout (in milliseconds)\n\t * @returns {Error} a \"timeout\" error\n\t * @private\n\t */\n\n\n\tRunnable.prototype._timeoutError = function (ms) {\n\t  var msg = \"Timeout of \".concat(ms, \"ms exceeded. For async tests and hooks, ensure \\\"done()\\\" is called; if returning a Promise, ensure it resolves.\");\n\n\t  if (this.file) {\n\t    msg += ' (' + this.file + ')';\n\t  }\n\n\t  return createTimeoutError$1(msg, ms, this.file);\n\t};\n\n\tvar constants$1 = utils.defineConstants(\n\t/**\n\t * {@link Runnable}-related constants.\n\t * @public\n\t * @memberof Runnable\n\t * @readonly\n\t * @static\n\t * @alias constants\n\t * @enum {string}\n\t */\n\t{\n\t  /**\n\t   * Value of `state` prop when a `Runnable` has failed\n\t   */\n\t  STATE_FAILED: 'failed',\n\n\t  /**\n\t   * Value of `state` prop when a `Runnable` has passed\n\t   */\n\t  STATE_PASSED: 'passed',\n\n\t  /**\n\t   * Value of `state` prop when a `Runnable` has been skipped by user\n\t   */\n\t  STATE_PENDING: 'pending'\n\t});\n\t/**\n\t * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n\t * @param {*} [value] - Value to return, if present\n\t * @returns {*|Error} `value`, otherwise an `Error`\n\t * @private\n\t */\n\n\tRunnable.toValueOrError = function (value) {\n\t  return value || createInvalidExceptionError$1('Runnable failed with falsy or undefined exception. Please throw an Error instead.', value);\n\t};\n\n\tRunnable.constants = constants$1;\n\n\tvar inherits$3 = utils.inherits,\n\t    constants$2 = utils.constants;\n\tvar MOCHA_ID_PROP_NAME = constants$2.MOCHA_ID_PROP_NAME;\n\t/**\n\t * Expose `Hook`.\n\t */\n\n\tvar hook = Hook;\n\t/**\n\t * Initialize a new `Hook` with the given `title` and callback `fn`\n\t *\n\t * @class\n\t * @extends Runnable\n\t * @param {String} title\n\t * @param {Function} fn\n\t */\n\n\tfunction Hook(title, fn) {\n\t  runnable.call(this, title, fn);\n\t  this.type = 'hook';\n\t}\n\t/**\n\t * Inherit from `Runnable.prototype`.\n\t */\n\n\n\tinherits$3(Hook, runnable);\n\t/**\n\t * Resets the state for a next run.\n\t */\n\n\tHook.prototype.reset = function () {\n\t  runnable.prototype.reset.call(this);\n\t  delete this._error;\n\t};\n\t/**\n\t * Get or set the test `err`.\n\t *\n\t * @memberof Hook\n\t * @public\n\t * @param {Error} err\n\t * @return {Error}\n\t */\n\n\n\tHook.prototype.error = function (err) {\n\t  if (!arguments.length) {\n\t    err = this._error;\n\t    this._error = null;\n\t    return err;\n\t  }\n\n\t  this._error = err;\n\t};\n\t/**\n\t * Returns an object suitable for IPC.\n\t * Functions are represented by keys beginning with `$$`.\n\t * @private\n\t * @returns {Object}\n\t */\n\n\n\tHook.prototype.serialize = function serialize() {\n\t  return _defineProperty({\n\t    $$isPending: this.isPending(),\n\t    $$titlePath: this.titlePath(),\n\t    ctx: this.ctx && this.ctx.currentTest ? {\n\t      currentTest: _defineProperty({\n\t        title: this.ctx.currentTest.title\n\t      }, MOCHA_ID_PROP_NAME, this.ctx.currentTest.id)\n\t    } : {},\n\t    parent: _defineProperty({}, MOCHA_ID_PROP_NAME, this.parent.id),\n\t    title: this.title,\n\t    type: this.type\n\t  }, MOCHA_ID_PROP_NAME, this.id);\n\t};\n\n\tvar suite = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * Module dependencies.\n\t   * @private\n\t   */\n\n\t  var EventEmitter$1 = EventEmitter.EventEmitter;\n\t  var assignNewMochaID = utils.assignNewMochaID,\n\t      clamp = utils.clamp,\n\t      utilsConstants = utils.constants,\n\t      createMap = utils.createMap,\n\t      defineConstants = utils.defineConstants,\n\t      getMochaID = utils.getMochaID,\n\t      inherits = utils.inherits,\n\t      isString = utils.isString;\n\t  var debug = browser$2('mocha:suite');\n\t  var MOCHA_ID_PROP_NAME = utilsConstants.MOCHA_ID_PROP_NAME;\n\t  /**\n\t   * Expose `Suite`.\n\t   */\n\n\t  module.exports = Suite;\n\t  /**\n\t   * Create a new `Suite` with the given `title` and parent `Suite`.\n\t   *\n\t   * @public\n\t   * @param {Suite} parent - Parent suite (required!)\n\t   * @param {string} title - Title\n\t   * @return {Suite}\n\t   */\n\n\t  Suite.create = function (parent, title) {\n\t    var suite = new Suite(title, parent.ctx);\n\t    suite.parent = parent;\n\t    title = suite.fullTitle();\n\t    parent.addSuite(suite);\n\t    return suite;\n\t  };\n\t  /**\n\t   * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @extends EventEmitter\n\t   * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}\n\t   * @param {string} title - Suite title.\n\t   * @param {Context} parentContext - Parent context instance.\n\t   * @param {boolean} [isRoot=false] - Whether this is the root suite.\n\t   */\n\n\n\t  function Suite(title, parentContext, isRoot) {\n\t    if (!isString(title)) {\n\t      throw errors.createInvalidArgumentTypeError('Suite argument \"title\" must be a string. Received type \"' + _typeof(title) + '\"', 'title', 'string');\n\t    }\n\n\t    this.title = title;\n\n\t    function Context() {}\n\n\t    Context.prototype = parentContext;\n\t    this.ctx = new Context();\n\t    this.suites = [];\n\t    this.tests = [];\n\t    this.root = isRoot === true;\n\t    this.pending = false;\n\t    this._retries = -1;\n\t    this._beforeEach = [];\n\t    this._beforeAll = [];\n\t    this._afterEach = [];\n\t    this._afterAll = [];\n\t    this._timeout = 2000;\n\t    this._slow = 75;\n\t    this._bail = false;\n\t    this._onlyTests = [];\n\t    this._onlySuites = [];\n\t    assignNewMochaID(this);\n\t    Object.defineProperty(this, 'id', {\n\t      get: function get() {\n\t        return getMochaID(this);\n\t      }\n\t    });\n\t    this.reset();\n\t    this.on('newListener', function (event) {\n\t      if (deprecatedEvents[event]) {\n\t        errors.deprecate('Event \"' + event + '\" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm');\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `EventEmitter.prototype`.\n\t   */\n\n\n\t  inherits(Suite, EventEmitter$1);\n\t  /**\n\t   * Resets the state initially or for a next run.\n\t   */\n\n\t  Suite.prototype.reset = function () {\n\t    this.delayed = false;\n\n\t    function doReset(thingToReset) {\n\t      thingToReset.reset();\n\t    }\n\n\t    this.suites.forEach(doReset);\n\t    this.tests.forEach(doReset);\n\n\t    this._beforeEach.forEach(doReset);\n\n\t    this._afterEach.forEach(doReset);\n\n\t    this._beforeAll.forEach(doReset);\n\n\t    this._afterAll.forEach(doReset);\n\t  };\n\t  /**\n\t   * Return a clone of this `Suite`.\n\t   *\n\t   * @private\n\t   * @return {Suite}\n\t   */\n\n\n\t  Suite.prototype.clone = function () {\n\t    var suite = new Suite(this.title);\n\t    debug('clone');\n\t    suite.ctx = this.ctx;\n\t    suite.root = this.root;\n\t    suite.timeout(this.timeout());\n\t    suite.retries(this.retries());\n\t    suite.slow(this.slow());\n\t    suite.bail(this.bail());\n\t    return suite;\n\t  };\n\t  /**\n\t   * Set or get timeout `ms` or short-hand such as \"2s\".\n\t   *\n\t   * @private\n\t   * @todo Do not attempt to set value if `ms` is undefined\n\t   * @param {number|string} ms\n\t   * @return {Suite|number} for chaining\n\t   */\n\n\n\t  Suite.prototype.timeout = function (ms$1) {\n\t    if (!arguments.length) {\n\t      return this._timeout;\n\t    }\n\n\t    if (typeof ms$1 === 'string') {\n\t      ms$1 = ms(ms$1);\n\t    } // Clamp to range\n\n\n\t    var INT_MAX = Math.pow(2, 31) - 1;\n\t    var range = [0, INT_MAX];\n\t    ms$1 = clamp(ms$1, range);\n\t    debug('timeout %d', ms$1);\n\t    this._timeout = parseInt(ms$1, 10);\n\t    return this;\n\t  };\n\t  /**\n\t   * Set or get number of times to retry a failed test.\n\t   *\n\t   * @private\n\t   * @param {number|string} n\n\t   * @return {Suite|number} for chaining\n\t   */\n\n\n\t  Suite.prototype.retries = function (n) {\n\t    if (!arguments.length) {\n\t      return this._retries;\n\t    }\n\n\t    debug('retries %d', n);\n\t    this._retries = parseInt(n, 10) || 0;\n\t    return this;\n\t  };\n\t  /**\n\t   * Set or get slow `ms` or short-hand such as \"2s\".\n\t   *\n\t   * @private\n\t   * @param {number|string} ms\n\t   * @return {Suite|number} for chaining\n\t   */\n\n\n\t  Suite.prototype.slow = function (ms$1) {\n\t    if (!arguments.length) {\n\t      return this._slow;\n\t    }\n\n\t    if (typeof ms$1 === 'string') {\n\t      ms$1 = ms(ms$1);\n\t    }\n\n\t    debug('slow %d', ms$1);\n\t    this._slow = ms$1;\n\t    return this;\n\t  };\n\t  /**\n\t   * Set or get whether to bail after first error.\n\t   *\n\t   * @private\n\t   * @param {boolean} bail\n\t   * @return {Suite|number} for chaining\n\t   */\n\n\n\t  Suite.prototype.bail = function (bail) {\n\t    if (!arguments.length) {\n\t      return this._bail;\n\t    }\n\n\t    debug('bail %s', bail);\n\t    this._bail = bail;\n\t    return this;\n\t  };\n\t  /**\n\t   * Check if this suite or its parent suite is marked as pending.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  Suite.prototype.isPending = function () {\n\t    return this.pending || this.parent && this.parent.isPending();\n\t  };\n\t  /**\n\t   * Generic hook-creator.\n\t   * @private\n\t   * @param {string} title - Title of hook\n\t   * @param {Function} fn - Hook callback\n\t   * @returns {Hook} A new hook\n\t   */\n\n\n\t  Suite.prototype._createHook = function (title, fn) {\n\t    var hook$1 = new hook(title, fn);\n\t    hook$1.parent = this;\n\t    hook$1.timeout(this.timeout());\n\t    hook$1.retries(this.retries());\n\t    hook$1.slow(this.slow());\n\t    hook$1.ctx = this.ctx;\n\t    hook$1.file = this.file;\n\t    return hook$1;\n\t  };\n\t  /**\n\t   * Run `fn(test[, done])` before running tests.\n\t   *\n\t   * @private\n\t   * @param {string} title\n\t   * @param {Function} fn\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.beforeAll = function (title, fn) {\n\t    if (this.isPending()) {\n\t      return this;\n\t    }\n\n\t    if (typeof title === 'function') {\n\t      fn = title;\n\t      title = fn.name;\n\t    }\n\n\t    title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n\t    var hook = this._createHook(title, fn);\n\n\t    this._beforeAll.push(hook);\n\n\t    this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_ALL, hook);\n\t    return this;\n\t  };\n\t  /**\n\t   * Run `fn(test[, done])` after running tests.\n\t   *\n\t   * @private\n\t   * @param {string} title\n\t   * @param {Function} fn\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.afterAll = function (title, fn) {\n\t    if (this.isPending()) {\n\t      return this;\n\t    }\n\n\t    if (typeof title === 'function') {\n\t      fn = title;\n\t      title = fn.name;\n\t    }\n\n\t    title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n\t    var hook = this._createHook(title, fn);\n\n\t    this._afterAll.push(hook);\n\n\t    this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_ALL, hook);\n\t    return this;\n\t  };\n\t  /**\n\t   * Run `fn(test[, done])` before each test case.\n\t   *\n\t   * @private\n\t   * @param {string} title\n\t   * @param {Function} fn\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.beforeEach = function (title, fn) {\n\t    if (this.isPending()) {\n\t      return this;\n\t    }\n\n\t    if (typeof title === 'function') {\n\t      fn = title;\n\t      title = fn.name;\n\t    }\n\n\t    title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n\t    var hook = this._createHook(title, fn);\n\n\t    this._beforeEach.push(hook);\n\n\t    this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_EACH, hook);\n\t    return this;\n\t  };\n\t  /**\n\t   * Run `fn(test[, done])` after each test case.\n\t   *\n\t   * @private\n\t   * @param {string} title\n\t   * @param {Function} fn\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.afterEach = function (title, fn) {\n\t    if (this.isPending()) {\n\t      return this;\n\t    }\n\n\t    if (typeof title === 'function') {\n\t      fn = title;\n\t      title = fn.name;\n\t    }\n\n\t    title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n\t    var hook = this._createHook(title, fn);\n\n\t    this._afterEach.push(hook);\n\n\t    this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_EACH, hook);\n\t    return this;\n\t  };\n\t  /**\n\t   * Add a test `suite`.\n\t   *\n\t   * @private\n\t   * @param {Suite} suite\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.addSuite = function (suite) {\n\t    suite.parent = this;\n\t    suite.root = false;\n\t    suite.timeout(this.timeout());\n\t    suite.retries(this.retries());\n\t    suite.slow(this.slow());\n\t    suite.bail(this.bail());\n\t    this.suites.push(suite);\n\t    this.emit(constants.EVENT_SUITE_ADD_SUITE, suite);\n\t    return this;\n\t  };\n\t  /**\n\t   * Add a `test` to this suite.\n\t   *\n\t   * @private\n\t   * @param {Test} test\n\t   * @return {Suite} for chaining\n\t   */\n\n\n\t  Suite.prototype.addTest = function (test) {\n\t    test.parent = this;\n\t    test.timeout(this.timeout());\n\t    test.retries(this.retries());\n\t    test.slow(this.slow());\n\t    test.ctx = this.ctx;\n\t    this.tests.push(test);\n\t    this.emit(constants.EVENT_SUITE_ADD_TEST, test);\n\t    return this;\n\t  };\n\t  /**\n\t   * Return the full title generated by recursively concatenating the parent's\n\t   * full title.\n\t   *\n\t   * @memberof Suite\n\t   * @public\n\t   * @return {string}\n\t   */\n\n\n\t  Suite.prototype.fullTitle = function () {\n\t    return this.titlePath().join(' ');\n\t  };\n\t  /**\n\t   * Return the title path generated by recursively concatenating the parent's\n\t   * title path.\n\t   *\n\t   * @memberof Suite\n\t   * @public\n\t   * @return {string}\n\t   */\n\n\n\t  Suite.prototype.titlePath = function () {\n\t    var result = [];\n\n\t    if (this.parent) {\n\t      result = result.concat(this.parent.titlePath());\n\t    }\n\n\t    if (!this.root) {\n\t      result.push(this.title);\n\t    }\n\n\t    return result;\n\t  };\n\t  /**\n\t   * Return the total number of tests.\n\t   *\n\t   * @memberof Suite\n\t   * @public\n\t   * @return {number}\n\t   */\n\n\n\t  Suite.prototype.total = function () {\n\t    return this.suites.reduce(function (sum, suite) {\n\t      return sum + suite.total();\n\t    }, 0) + this.tests.length;\n\t  };\n\t  /**\n\t   * Iterates through each suite recursively to find all tests. Applies a\n\t   * function in the format `fn(test)`.\n\t   *\n\t   * @private\n\t   * @param {Function} fn\n\t   * @return {Suite}\n\t   */\n\n\n\t  Suite.prototype.eachTest = function (fn) {\n\t    this.tests.forEach(fn);\n\t    this.suites.forEach(function (suite) {\n\t      suite.eachTest(fn);\n\t    });\n\t    return this;\n\t  };\n\t  /**\n\t   * This will run the root suite if we happen to be running in delayed mode.\n\t   * @private\n\t   */\n\n\n\t  Suite.prototype.run = function run() {\n\t    if (this.root) {\n\t      this.emit(constants.EVENT_ROOT_SUITE_RUN);\n\t    }\n\t  };\n\t  /**\n\t   * Determines whether a suite has an `only` test or suite as a descendant.\n\t   *\n\t   * @private\n\t   * @returns {Boolean}\n\t   */\n\n\n\t  Suite.prototype.hasOnly = function hasOnly() {\n\t    return this._onlyTests.length > 0 || this._onlySuites.length > 0 || this.suites.some(function (suite) {\n\t      return suite.hasOnly();\n\t    });\n\t  };\n\t  /**\n\t   * Filter suites based on `isOnly` logic.\n\t   *\n\t   * @private\n\t   * @returns {Boolean}\n\t   */\n\n\n\t  Suite.prototype.filterOnly = function filterOnly() {\n\t    if (this._onlyTests.length) {\n\t      // If the suite contains `only` tests, run those and ignore any nested suites.\n\t      this.tests = this._onlyTests;\n\t      this.suites = [];\n\t    } else {\n\t      // Otherwise, do not run any of the tests in this suite.\n\t      this.tests = [];\n\n\t      this._onlySuites.forEach(function (onlySuite) {\n\t        // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.\n\t        // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.\n\t        if (onlySuite.hasOnly()) {\n\t          onlySuite.filterOnly();\n\t        }\n\t      }); // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.\n\n\n\t      var onlySuites = this._onlySuites;\n\t      this.suites = this.suites.filter(function (childSuite) {\n\t        return onlySuites.indexOf(childSuite) !== -1 || childSuite.filterOnly();\n\t      });\n\t    } // Keep the suite only if there is something to run\n\n\n\t    return this.tests.length > 0 || this.suites.length > 0;\n\t  };\n\t  /**\n\t   * Adds a suite to the list of subsuites marked `only`.\n\t   *\n\t   * @private\n\t   * @param {Suite} suite\n\t   */\n\n\n\t  Suite.prototype.appendOnlySuite = function (suite) {\n\t    this._onlySuites.push(suite);\n\t  };\n\t  /**\n\t   * Marks a suite to be `only`.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  Suite.prototype.markOnly = function () {\n\t    this.parent && this.parent.appendOnlySuite(this);\n\t  };\n\t  /**\n\t   * Adds a test to the list of tests marked `only`.\n\t   *\n\t   * @private\n\t   * @param {Test} test\n\t   */\n\n\n\t  Suite.prototype.appendOnlyTest = function (test) {\n\t    this._onlyTests.push(test);\n\t  };\n\t  /**\n\t   * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.\n\t   * @private\n\t   */\n\n\n\t  Suite.prototype.getHooks = function getHooks(name) {\n\t    return this['_' + name];\n\t  };\n\t  /**\n\t   * cleans all references from this suite and all child suites.\n\t   */\n\n\n\t  Suite.prototype.dispose = function () {\n\t    this.suites.forEach(function (suite) {\n\t      suite.dispose();\n\t    });\n\t    this.cleanReferences();\n\t  };\n\t  /**\n\t   * Cleans up the references to all the deferred functions\n\t   * (before/after/beforeEach/afterEach) and tests of a Suite.\n\t   * These must be deleted otherwise a memory leak can happen,\n\t   * as those functions may reference variables from closures,\n\t   * thus those variables can never be garbage collected as long\n\t   * as the deferred functions exist.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  Suite.prototype.cleanReferences = function cleanReferences() {\n\t    function cleanArrReferences(arr) {\n\t      for (var i = 0; i < arr.length; i++) {\n\t        delete arr[i].fn;\n\t      }\n\t    }\n\n\t    if (Array.isArray(this._beforeAll)) {\n\t      cleanArrReferences(this._beforeAll);\n\t    }\n\n\t    if (Array.isArray(this._beforeEach)) {\n\t      cleanArrReferences(this._beforeEach);\n\t    }\n\n\t    if (Array.isArray(this._afterAll)) {\n\t      cleanArrReferences(this._afterAll);\n\t    }\n\n\t    if (Array.isArray(this._afterEach)) {\n\t      cleanArrReferences(this._afterEach);\n\t    }\n\n\t    for (var i = 0; i < this.tests.length; i++) {\n\t      delete this.tests[i].fn;\n\t    }\n\t  };\n\t  /**\n\t   * Returns an object suitable for IPC.\n\t   * Functions are represented by keys beginning with `$$`.\n\t   * @private\n\t   * @returns {Object}\n\t   */\n\n\n\t  Suite.prototype.serialize = function serialize() {\n\t    return {\n\t      _bail: this._bail,\n\t      $$fullTitle: this.fullTitle(),\n\t      $$isPending: this.isPending(),\n\t      root: this.root,\n\t      title: this.title,\n\t      id: this.id,\n\t      parent: this.parent ? _defineProperty({}, MOCHA_ID_PROP_NAME, this.parent.id) : null\n\t    };\n\t  };\n\n\t  var constants = defineConstants(\n\t  /**\n\t   * {@link Suite}-related constants.\n\t   * @public\n\t   * @memberof Suite\n\t   * @alias constants\n\t   * @readonly\n\t   * @static\n\t   * @enum {string}\n\t   */\n\t  {\n\t    /**\n\t     * Event emitted after a test file has been loaded Not emitted in browser.\n\t     */\n\t    EVENT_FILE_POST_REQUIRE: 'post-require',\n\n\t    /**\n\t     * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.\n\t     */\n\t    EVENT_FILE_PRE_REQUIRE: 'pre-require',\n\n\t    /**\n\t     * Event emitted immediately after a test file has been loaded. Not emitted in browser.\n\t     */\n\t    EVENT_FILE_REQUIRE: 'require',\n\n\t    /**\n\t     * Event emitted when `global.run()` is called (use with `delay` option)\n\t     */\n\t    EVENT_ROOT_SUITE_RUN: 'run',\n\n\t    /**\n\t     * Namespace for collection of a `Suite`'s \"after all\" hooks\n\t     */\n\t    HOOK_TYPE_AFTER_ALL: 'afterAll',\n\n\t    /**\n\t     * Namespace for collection of a `Suite`'s \"after each\" hooks\n\t     */\n\t    HOOK_TYPE_AFTER_EACH: 'afterEach',\n\n\t    /**\n\t     * Namespace for collection of a `Suite`'s \"before all\" hooks\n\t     */\n\t    HOOK_TYPE_BEFORE_ALL: 'beforeAll',\n\n\t    /**\n\t     * Namespace for collection of a `Suite`'s \"before all\" hooks\n\t     */\n\t    HOOK_TYPE_BEFORE_EACH: 'beforeEach',\n\t    // the following events are all deprecated\n\n\t    /**\n\t     * Emitted after an \"after all\" `Hook` has been added to a `Suite`. Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_HOOK_AFTER_ALL: 'afterAll',\n\n\t    /**\n\t     * Emitted after an \"after each\" `Hook` has been added to a `Suite` Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_HOOK_AFTER_EACH: 'afterEach',\n\n\t    /**\n\t     * Emitted after an \"before all\" `Hook` has been added to a `Suite` Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_HOOK_BEFORE_ALL: 'beforeAll',\n\n\t    /**\n\t     * Emitted after an \"before each\" `Hook` has been added to a `Suite` Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_HOOK_BEFORE_EACH: 'beforeEach',\n\n\t    /**\n\t     * Emitted after a child `Suite` has been added to a `Suite`. Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_SUITE: 'suite',\n\n\t    /**\n\t     * Emitted after a `Test` has been added to a `Suite`. Deprecated\n\t     */\n\t    EVENT_SUITE_ADD_TEST: 'test'\n\t  });\n\t  /**\n\t   * @summary There are no known use cases for these events.\n\t   * @desc This is a `Set`-like object having all keys being the constant's string value and the value being `true`.\n\t   * @todo Remove eventually\n\t   * @type {Object<string,boolean>}\n\t   * @ignore\n\t   */\n\n\t  var deprecatedEvents = Object.keys(constants).filter(function (constant) {\n\t    return constant.substring(0, 15) === 'EVENT_SUITE_ADD';\n\t  }).reduce(function (acc, constant) {\n\t    acc[constants[constant]] = true;\n\t    return acc;\n\t  }, createMap());\n\t  Suite.constants = constants;\n\t});\n\n\t/**\n\t * Module dependencies.\n\t * @private\n\t */\n\n\n\tvar EventEmitter$2 = EventEmitter.EventEmitter;\n\tvar debug$2 = browser$2('mocha:runner');\n\tvar HOOK_TYPE_BEFORE_EACH = suite.constants.HOOK_TYPE_BEFORE_EACH;\n\tvar HOOK_TYPE_AFTER_EACH = suite.constants.HOOK_TYPE_AFTER_EACH;\n\tvar HOOK_TYPE_AFTER_ALL = suite.constants.HOOK_TYPE_AFTER_ALL;\n\tvar HOOK_TYPE_BEFORE_ALL = suite.constants.HOOK_TYPE_BEFORE_ALL;\n\tvar EVENT_ROOT_SUITE_RUN = suite.constants.EVENT_ROOT_SUITE_RUN;\n\tvar STATE_FAILED = runnable.constants.STATE_FAILED;\n\tvar STATE_PASSED = runnable.constants.STATE_PASSED;\n\tvar STATE_PENDING = runnable.constants.STATE_PENDING;\n\tvar dQuote = utils.dQuote;\n\tvar sQuote = utils.sQuote;\n\tvar stackFilter = utils.stackTraceFilter();\n\tvar stringify = utils.stringify;\n\tvar createInvalidExceptionError$2 = errors.createInvalidExceptionError,\n\t    createUnsupportedError$1 = errors.createUnsupportedError,\n\t    createFatalError$1 = errors.createFatalError,\n\t    isMochaError$1 = errors.isMochaError,\n\t    errorConstants = errors.constants;\n\t/**\n\t * Non-enumerable globals.\n\t * @private\n\t * @readonly\n\t */\n\n\tvar globals = ['setTimeout', 'clearTimeout', 'setInterval', 'clearInterval', 'XMLHttpRequest', 'Date', 'setImmediate', 'clearImmediate'];\n\tvar constants$3 = utils.defineConstants(\n\t/**\n\t * {@link Runner}-related constants.\n\t * @public\n\t * @memberof Runner\n\t * @readonly\n\t * @alias constants\n\t * @static\n\t * @enum {string}\n\t */\n\t{\n\t  /**\n\t   * Emitted when {@link Hook} execution begins\n\t   */\n\t  EVENT_HOOK_BEGIN: 'hook',\n\n\t  /**\n\t   * Emitted when {@link Hook} execution ends\n\t   */\n\t  EVENT_HOOK_END: 'hook end',\n\n\t  /**\n\t   * Emitted when Root {@link Suite} execution begins (all files have been parsed and hooks/tests are ready for execution)\n\t   */\n\t  EVENT_RUN_BEGIN: 'start',\n\n\t  /**\n\t   * Emitted when Root {@link Suite} execution has been delayed via `delay` option\n\t   */\n\t  EVENT_DELAY_BEGIN: 'waiting',\n\n\t  /**\n\t   * Emitted when delayed Root {@link Suite} execution is triggered by user via `global.run()`\n\t   */\n\t  EVENT_DELAY_END: 'ready',\n\n\t  /**\n\t   * Emitted when Root {@link Suite} execution ends\n\t   */\n\t  EVENT_RUN_END: 'end',\n\n\t  /**\n\t   * Emitted when {@link Suite} execution begins\n\t   */\n\t  EVENT_SUITE_BEGIN: 'suite',\n\n\t  /**\n\t   * Emitted when {@link Suite} execution ends\n\t   */\n\t  EVENT_SUITE_END: 'suite end',\n\n\t  /**\n\t   * Emitted when {@link Test} execution begins\n\t   */\n\t  EVENT_TEST_BEGIN: 'test',\n\n\t  /**\n\t   * Emitted when {@link Test} execution ends\n\t   */\n\t  EVENT_TEST_END: 'test end',\n\n\t  /**\n\t   * Emitted when {@link Test} execution fails\n\t   */\n\t  EVENT_TEST_FAIL: 'fail',\n\n\t  /**\n\t   * Emitted when {@link Test} execution succeeds\n\t   */\n\t  EVENT_TEST_PASS: 'pass',\n\n\t  /**\n\t   * Emitted when {@link Test} becomes pending\n\t   */\n\t  EVENT_TEST_PENDING: 'pending',\n\n\t  /**\n\t   * Emitted when {@link Test} execution has failed, but will retry\n\t   */\n\t  EVENT_TEST_RETRY: 'retry',\n\n\t  /**\n\t   * Initial state of Runner\n\t   */\n\t  STATE_IDLE: 'idle',\n\n\t  /**\n\t   * State set to this value when the Runner has started running\n\t   */\n\t  STATE_RUNNING: 'running',\n\n\t  /**\n\t   * State set to this value when the Runner has stopped\n\t   */\n\t  STATE_STOPPED: 'stopped'\n\t});\n\n\tvar Runner = /*#__PURE__*/function (_EventEmitter) {\n\t  _inherits(Runner, _EventEmitter);\n\n\t  var _super = _createSuper(Runner);\n\n\t  /**\n\t   * Initialize a `Runner` at the Root {@link Suite}, which represents a hierarchy of {@link Suite|Suites} and {@link Test|Tests}.\n\t   *\n\t   * @extends external:EventEmitter\n\t   * @public\n\t   * @class\n\t   * @param {Suite} suite - Root suite\n\t   * @param {Object|boolean} [opts] - Options. If `boolean`, whether or not to delay execution of root suite until ready (for backwards compatibility).\n\t   * @param {boolean} [opts.delay] - Whether to delay execution of root suite until ready.\n\t   * @param {boolean} [opts.cleanReferencesAfterRun] - Whether to clean references to test fns and hooks when a suite is done.\n\t   */\n\t  function Runner(suite, opts) {\n\t    var _this;\n\n\t    _classCallCheck(this, Runner);\n\n\t    _this = _super.call(this);\n\n\t    if (opts === undefined) {\n\t      opts = {};\n\t    }\n\n\t    if (typeof opts === 'boolean') {\n\t      // TODO: deprecate this\n\t      _this._delay = opts;\n\t      opts = {};\n\t    } else {\n\t      _this._delay = opts.delay;\n\t    }\n\n\t    var self = _assertThisInitialized(_this);\n\n\t    _this._globals = [];\n\t    _this._abort = false;\n\t    _this.suite = suite;\n\t    _this._opts = opts;\n\t    _this.state = constants$3.STATE_IDLE;\n\t    _this.total = suite.total();\n\t    _this.failures = 0;\n\t    /**\n\t     * @type {Map<EventEmitter,Map<string,Set<EventListener>>>}\n\t     */\n\n\t    _this._eventListeners = new Map();\n\n\t    _this.on(constants$3.EVENT_TEST_END, function (test) {\n\t      if (test.type === 'test' && test.retriedTest() && test.parent) {\n\t        var idx = test.parent.tests && test.parent.tests.indexOf(test.retriedTest());\n\t        if (idx > -1) test.parent.tests[idx] = test;\n\t      }\n\n\t      self.checkGlobals(test);\n\t    });\n\n\t    _this.on(constants$3.EVENT_HOOK_END, function (hook) {\n\t      self.checkGlobals(hook);\n\t    });\n\n\t    _this._defaultGrep = /.*/;\n\n\t    _this.grep(_this._defaultGrep);\n\n\t    _this.globals(_this.globalProps());\n\n\t    _this.uncaught = _this._uncaught.bind(_assertThisInitialized(_this));\n\n\t    _this.unhandled = function (reason, promise) {\n\t      if (isMochaError$1(reason)) {\n\t        debug$2('trapped unhandled rejection coming out of Mocha; forwarding to uncaught handler:', reason);\n\n\t        _this.uncaught(reason);\n\t      } else {\n\t        debug$2('trapped unhandled rejection from (probably) user code; re-emitting on process');\n\n\t        _this._removeEventListener(process$1, 'unhandledRejection', _this.unhandled);\n\n\t        try {\n\t          process$1.emit('unhandledRejection', reason, promise);\n\t        } finally {\n\t          _this._addEventListener(process$1, 'unhandledRejection', _this.unhandled);\n\t        }\n\t      }\n\t    };\n\n\t    return _this;\n\t  }\n\n\t  return Runner;\n\t}(EventEmitter$2);\n\t/**\n\t * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n\t *\n\t * @param {Function} fn\n\t * @private\n\t */\n\n\n\tRunner.immediately = commonjsGlobal.setImmediate || nextTick;\n\t/**\n\t * Replacement for `target.on(eventName, listener)` that does bookkeeping to remove them when this runner instance is disposed.\n\t * @param {EventEmitter} target - The `EventEmitter`\n\t * @param {string} eventName - The event name\n\t * @param {string} fn - Listener function\n\t * @private\n\t */\n\n\tRunner.prototype._addEventListener = function (target, eventName, listener) {\n\t  debug$2('_addEventListener(): adding for event %s; %d current listeners', eventName, target.listenerCount(eventName));\n\t  /* istanbul ignore next */\n\n\t  if (this._eventListeners.has(target) && this._eventListeners.get(target).has(eventName) && this._eventListeners.get(target).get(eventName).has(listener)) {\n\t    debug$2('warning: tried to attach duplicate event listener for %s', eventName);\n\t    return;\n\t  }\n\n\t  target.on(eventName, listener);\n\t  var targetListeners = this._eventListeners.has(target) ? this._eventListeners.get(target) : new Map();\n\t  var targetEventListeners = targetListeners.has(eventName) ? targetListeners.get(eventName) : new Set();\n\t  targetEventListeners.add(listener);\n\t  targetListeners.set(eventName, targetEventListeners);\n\n\t  this._eventListeners.set(target, targetListeners);\n\t};\n\t/**\n\t * Replacement for `target.removeListener(eventName, listener)` that also updates the bookkeeping.\n\t * @param {EventEmitter} target - The `EventEmitter`\n\t * @param {string} eventName - The event name\n\t * @param {function} listener - Listener function\n\t * @private\n\t */\n\n\n\tRunner.prototype._removeEventListener = function (target, eventName, listener) {\n\t  target.removeListener(eventName, listener);\n\n\t  if (this._eventListeners.has(target)) {\n\t    var targetListeners = this._eventListeners.get(target);\n\n\t    if (targetListeners.has(eventName)) {\n\t      var targetEventListeners = targetListeners.get(eventName);\n\t      targetEventListeners[\"delete\"](listener);\n\n\t      if (!targetEventListeners.size) {\n\t        targetListeners[\"delete\"](eventName);\n\t      }\n\t    }\n\n\t    if (!targetListeners.size) {\n\t      this._eventListeners[\"delete\"](target);\n\t    }\n\t  } else {\n\t    debug$2('trying to remove listener for untracked object %s', target);\n\t  }\n\t};\n\t/**\n\t * Removes all event handlers set during a run on this instance.\n\t * Remark: this does _not_ clean/dispose the tests or suites themselves.\n\t */\n\n\n\tRunner.prototype.dispose = function () {\n\t  this.removeAllListeners();\n\n\t  this._eventListeners.forEach(function (targetListeners, target) {\n\t    targetListeners.forEach(function (targetEventListeners, eventName) {\n\t      targetEventListeners.forEach(function (listener) {\n\t        target.removeListener(eventName, listener);\n\t      });\n\t    });\n\t  });\n\n\t  this._eventListeners.clear();\n\t};\n\t/**\n\t * Run tests with full titles matching `re`. Updates runner.total\n\t * with number of tests matched.\n\t *\n\t * @public\n\t * @memberof Runner\n\t * @param {RegExp} re\n\t * @param {boolean} invert\n\t * @return {Runner} Runner instance.\n\t */\n\n\n\tRunner.prototype.grep = function (re, invert) {\n\t  debug$2('grep(): setting to %s', re);\n\t  this._grep = re;\n\t  this._invert = invert;\n\t  this.total = this.grepTotal(this.suite);\n\t  return this;\n\t};\n\t/**\n\t * Returns the number of tests matching the grep search for the\n\t * given suite.\n\t *\n\t * @memberof Runner\n\t * @public\n\t * @param {Suite} suite\n\t * @return {number}\n\t */\n\n\n\tRunner.prototype.grepTotal = function (suite) {\n\t  var self = this;\n\t  var total = 0;\n\t  suite.eachTest(function (test) {\n\t    var match = self._grep.test(test.fullTitle());\n\n\t    if (self._invert) {\n\t      match = !match;\n\t    }\n\n\t    if (match) {\n\t      total++;\n\t    }\n\t  });\n\t  return total;\n\t};\n\t/**\n\t * Return a list of global properties.\n\t *\n\t * @return {Array}\n\t * @private\n\t */\n\n\n\tRunner.prototype.globalProps = function () {\n\t  var props = Object.keys(commonjsGlobal); // non-enumerables\n\n\t  for (var i = 0; i < globals.length; ++i) {\n\t    if (~props.indexOf(globals[i])) {\n\t      continue;\n\t    }\n\n\t    props.push(globals[i]);\n\t  }\n\n\t  return props;\n\t};\n\t/**\n\t * Allow the given `arr` of globals.\n\t *\n\t * @public\n\t * @memberof Runner\n\t * @param {Array} arr\n\t * @return {Runner} Runner instance.\n\t */\n\n\n\tRunner.prototype.globals = function (arr) {\n\t  if (!arguments.length) {\n\t    return this._globals;\n\t  }\n\n\t  debug$2('globals(): setting to %O', arr);\n\t  this._globals = this._globals.concat(arr);\n\t  return this;\n\t};\n\t/**\n\t * Check for global variable leaks.\n\t *\n\t * @private\n\t */\n\n\n\tRunner.prototype.checkGlobals = function (test) {\n\t  if (!this.checkLeaks) {\n\t    return;\n\t  }\n\n\t  var ok = this._globals;\n\t  var globals = this.globalProps();\n\t  var leaks;\n\n\t  if (test) {\n\t    ok = ok.concat(test._allowedGlobals || []);\n\t  }\n\n\t  if (this.prevGlobalsLength === globals.length) {\n\t    return;\n\t  }\n\n\t  this.prevGlobalsLength = globals.length;\n\t  leaks = filterLeaks(ok, globals);\n\t  this._globals = this._globals.concat(leaks);\n\n\t  if (leaks.length) {\n\t    var msg = 'global leak(s) detected: %s';\n\t    var error = new Error(util.format(msg, leaks.map(sQuote).join(', ')));\n\t    this.fail(test, error);\n\t  }\n\t};\n\t/**\n\t * Fail the given `test`.\n\t *\n\t * If `test` is a hook, failures work in the following pattern:\n\t * - If bail, run corresponding `after each` and `after` hooks,\n\t *   then exit\n\t * - Failed `before` hook skips all tests in a suite and subsuites,\n\t *   but jumps to corresponding `after` hook\n\t * - Failed `before each` hook skips remaining tests in a\n\t *   suite and jumps to corresponding `after each` hook,\n\t *   which is run only once\n\t * - Failed `after` hook does not alter execution order\n\t * - Failed `after each` hook skips remaining tests in a\n\t *   suite and subsuites, but executes other `after each`\n\t *   hooks\n\t *\n\t * @private\n\t * @param {Runnable} test\n\t * @param {Error} err\n\t * @param {boolean} [force=false] - Whether to fail a pending test.\n\t */\n\n\n\tRunner.prototype.fail = function (test, err, force) {\n\t  force = force === true;\n\n\t  if (test.isPending() && !force) {\n\t    return;\n\t  }\n\n\t  if (this.state === constants$3.STATE_STOPPED) {\n\t    if (err.code === errorConstants.MULTIPLE_DONE) {\n\t      throw err;\n\t    }\n\n\t    throw createFatalError$1('Test failed after root suite execution completed!', err);\n\t  }\n\n\t  ++this.failures;\n\t  debug$2('total number of failures: %d', this.failures);\n\t  test.state = STATE_FAILED;\n\n\t  if (!isError$1(err)) {\n\t    err = thrown2Error(err);\n\t  }\n\n\t  try {\n\t    err.stack = this.fullStackTrace || !err.stack ? err.stack : stackFilter(err.stack);\n\t  } catch (ignore) {// some environments do not take kindly to monkeying with the stack\n\t  }\n\n\t  this.emit(constants$3.EVENT_TEST_FAIL, test, err);\n\t};\n\t/**\n\t * Run hook `name` callbacks and then invoke `fn()`.\n\t *\n\t * @private\n\t * @param {string} name\n\t * @param {Function} fn\n\t */\n\n\n\tRunner.prototype.hook = function (name, fn) {\n\t  var suite = this.suite;\n\t  var hooks = suite.getHooks(name);\n\t  var self = this;\n\n\t  function next(i) {\n\t    var hook = hooks[i];\n\n\t    if (!hook) {\n\t      return fn();\n\t    }\n\n\t    self.currentRunnable = hook;\n\n\t    if (name === HOOK_TYPE_BEFORE_ALL) {\n\t      hook.ctx.currentTest = hook.parent.tests[0];\n\t    } else if (name === HOOK_TYPE_AFTER_ALL) {\n\t      hook.ctx.currentTest = hook.parent.tests[hook.parent.tests.length - 1];\n\t    } else {\n\t      hook.ctx.currentTest = self.test;\n\t    }\n\n\t    setHookTitle(hook);\n\t    hook.allowUncaught = self.allowUncaught;\n\t    self.emit(constants$3.EVENT_HOOK_BEGIN, hook);\n\n\t    if (!hook.listeners('error').length) {\n\t      self._addEventListener(hook, 'error', function (err) {\n\t        self.fail(hook, err);\n\t      });\n\t    }\n\n\t    hook.run(function cbHookRun(err) {\n\t      var testError = hook.error();\n\n\t      if (testError) {\n\t        self.fail(self.test, testError);\n\t      } // conditional skip\n\n\n\t      if (hook.pending) {\n\t        if (name === HOOK_TYPE_AFTER_EACH) {\n\t          // TODO define and implement use case\n\t          if (self.test) {\n\t            self.test.pending = true;\n\t          }\n\t        } else if (name === HOOK_TYPE_BEFORE_EACH) {\n\t          if (self.test) {\n\t            self.test.pending = true;\n\t          }\n\n\t          self.emit(constants$3.EVENT_HOOK_END, hook);\n\t          hook.pending = false; // activates hook for next test\n\n\t          return fn(new Error('abort hookDown'));\n\t        } else if (name === HOOK_TYPE_BEFORE_ALL) {\n\t          suite.tests.forEach(function (test) {\n\t            test.pending = true;\n\t          });\n\t          suite.suites.forEach(function (suite) {\n\t            suite.pending = true;\n\t          });\n\t          hooks = [];\n\t        } else {\n\t          hook.pending = false;\n\t          var errForbid = createUnsupportedError$1('`this.skip` forbidden');\n\t          self.fail(hook, errForbid);\n\t          return fn(errForbid);\n\t        }\n\t      } else if (err) {\n\t        self.fail(hook, err); // stop executing hooks, notify callee of hook err\n\n\t        return fn(err);\n\t      }\n\n\t      self.emit(constants$3.EVENT_HOOK_END, hook);\n\t      delete hook.ctx.currentTest;\n\t      setHookTitle(hook);\n\t      next(++i);\n\t    });\n\n\t    function setHookTitle(hook) {\n\t      hook.originalTitle = hook.originalTitle || hook.title;\n\n\t      if (hook.ctx && hook.ctx.currentTest) {\n\t        hook.title = hook.originalTitle + ' for ' + dQuote(hook.ctx.currentTest.title);\n\t      } else {\n\t        var parentTitle;\n\n\t        if (hook.parent.title) {\n\t          parentTitle = hook.parent.title;\n\t        } else {\n\t          parentTitle = hook.parent.root ? '{root}' : '';\n\t        }\n\n\t        hook.title = hook.originalTitle + ' in ' + dQuote(parentTitle);\n\t      }\n\t    }\n\t  }\n\n\t  Runner.immediately(function () {\n\t    next(0);\n\t  });\n\t};\n\t/**\n\t * Run hook `name` for the given array of `suites`\n\t * in order, and callback `fn(err, errSuite)`.\n\t *\n\t * @private\n\t * @param {string} name\n\t * @param {Array} suites\n\t * @param {Function} fn\n\t */\n\n\n\tRunner.prototype.hooks = function (name, suites, fn) {\n\t  var self = this;\n\t  var orig = this.suite;\n\n\t  function next(suite) {\n\t    self.suite = suite;\n\n\t    if (!suite) {\n\t      self.suite = orig;\n\t      return fn();\n\t    }\n\n\t    self.hook(name, function (err) {\n\t      if (err) {\n\t        var errSuite = self.suite;\n\t        self.suite = orig;\n\t        return fn(err, errSuite);\n\t      }\n\n\t      next(suites.pop());\n\t    });\n\t  }\n\n\t  next(suites.pop());\n\t};\n\t/**\n\t * Run hooks from the top level down.\n\t *\n\t * @param {String} name\n\t * @param {Function} fn\n\t * @private\n\t */\n\n\n\tRunner.prototype.hookUp = function (name, fn) {\n\t  var suites = [this.suite].concat(this.parents()).reverse();\n\t  this.hooks(name, suites, fn);\n\t};\n\t/**\n\t * Run hooks from the bottom up.\n\t *\n\t * @param {String} name\n\t * @param {Function} fn\n\t * @private\n\t */\n\n\n\tRunner.prototype.hookDown = function (name, fn) {\n\t  var suites = [this.suite].concat(this.parents());\n\t  this.hooks(name, suites, fn);\n\t};\n\t/**\n\t * Return an array of parent Suites from\n\t * closest to furthest.\n\t *\n\t * @return {Array}\n\t * @private\n\t */\n\n\n\tRunner.prototype.parents = function () {\n\t  var suite = this.suite;\n\t  var suites = [];\n\n\t  while (suite.parent) {\n\t    suite = suite.parent;\n\t    suites.push(suite);\n\t  }\n\n\t  return suites;\n\t};\n\t/**\n\t * Run the current test and callback `fn(err)`.\n\t *\n\t * @param {Function} fn\n\t * @private\n\t */\n\n\n\tRunner.prototype.runTest = function (fn) {\n\t  var self = this;\n\t  var test = this.test;\n\n\t  if (!test) {\n\t    return;\n\t  }\n\n\t  if (this.asyncOnly) {\n\t    test.asyncOnly = true;\n\t  }\n\n\t  this._addEventListener(test, 'error', function (err) {\n\t    self.fail(test, err);\n\t  });\n\n\t  if (this.allowUncaught) {\n\t    test.allowUncaught = true;\n\t    return test.run(fn);\n\t  }\n\n\t  try {\n\t    test.run(fn);\n\t  } catch (err) {\n\t    fn(err);\n\t  }\n\t};\n\t/**\n\t * Run tests in the given `suite` and invoke the callback `fn()` when complete.\n\t *\n\t * @private\n\t * @param {Suite} suite\n\t * @param {Function} fn\n\t */\n\n\n\tRunner.prototype.runTests = function (suite, fn) {\n\t  var self = this;\n\t  var tests = suite.tests.slice();\n\t  var test;\n\n\t  function hookErr(_, errSuite, after) {\n\t    // before/after Each hook for errSuite failed:\n\t    var orig = self.suite; // for failed 'after each' hook start from errSuite parent,\n\t    // otherwise start from errSuite itself\n\n\t    self.suite = after ? errSuite.parent : errSuite;\n\n\t    if (self.suite) {\n\t      // call hookUp afterEach\n\t      self.hookUp(HOOK_TYPE_AFTER_EACH, function (err2, errSuite2) {\n\t        self.suite = orig; // some hooks may fail even now\n\n\t        if (err2) {\n\t          return hookErr(err2, errSuite2, true);\n\t        } // report error suite\n\n\n\t        fn(errSuite);\n\t      });\n\t    } else {\n\t      // there is no need calling other 'after each' hooks\n\t      self.suite = orig;\n\t      fn(errSuite);\n\t    }\n\t  }\n\n\t  function next(err, errSuite) {\n\t    // if we bail after first err\n\t    if (self.failures && suite._bail) {\n\t      tests = [];\n\t    }\n\n\t    if (self._abort) {\n\t      return fn();\n\t    }\n\n\t    if (err) {\n\t      return hookErr(err, errSuite, true);\n\t    } // next test\n\n\n\t    test = tests.shift(); // all done\n\n\t    if (!test) {\n\t      return fn();\n\t    } // grep\n\n\n\t    var match = self._grep.test(test.fullTitle());\n\n\t    if (self._invert) {\n\t      match = !match;\n\t    }\n\n\t    if (!match) {\n\t      // Run immediately only if we have defined a grep. When we\n\t      // define a grep — It can cause maximum callstack error if\n\t      // the grep is doing a large recursive loop by neglecting\n\t      // all tests. The run immediately function also comes with\n\t      // a performance cost. So we don't want to run immediately\n\t      // if we run the whole test suite, because running the whole\n\t      // test suite don't do any immediate recursive loops. Thus,\n\t      // allowing a JS runtime to breathe.\n\t      if (self._grep !== self._defaultGrep) {\n\t        Runner.immediately(next);\n\t      } else {\n\t        next();\n\t      }\n\n\t      return;\n\t    } // static skip, no hooks are executed\n\n\n\t    if (test.isPending()) {\n\t      if (self.forbidPending) {\n\t        self.fail(test, new Error('Pending test forbidden'), true);\n\t      } else {\n\t        test.state = STATE_PENDING;\n\t        self.emit(constants$3.EVENT_TEST_PENDING, test);\n\t      }\n\n\t      self.emit(constants$3.EVENT_TEST_END, test);\n\t      return next();\n\t    } // execute test and hook(s)\n\n\n\t    self.emit(constants$3.EVENT_TEST_BEGIN, self.test = test);\n\t    self.hookDown(HOOK_TYPE_BEFORE_EACH, function (err, errSuite) {\n\t      // conditional skip within beforeEach\n\t      if (test.isPending()) {\n\t        if (self.forbidPending) {\n\t          self.fail(test, new Error('Pending test forbidden'), true);\n\t        } else {\n\t          test.state = STATE_PENDING;\n\t          self.emit(constants$3.EVENT_TEST_PENDING, test);\n\t        }\n\n\t        self.emit(constants$3.EVENT_TEST_END, test); // skip inner afterEach hooks below errSuite level\n\n\t        var origSuite = self.suite;\n\t        self.suite = errSuite || self.suite;\n\t        return self.hookUp(HOOK_TYPE_AFTER_EACH, function (e, eSuite) {\n\t          self.suite = origSuite;\n\t          next(e, eSuite);\n\t        });\n\t      }\n\n\t      if (err) {\n\t        return hookErr(err, errSuite, false);\n\t      }\n\n\t      self.currentRunnable = self.test;\n\t      self.runTest(function (err) {\n\t        test = self.test; // conditional skip within it\n\n\t        if (test.pending) {\n\t          if (self.forbidPending) {\n\t            self.fail(test, new Error('Pending test forbidden'), true);\n\t          } else {\n\t            test.state = STATE_PENDING;\n\t            self.emit(constants$3.EVENT_TEST_PENDING, test);\n\t          }\n\n\t          self.emit(constants$3.EVENT_TEST_END, test);\n\t          return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n\t        } else if (err) {\n\t          var retry = test.currentRetry();\n\n\t          if (retry < test.retries()) {\n\t            var clonedTest = test.clone();\n\t            clonedTest.currentRetry(retry + 1);\n\t            tests.unshift(clonedTest);\n\t            self.emit(constants$3.EVENT_TEST_RETRY, test, err); // Early return + hook trigger so that it doesn't\n\t            // increment the count wrong\n\n\t            return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n\t          } else {\n\t            self.fail(test, err);\n\t          }\n\n\t          self.emit(constants$3.EVENT_TEST_END, test);\n\t          return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n\t        }\n\n\t        test.state = STATE_PASSED;\n\t        self.emit(constants$3.EVENT_TEST_PASS, test);\n\t        self.emit(constants$3.EVENT_TEST_END, test);\n\t        self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n\t      });\n\t    });\n\t  }\n\n\t  this.next = next;\n\t  this.hookErr = hookErr;\n\t  next();\n\t};\n\t/**\n\t * Run the given `suite` and invoke the callback `fn()` when complete.\n\t *\n\t * @private\n\t * @param {Suite} suite\n\t * @param {Function} fn\n\t */\n\n\n\tRunner.prototype.runSuite = function (suite, fn) {\n\t  var i = 0;\n\t  var self = this;\n\t  var total = this.grepTotal(suite);\n\t  debug$2('runSuite(): running %s', suite.fullTitle());\n\n\t  if (!total || self.failures && suite._bail) {\n\t    debug$2('runSuite(): bailing');\n\t    return fn();\n\t  }\n\n\t  this.emit(constants$3.EVENT_SUITE_BEGIN, this.suite = suite);\n\n\t  function next(errSuite) {\n\t    if (errSuite) {\n\t      // current suite failed on a hook from errSuite\n\t      if (errSuite === suite) {\n\t        // if errSuite is current suite\n\t        // continue to the next sibling suite\n\t        return done();\n\t      } // errSuite is among the parents of current suite\n\t      // stop execution of errSuite and all sub-suites\n\n\n\t      return done(errSuite);\n\t    }\n\n\t    if (self._abort) {\n\t      return done();\n\t    }\n\n\t    var curr = suite.suites[i++];\n\n\t    if (!curr) {\n\t      return done();\n\t    } // Avoid grep neglecting large number of tests causing a\n\t    // huge recursive loop and thus a maximum call stack error.\n\t    // See comment in `this.runTests()` for more information.\n\n\n\t    if (self._grep !== self._defaultGrep) {\n\t      Runner.immediately(function () {\n\t        self.runSuite(curr, next);\n\t      });\n\t    } else {\n\t      self.runSuite(curr, next);\n\t    }\n\t  }\n\n\t  function done(errSuite) {\n\t    self.suite = suite;\n\t    self.nextSuite = next; // remove reference to test\n\n\t    delete self.test;\n\t    self.hook(HOOK_TYPE_AFTER_ALL, function () {\n\t      self.emit(constants$3.EVENT_SUITE_END, suite);\n\t      fn(errSuite);\n\t    });\n\t  }\n\n\t  this.nextSuite = next;\n\t  this.hook(HOOK_TYPE_BEFORE_ALL, function (err) {\n\t    if (err) {\n\t      return done();\n\t    }\n\n\t    self.runTests(suite, next);\n\t  });\n\t};\n\t/**\n\t * Handle uncaught exceptions within runner.\n\t *\n\t * This function is bound to the instance as `Runner#uncaught` at instantiation\n\t * time. It's intended to be listening on the `Process.uncaughtException` event.\n\t * In order to not leak EE listeners, we need to ensure no more than a single\n\t * `uncaughtException` listener exists per `Runner`.  The only way to do\n\t * this--because this function needs the context (and we don't have lambdas)--is\n\t * to use `Function.prototype.bind`. We need strict equality to unregister and\n\t * _only_ unregister the _one_ listener we set from the\n\t * `Process.uncaughtException` event; would be poor form to just remove\n\t * everything. See {@link Runner#run} for where the event listener is registered\n\t * and unregistered.\n\t * @param {Error} err - Some uncaught error\n\t * @private\n\t */\n\n\n\tRunner.prototype._uncaught = function (err) {\n\t  // this is defensive to prevent future developers from mis-calling this function.\n\t  // it's more likely that it'd be called with the incorrect context--say, the global\n\t  // `process` object--than it would to be called with a context that is not a \"subclass\"\n\t  // of `Runner`.\n\t  if (!(this instanceof Runner)) {\n\t    throw createFatalError$1('Runner#uncaught() called with invalid context', this);\n\t  }\n\n\t  if (err instanceof pending) {\n\t    debug$2('uncaught(): caught a Pending');\n\t    return;\n\t  } // browser does not exit script when throwing in global.onerror()\n\n\n\t  if (this.allowUncaught && !utils.isBrowser()) {\n\t    debug$2('uncaught(): bubbling exception due to --allow-uncaught');\n\t    throw err;\n\t  }\n\n\t  if (this.state === constants$3.STATE_STOPPED) {\n\t    debug$2('uncaught(): throwing after run has completed!');\n\t    throw err;\n\t  }\n\n\t  if (err) {\n\t    debug$2('uncaught(): got truthy exception %O', err);\n\t  } else {\n\t    debug$2('uncaught(): undefined/falsy exception');\n\t    err = createInvalidExceptionError$2('Caught falsy/undefined exception which would otherwise be uncaught. No stack trace found; try a debugger', err);\n\t  }\n\n\t  if (!isError$1(err)) {\n\t    err = thrown2Error(err);\n\t    debug$2('uncaught(): converted \"error\" %o to Error', err);\n\t  }\n\n\t  err.uncaught = true;\n\t  var runnable$1 = this.currentRunnable;\n\n\t  if (!runnable$1) {\n\t    runnable$1 = new runnable('Uncaught error outside test suite');\n\t    debug$2('uncaught(): no current Runnable; created a phony one');\n\t    runnable$1.parent = this.suite;\n\n\t    if (this.state === constants$3.STATE_RUNNING) {\n\t      debug$2('uncaught(): failing gracefully');\n\t      this.fail(runnable$1, err);\n\t    } else {\n\t      // Can't recover from this failure\n\t      debug$2('uncaught(): test run has not yet started; unrecoverable');\n\t      this.emit(constants$3.EVENT_RUN_BEGIN);\n\t      this.fail(runnable$1, err);\n\t      this.emit(constants$3.EVENT_RUN_END);\n\t    }\n\n\t    return;\n\t  }\n\n\t  runnable$1.clearTimeout();\n\n\t  if (runnable$1.isFailed()) {\n\t    debug$2('uncaught(): Runnable has already failed'); // Ignore error if already failed\n\n\t    return;\n\t  } else if (runnable$1.isPending()) {\n\t    debug$2('uncaught(): pending Runnable wound up failing!'); // report 'pending test' retrospectively as failed\n\n\t    this.fail(runnable$1, err, true);\n\t    return;\n\t  } // we cannot recover gracefully if a Runnable has already passed\n\t  // then fails asynchronously\n\n\n\t  if (runnable$1.isPassed()) {\n\t    debug$2('uncaught(): Runnable has already passed; bailing gracefully');\n\t    this.fail(runnable$1, err);\n\t    this.abort();\n\t  } else {\n\t    debug$2('uncaught(): forcing Runnable to complete with Error');\n\t    return runnable$1.callback(err);\n\t  }\n\t};\n\t/**\n\t * Run the root suite and invoke `fn(failures)`\n\t * on completion.\n\t *\n\t * @public\n\t * @memberof Runner\n\t * @param {Function} fn - Callback when finished\n\t * @param {{files: string[], options: Options}} [opts] - For subclasses\n\t * @returns {Runner} Runner instance.\n\t */\n\n\n\tRunner.prototype.run = function (fn) {\n\t  var _this2 = this;\n\n\t  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t  var rootSuite = this.suite;\n\t  var options = opts.options || {};\n\t  debug$2('run(): got options: %O', options);\n\n\t  fn = fn || function () {};\n\n\t  var end = function end() {\n\t    debug$2('run(): root suite completed; emitting %s', constants$3.EVENT_RUN_END);\n\n\t    _this2.emit(constants$3.EVENT_RUN_END);\n\t  };\n\n\t  var begin = function begin() {\n\t    debug$2('run(): emitting %s', constants$3.EVENT_RUN_BEGIN);\n\n\t    _this2.emit(constants$3.EVENT_RUN_BEGIN);\n\n\t    debug$2('run(): emitted %s', constants$3.EVENT_RUN_BEGIN);\n\n\t    _this2.runSuite(rootSuite, end);\n\t  };\n\n\t  var prepare = function prepare() {\n\t    debug$2('run(): starting'); // If there is an `only` filter\n\n\t    if (rootSuite.hasOnly()) {\n\t      rootSuite.filterOnly();\n\t      debug$2('run(): filtered exclusive Runnables');\n\t    }\n\n\t    _this2.state = constants$3.STATE_RUNNING;\n\n\t    if (_this2._delay) {\n\t      _this2.emit(constants$3.EVENT_DELAY_END);\n\n\t      debug$2('run(): \"delay\" ended');\n\t    }\n\n\t    return begin();\n\t  }; // references cleanup to avoid memory leaks\n\n\n\t  if (this._opts.cleanReferencesAfterRun) {\n\t    this.on(constants$3.EVENT_SUITE_END, function (suite) {\n\t      suite.cleanReferences();\n\t    });\n\t  } // callback\n\n\n\t  this.on(constants$3.EVENT_RUN_END, function () {\n\t    this.state = constants$3.STATE_STOPPED;\n\t    debug$2('run(): emitted %s', constants$3.EVENT_RUN_END);\n\t    fn(this.failures);\n\t  });\n\n\t  this._removeEventListener(process$1, 'uncaughtException', this.uncaught);\n\n\t  this._removeEventListener(process$1, 'unhandledRejection', this.unhandled);\n\n\t  this._addEventListener(process$1, 'uncaughtException', this.uncaught);\n\n\t  this._addEventListener(process$1, 'unhandledRejection', this.unhandled);\n\n\t  if (this._delay) {\n\t    // for reporters, I guess.\n\t    // might be nice to debounce some dots while we wait.\n\t    this.emit(constants$3.EVENT_DELAY_BEGIN, rootSuite);\n\t    rootSuite.once(EVENT_ROOT_SUITE_RUN, prepare);\n\t    debug$2('run(): waiting for green light due to --delay');\n\t  } else {\n\t    Runner.immediately(prepare);\n\t  }\n\n\t  return this;\n\t};\n\t/**\n\t * Toggle partial object linking behavior; used for building object references from\n\t * unique ID's. Does nothing in serial mode, because the object references already exist.\n\t * Subclasses can implement this (e.g., `ParallelBufferedRunner`)\n\t * @abstract\n\t * @param {boolean} [value] - If `true`, enable partial object linking, otherwise disable\n\t * @returns {Runner}\n\t * @chainable\n\t * @public\n\t * @example\n\t * // this reporter needs proper object references when run in parallel mode\n\t * class MyReporter() {\n\t *   constructor(runner) {\n\t *     this.runner.linkPartialObjects(true)\n\t *       .on(EVENT_SUITE_BEGIN, suite => {\n\t           // this Suite may be the same object...\n\t *       })\n\t *       .on(EVENT_TEST_BEGIN, test => {\n\t *         // ...as the `test.parent` property\n\t *       });\n\t *   }\n\t * }\n\t */\n\n\n\tRunner.prototype.linkPartialObjects = function (value) {\n\t  return this;\n\t};\n\t/*\n\t * Like {@link Runner#run}, but does not accept a callback and returns a `Promise` instead of a `Runner`.\n\t * This function cannot reject; an `unhandledRejection` event will bubble up to the `process` object instead.\n\t * @public\n\t * @memberof Runner\n\t * @param {Object} [opts] - Options for {@link Runner#run}\n\t * @returns {Promise<number>} Failure count\n\t */\n\n\n\tRunner.prototype.runAsync = /*#__PURE__*/function () {\n\t  var _runAsync = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t    var _this3 = this;\n\n\t    var opts,\n\t        _args = arguments;\n\t    return regeneratorRuntime.wrap(function _callee$(_context) {\n\t      while (1) {\n\t        switch (_context.prev = _context.next) {\n\t          case 0:\n\t            opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n\t            return _context.abrupt(\"return\", new Promise(function (resolve) {\n\t              _this3.run(resolve, opts);\n\t            }));\n\n\t          case 2:\n\t          case \"end\":\n\t            return _context.stop();\n\t        }\n\t      }\n\t    }, _callee);\n\t  }));\n\n\t  function runAsync() {\n\t    return _runAsync.apply(this, arguments);\n\t  }\n\n\t  return runAsync;\n\t}();\n\t/**\n\t * Cleanly abort execution.\n\t *\n\t * @memberof Runner\n\t * @public\n\t * @return {Runner} Runner instance.\n\t */\n\n\n\tRunner.prototype.abort = function () {\n\t  debug$2('abort(): aborting');\n\t  this._abort = true;\n\t  return this;\n\t};\n\t/**\n\t * Returns `true` if Mocha is running in parallel mode.  For reporters.\n\t *\n\t * Subclasses should return an appropriate value.\n\t * @public\n\t * @returns {false}\n\t */\n\n\n\tRunner.prototype.isParallelMode = function isParallelMode() {\n\t  return false;\n\t};\n\t/**\n\t * Configures an alternate reporter for worker processes to use. Subclasses\n\t * using worker processes should implement this.\n\t * @public\n\t * @param {string} path - Absolute path to alternate reporter for worker processes to use\n\t * @returns {Runner}\n\t * @throws When in serial mode\n\t * @chainable\n\t * @abstract\n\t */\n\n\n\tRunner.prototype.workerReporter = function () {\n\t  throw createUnsupportedError$1('workerReporter() not supported in serial mode');\n\t};\n\t/**\n\t * Filter leaks with the given globals flagged as `ok`.\n\t *\n\t * @private\n\t * @param {Array} ok\n\t * @param {Array} globals\n\t * @return {Array}\n\t */\n\n\n\tfunction filterLeaks(ok, globals) {\n\t  return globals.filter(function (key) {\n\t    // Firefox and Chrome exposes iframes as index inside the window object\n\t    if (/^\\d+/.test(key)) {\n\t      return false;\n\t    } // in firefox\n\t    // if runner runs in an iframe, this iframe's window.getInterface method\n\t    // not init at first it is assigned in some seconds\n\n\n\t    if (commonjsGlobal.navigator && /^getInterface/.test(key)) {\n\t      return false;\n\t    } // an iframe could be approached by window[iframeIndex]\n\t    // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n\n\n\t    if (commonjsGlobal.navigator && /^\\d+/.test(key)) {\n\t      return false;\n\t    } // Opera and IE expose global variables for HTML element IDs (issue #243)\n\n\n\t    if (/^mocha-/.test(key)) {\n\t      return false;\n\t    }\n\n\t    var matched = ok.filter(function (ok) {\n\t      if (~ok.indexOf('*')) {\n\t        return key.indexOf(ok.split('*')[0]) === 0;\n\t      }\n\n\t      return key === ok;\n\t    });\n\t    return !matched.length && (!commonjsGlobal.navigator || key !== 'onerror');\n\t  });\n\t}\n\t/**\n\t * Check if argument is an instance of Error object or a duck-typed equivalent.\n\t *\n\t * @private\n\t * @param {Object} err - object to check\n\t * @param {string} err.message - error message\n\t * @returns {boolean}\n\t */\n\n\n\tfunction isError$1(err) {\n\t  return err instanceof Error || err && typeof err.message === 'string';\n\t}\n\t/**\n\t *\n\t * Converts thrown non-extensible type into proper Error.\n\t *\n\t * @private\n\t * @param {*} thrown - Non-extensible type thrown by code\n\t * @return {Error}\n\t */\n\n\n\tfunction thrown2Error(err) {\n\t  return new Error(\"the \".concat(utils.canonicalType(err), \" \").concat(stringify(err), \" was thrown, throw an Error :)\"));\n\t}\n\n\tRunner.constants = constants$3;\n\t/**\n\t * Node.js' `EventEmitter`\n\t * @external EventEmitter\n\t * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter}\n\t */\n\n\tvar runner$1 = Runner;\n\n\tvar base = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Base\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var isBrowser = utils.isBrowser();\n\n\t  function getBrowserWindowSize() {\n\t    if ('innerHeight' in commonjsGlobal) {\n\t      return [commonjsGlobal.innerHeight, commonjsGlobal.innerWidth];\n\t    } // In a Web Worker, the DOM Window is not available.\n\n\n\t    return [640, 480];\n\t  }\n\t  /**\n\t   * Expose `Base`.\n\t   */\n\n\n\t  exports = module.exports = Base;\n\t  /**\n\t   * Check if both stdio streams are associated with a tty.\n\t   */\n\n\t  var isatty = isBrowser || process$1.stdout.isTTY && process$1.stderr.isTTY;\n\t  /**\n\t   * Save log references to avoid tests interfering (see GH-3604).\n\t   */\n\n\t  var consoleLog = console.log;\n\t  /**\n\t   * Enable coloring by default, except in the browser interface.\n\t   */\n\n\t  exports.useColors = !isBrowser && (require$$11.stdout || process$1.env.MOCHA_COLORS !== undefined);\n\t  /**\n\t   * Inline diffs instead of +/-\n\t   */\n\n\t  exports.inlineDiffs = false;\n\t  /**\n\t   * Default color map.\n\t   */\n\n\t  exports.colors = {\n\t    pass: 90,\n\t    fail: 31,\n\t    'bright pass': 92,\n\t    'bright fail': 91,\n\t    'bright yellow': 93,\n\t    pending: 36,\n\t    suite: 0,\n\t    'error title': 0,\n\t    'error message': 31,\n\t    'error stack': 90,\n\t    checkmark: 32,\n\t    fast: 90,\n\t    medium: 33,\n\t    slow: 31,\n\t    green: 32,\n\t    light: 90,\n\t    'diff gutter': 90,\n\t    'diff added': 32,\n\t    'diff removed': 31,\n\t    'diff added inline': '30;42',\n\t    'diff removed inline': '30;41'\n\t  };\n\t  /**\n\t   * Default symbol map.\n\t   */\n\n\t  exports.symbols = {\n\t    ok: '✓',\n\t    err: '✖',\n\t    dot: '․',\n\t    comma: ',',\n\t    bang: '!'\n\t  }; // With node.js on Windows: use symbols available in terminal default fonts\n\n\t  if (process$1.platform === 'win32') {\n\t    exports.symbols.ok = \"\\u221A\";\n\t    exports.symbols.err = \"\\xD7\";\n\t    exports.symbols.dot = '.';\n\t  }\n\t  /**\n\t   * Color `str` with the given `type`,\n\t   * allowing colors to be disabled,\n\t   * as well as user-defined color\n\t   * schemes.\n\t   *\n\t   * @private\n\t   * @param {string} type\n\t   * @param {string} str\n\t   * @return {string}\n\t   */\n\n\n\t  var color = exports.color = function (type, str) {\n\t    if (!exports.useColors) {\n\t      return String(str);\n\t    }\n\n\t    return \"\\x1B[\" + exports.colors[type] + 'm' + str + \"\\x1B[0m\";\n\t  };\n\t  /**\n\t   * Expose term window size, with some defaults for when stderr is not a tty.\n\t   */\n\n\n\t  exports.window = {\n\t    width: 75\n\t  };\n\n\t  if (isatty) {\n\t    if (isBrowser) {\n\t      exports.window.width = getBrowserWindowSize()[1];\n\t    } else {\n\t      exports.window.width = process$1.stdout.getWindowSize(1)[0];\n\t    }\n\t  }\n\t  /**\n\t   * Expose some basic cursor interactions that are common among reporters.\n\t   */\n\n\n\t  exports.cursor = {\n\t    hide: function hide() {\n\t      isatty && process$1.stdout.write(\"\\x1B[?25l\");\n\t    },\n\t    show: function show() {\n\t      isatty && process$1.stdout.write(\"\\x1B[?25h\");\n\t    },\n\t    deleteLine: function deleteLine() {\n\t      isatty && process$1.stdout.write(\"\\x1B[2K\");\n\t    },\n\t    beginningOfLine: function beginningOfLine() {\n\t      isatty && process$1.stdout.write(\"\\x1B[0G\");\n\t    },\n\t    CR: function CR() {\n\t      if (isatty) {\n\t        exports.cursor.deleteLine();\n\t        exports.cursor.beginningOfLine();\n\t      } else {\n\t        process$1.stdout.write('\\r');\n\t      }\n\t    }\n\t  };\n\n\t  var showDiff = exports.showDiff = function (err) {\n\t    return err && err.showDiff !== false && sameType(err.actual, err.expected) && err.expected !== undefined;\n\t  };\n\n\t  function stringifyDiffObjs(err) {\n\t    if (!utils.isString(err.actual) || !utils.isString(err.expected)) {\n\t      err.actual = utils.stringify(err.actual);\n\t      err.expected = utils.stringify(err.expected);\n\t    }\n\t  }\n\t  /**\n\t   * Returns a diff between 2 strings with coloured ANSI output.\n\t   *\n\t   * @description\n\t   * The diff will be either inline or unified dependent on the value\n\t   * of `Base.inlineDiff`.\n\t   *\n\t   * @param {string} actual\n\t   * @param {string} expected\n\t   * @return {string} Diff\n\t   */\n\n\n\t  var generateDiff = exports.generateDiff = function (actual, expected) {\n\t    try {\n\t      return exports.inlineDiffs ? inlineDiff(actual, expected) : unifiedDiff(actual, expected);\n\t    } catch (err) {\n\t      var msg = '\\n      ' + color('diff added', '+ expected') + ' ' + color('diff removed', '- actual:  failed to generate Mocha diff') + '\\n';\n\t      return msg;\n\t    }\n\t  };\n\t  /**\n\t   * Outputs the given `failures` as a list.\n\t   *\n\t   * @public\n\t   * @memberof Mocha.reporters.Base\n\t   * @variation 1\n\t   * @param {Object[]} failures - Each is Test instance with corresponding\n\t   *     Error property\n\t   */\n\n\n\t  exports.list = function (failures) {\n\t    var multipleErr, multipleTest;\n\t    Base.consoleLog();\n\t    failures.forEach(function (test, i) {\n\t      // format\n\t      var fmt = color('error title', '  %s) %s:\\n') + color('error message', '     %s') + color('error stack', '\\n%s\\n'); // msg\n\n\t      var msg;\n\t      var err;\n\n\t      if (test.err && test.err.multiple) {\n\t        if (multipleTest !== test) {\n\t          multipleTest = test;\n\t          multipleErr = [test.err].concat(test.err.multiple);\n\t        }\n\n\t        err = multipleErr.shift();\n\t      } else {\n\t        err = test.err;\n\t      }\n\n\t      var message;\n\n\t      if (err.message && typeof err.message.toString === 'function') {\n\t        message = err.message + '';\n\t      } else if (typeof err.inspect === 'function') {\n\t        message = err.inspect() + '';\n\t      } else {\n\t        message = '';\n\t      }\n\n\t      var stack = err.stack || message;\n\t      var index = message ? stack.indexOf(message) : -1;\n\n\t      if (index === -1) {\n\t        msg = message;\n\t      } else {\n\t        index += message.length;\n\t        msg = stack.slice(0, index); // remove msg from stack\n\n\t        stack = stack.slice(index + 1);\n\t      } // uncaught\n\n\n\t      if (err.uncaught) {\n\t        msg = 'Uncaught ' + msg;\n\t      } // explicitly show diff\n\n\n\t      if (!exports.hideDiff && showDiff(err)) {\n\t        stringifyDiffObjs(err);\n\t        fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n\t        var match = message.match(/^([^:]+): expected/);\n\t        msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\t        msg += generateDiff(err.actual, err.expected);\n\t      } // indent stack trace\n\n\n\t      stack = stack.replace(/^/gm, '  '); // indented test title\n\n\t      var testTitle = '';\n\t      test.titlePath().forEach(function (str, index) {\n\t        if (index !== 0) {\n\t          testTitle += '\\n     ';\n\t        }\n\n\t        for (var i = 0; i < index; i++) {\n\t          testTitle += '  ';\n\t        }\n\n\t        testTitle += str;\n\t      });\n\t      Base.consoleLog(fmt, i + 1, testTitle, msg, stack);\n\t    });\n\t  };\n\t  /**\n\t   * Constructs a new `Base` reporter instance.\n\t   *\n\t   * @description\n\t   * All other reporters generally inherit from this reporter.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\n\t  function Base(runner, options) {\n\t    var failures = this.failures = [];\n\n\t    if (!runner) {\n\t      throw new TypeError('Missing runner argument');\n\t    }\n\n\t    this.options = options || {};\n\t    this.runner = runner;\n\t    this.stats = runner.stats; // assigned so Reporters keep a closer reference\n\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      if (test.duration > test.slow()) {\n\t        test.speed = 'slow';\n\t      } else if (test.duration > test.slow() / 2) {\n\t        test.speed = 'medium';\n\t      } else {\n\t        test.speed = 'fast';\n\t      }\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test, err) {\n\t      if (showDiff(err)) {\n\t        stringifyDiffObjs(err);\n\t      } // more than one error per test\n\n\n\t      if (test.err && err instanceof Error) {\n\t        test.err.multiple = (test.err.multiple || []).concat(err);\n\t      } else {\n\t        test.err = err;\n\t      }\n\n\t      failures.push(test);\n\t    });\n\t  }\n\t  /**\n\t   * Outputs common epilogue used by many of the bundled reporters.\n\t   *\n\t   * @public\n\t   * @memberof Mocha.reporters\n\t   */\n\n\n\t  Base.prototype.epilogue = function () {\n\t    var stats = this.stats;\n\t    var fmt;\n\t    Base.consoleLog(); // passes\n\n\t    fmt = color('bright pass', ' ') + color('green', ' %d passing') + color('light', ' (%s)');\n\t    Base.consoleLog(fmt, stats.passes || 0, ms(stats.duration)); // pending\n\n\t    if (stats.pending) {\n\t      fmt = color('pending', ' ') + color('pending', ' %d pending');\n\t      Base.consoleLog(fmt, stats.pending);\n\t    } // failures\n\n\n\t    if (stats.failures) {\n\t      fmt = color('fail', '  %d failing');\n\t      Base.consoleLog(fmt, stats.failures);\n\t      Base.list(this.failures);\n\t      Base.consoleLog();\n\t    }\n\n\t    Base.consoleLog();\n\t  };\n\t  /**\n\t   * Pads the given `str` to `len`.\n\t   *\n\t   * @private\n\t   * @param {string} str\n\t   * @param {string} len\n\t   * @return {string}\n\t   */\n\n\n\t  function pad(str, len) {\n\t    str = String(str);\n\t    return Array(len - str.length + 1).join(' ') + str;\n\t  }\n\t  /**\n\t   * Returns inline diff between 2 strings with coloured ANSI output.\n\t   *\n\t   * @private\n\t   * @param {String} actual\n\t   * @param {String} expected\n\t   * @return {string} Diff\n\t   */\n\n\n\t  function inlineDiff(actual, expected) {\n\t    var msg = errorDiff(actual, expected); // linenos\n\n\t    var lines = msg.split('\\n');\n\n\t    if (lines.length > 4) {\n\t      var width = String(lines.length).length;\n\t      msg = lines.map(function (str, i) {\n\t        return pad(++i, width) + ' |' + ' ' + str;\n\t      }).join('\\n');\n\t    } // legend\n\n\n\t    msg = '\\n' + color('diff removed inline', 'actual') + ' ' + color('diff added inline', 'expected') + '\\n\\n' + msg + '\\n'; // indent\n\n\t    msg = msg.replace(/^/gm, '      ');\n\t    return msg;\n\t  }\n\t  /**\n\t   * Returns unified diff between two strings with coloured ANSI output.\n\t   *\n\t   * @private\n\t   * @param {String} actual\n\t   * @param {String} expected\n\t   * @return {string} The diff.\n\t   */\n\n\n\t  function unifiedDiff(actual, expected) {\n\t    var indent = '      ';\n\n\t    function cleanUp(line) {\n\t      if (line[0] === '+') {\n\t        return indent + colorLines('diff added', line);\n\t      }\n\n\t      if (line[0] === '-') {\n\t        return indent + colorLines('diff removed', line);\n\t      }\n\n\t      if (line.match(/@@/)) {\n\t        return '--';\n\t      }\n\n\t      if (line.match(/\\\\ No newline/)) {\n\t        return null;\n\t      }\n\n\t      return indent + line;\n\t    }\n\n\t    function notBlank(line) {\n\t      return typeof line !== 'undefined' && line !== null;\n\t    }\n\n\t    var msg = diff.createPatch('string', actual, expected);\n\t    var lines = msg.split('\\n').splice(5);\n\t    return '\\n      ' + colorLines('diff added', '+ expected') + ' ' + colorLines('diff removed', '- actual') + '\\n\\n' + lines.map(cleanUp).filter(notBlank).join('\\n');\n\t  }\n\t  /**\n\t   * Returns character diff for `err`.\n\t   *\n\t   * @private\n\t   * @param {String} actual\n\t   * @param {String} expected\n\t   * @return {string} the diff\n\t   */\n\n\n\t  function errorDiff(actual, expected) {\n\t    return diff.diffWordsWithSpace(actual, expected).map(function (str) {\n\t      if (str.added) {\n\t        return colorLines('diff added inline', str.value);\n\t      }\n\n\t      if (str.removed) {\n\t        return colorLines('diff removed inline', str.value);\n\t      }\n\n\t      return str.value;\n\t    }).join('');\n\t  }\n\t  /**\n\t   * Colors lines for `str`, using the color `name`.\n\t   *\n\t   * @private\n\t   * @param {string} name\n\t   * @param {string} str\n\t   * @return {string}\n\t   */\n\n\n\t  function colorLines(name, str) {\n\t    return str.split('\\n').map(function (str) {\n\t      return color(name, str);\n\t    }).join('\\n');\n\t  }\n\t  /**\n\t   * Object#toString reference.\n\t   */\n\n\n\t  var objToString = Object.prototype.toString;\n\t  /**\n\t   * Checks that a / b have the same type.\n\t   *\n\t   * @private\n\t   * @param {Object} a\n\t   * @param {Object} b\n\t   * @return {boolean}\n\t   */\n\n\t  function sameType(a, b) {\n\t    return objToString.call(a) === objToString.call(b);\n\t  }\n\n\t  Base.consoleLog = consoleLog;\n\t  Base[\"abstract\"] = true;\n\t});\n\n\tvar dot = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Dot\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var inherits = utils.inherits;\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  /**\n\t   * Expose `Dot`.\n\t   */\n\n\t  module.exports = Dot;\n\t  /**\n\t   * Constructs a new `Dot` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Dot(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var width = base.window.width * 0.75 | 0;\n\t    var n = -1;\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      process$1.stdout.write('\\n');\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function () {\n\t      if (++n % width === 0) {\n\t        process$1.stdout.write('\\n  ');\n\t      }\n\n\t      process$1.stdout.write(base.color('pending', base.symbols.comma));\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      if (++n % width === 0) {\n\t        process$1.stdout.write('\\n  ');\n\t      }\n\n\t      if (test.speed === 'slow') {\n\t        process$1.stdout.write(base.color('bright yellow', base.symbols.dot));\n\t      } else {\n\t        process$1.stdout.write(base.color(test.speed, base.symbols.dot));\n\t      }\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function () {\n\t      if (++n % width === 0) {\n\t        process$1.stdout.write('\\n  ');\n\t      }\n\n\t      process$1.stdout.write(base.color('fail', base.symbols.bang));\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      process$1.stdout.write('\\n');\n\t      self.epilogue();\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(Dot, base);\n\t  Dot.description = 'dot matrix representation';\n\t});\n\n\tvar doc = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Doc\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n\t  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\t  /**\n\t   * Expose `Doc`.\n\t   */\n\n\t  module.exports = Doc;\n\t  /**\n\t   * Constructs a new `Doc` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Doc(runner, options) {\n\t    base.call(this, runner, options);\n\t    var indents = 2;\n\n\t    function indent() {\n\t      return Array(indents).join('  ');\n\t    }\n\n\t    runner.on(EVENT_SUITE_BEGIN, function (suite) {\n\t      if (suite.root) {\n\t        return;\n\t      }\n\n\t      ++indents;\n\t      base.consoleLog('%s<section class=\"suite\">', indent());\n\t      ++indents;\n\t      base.consoleLog('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n\t      base.consoleLog('%s<dl>', indent());\n\t    });\n\t    runner.on(EVENT_SUITE_END, function (suite) {\n\t      if (suite.root) {\n\t        return;\n\t      }\n\n\t      base.consoleLog('%s</dl>', indent());\n\t      --indents;\n\t      base.consoleLog('%s</section>', indent());\n\t      --indents;\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n\t      base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.file));\n\t      var code = utils.escape(utils.clean(test.body));\n\t      base.consoleLog('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test, err) {\n\t      base.consoleLog('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.title));\n\t      base.consoleLog('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.file));\n\t      var code = utils.escape(utils.clean(test.body));\n\t      base.consoleLog('%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>', indent(), code);\n\t      base.consoleLog('%s  <dd class=\"error\">%s</dd>', indent(), utils.escape(err));\n\t    });\n\t  }\n\n\t  Doc.description = 'HTML documentation';\n\t});\n\n\tvar tap = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module TAP\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var EVENT_TEST_END = constants.EVENT_TEST_END;\n\t  var inherits = utils.inherits;\n\t  var sprintf = util.format;\n\t  /**\n\t   * Expose `TAP`.\n\t   */\n\n\t  module.exports = TAP;\n\t  /**\n\t   * Constructs a new `TAP` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function TAP(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var n = 1;\n\t    var tapVersion = '12';\n\n\t    if (options && options.reporterOptions) {\n\t      if (options.reporterOptions.tapVersion) {\n\t        tapVersion = options.reporterOptions.tapVersion.toString();\n\t      }\n\t    }\n\n\t    this._producer = createProducer(tapVersion);\n\t    runner.once(EVENT_RUN_BEGIN, function () {\n\t      self._producer.writeVersion();\n\t    });\n\t    runner.on(EVENT_TEST_END, function () {\n\t      ++n;\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      self._producer.writePending(n, test);\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      self._producer.writePass(n, test);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test, err) {\n\t      self._producer.writeFail(n, test, err);\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      self._producer.writeEpilogue(runner.stats);\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(TAP, base);\n\t  /**\n\t   * Returns a TAP-safe title of `test`.\n\t   *\n\t   * @private\n\t   * @param {Test} test - Test instance.\n\t   * @return {String} title with any hash character removed\n\t   */\n\n\t  function title(test) {\n\t    return test.fullTitle().replace(/#/g, '');\n\t  }\n\t  /**\n\t   * Writes newline-terminated formatted string to reporter output stream.\n\t   *\n\t   * @private\n\t   * @param {string} format - `printf`-like format string\n\t   * @param {...*} [varArgs] - Format string arguments\n\t   */\n\n\n\t  function println(format, varArgs) {\n\t    var vargs = Array.from(arguments);\n\t    vargs[0] += '\\n';\n\t    process$1.stdout.write(sprintf.apply(null, vargs));\n\t  }\n\t  /**\n\t   * Returns a `tapVersion`-appropriate TAP producer instance, if possible.\n\t   *\n\t   * @private\n\t   * @param {string} tapVersion - Version of TAP specification to produce.\n\t   * @returns {TAPProducer} specification-appropriate instance\n\t   * @throws {Error} if specification version has no associated producer.\n\t   */\n\n\n\t  function createProducer(tapVersion) {\n\t    var producers = {\n\t      '12': new TAP12Producer(),\n\t      '13': new TAP13Producer()\n\t    };\n\t    var producer = producers[tapVersion];\n\n\t    if (!producer) {\n\t      throw new Error('invalid or unsupported TAP version: ' + JSON.stringify(tapVersion));\n\t    }\n\n\t    return producer;\n\t  }\n\t  /**\n\t   * @summary\n\t   * Constructs a new TAPProducer.\n\t   *\n\t   * @description\n\t   * <em>Only</em> to be used as an abstract base class.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   */\n\n\n\t  function TAPProducer() {}\n\t  /**\n\t   * Writes the TAP version to reporter output stream.\n\t   *\n\t   * @abstract\n\t   */\n\n\n\t  TAPProducer.prototype.writeVersion = function () {};\n\t  /**\n\t   * Writes the plan to reporter output stream.\n\t   *\n\t   * @abstract\n\t   * @param {number} ntests - Number of tests that are planned to run.\n\t   */\n\n\n\t  TAPProducer.prototype.writePlan = function (ntests) {\n\t    println('%d..%d', 1, ntests);\n\t  };\n\t  /**\n\t   * Writes that test passed to reporter output stream.\n\t   *\n\t   * @abstract\n\t   * @param {number} n - Index of test that passed.\n\t   * @param {Test} test - Instance containing test information.\n\t   */\n\n\n\t  TAPProducer.prototype.writePass = function (n, test) {\n\t    println('ok %d %s', n, title(test));\n\t  };\n\t  /**\n\t   * Writes that test was skipped to reporter output stream.\n\t   *\n\t   * @abstract\n\t   * @param {number} n - Index of test that was skipped.\n\t   * @param {Test} test - Instance containing test information.\n\t   */\n\n\n\t  TAPProducer.prototype.writePending = function (n, test) {\n\t    println('ok %d %s # SKIP -', n, title(test));\n\t  };\n\t  /**\n\t   * Writes that test failed to reporter output stream.\n\t   *\n\t   * @abstract\n\t   * @param {number} n - Index of test that failed.\n\t   * @param {Test} test - Instance containing test information.\n\t   * @param {Error} err - Reason the test failed.\n\t   */\n\n\n\t  TAPProducer.prototype.writeFail = function (n, test, err) {\n\t    println('not ok %d %s', n, title(test));\n\t  };\n\t  /**\n\t   * Writes the summary epilogue to reporter output stream.\n\t   *\n\t   * @abstract\n\t   * @param {Object} stats - Object containing run statistics.\n\t   */\n\n\n\t  TAPProducer.prototype.writeEpilogue = function (stats) {\n\t    // :TBD: Why is this not counting pending tests?\n\t    println('# tests ' + (stats.passes + stats.failures));\n\t    println('# pass ' + stats.passes); // :TBD: Why are we not showing pending results?\n\n\t    println('# fail ' + stats.failures);\n\t    this.writePlan(stats.passes + stats.failures + stats.pending);\n\t  };\n\t  /**\n\t   * @summary\n\t   * Constructs a new TAP12Producer.\n\t   *\n\t   * @description\n\t   * Produces output conforming to the TAP12 specification.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   * @extends TAPProducer\n\t   * @see {@link https://testanything.org/tap-specification.html|Specification}\n\t   */\n\n\n\t  function TAP12Producer() {\n\t    /**\n\t     * Writes that test failed to reporter output stream, with error formatting.\n\t     * @override\n\t     */\n\t    this.writeFail = function (n, test, err) {\n\t      TAPProducer.prototype.writeFail.call(this, n, test, err);\n\n\t      if (err.message) {\n\t        println(err.message.replace(/^/gm, '  '));\n\t      }\n\n\t      if (err.stack) {\n\t        println(err.stack.replace(/^/gm, '  '));\n\t      }\n\t    };\n\t  }\n\t  /**\n\t   * Inherit from `TAPProducer.prototype`.\n\t   */\n\n\n\t  inherits(TAP12Producer, TAPProducer);\n\t  /**\n\t   * @summary\n\t   * Constructs a new TAP13Producer.\n\t   *\n\t   * @description\n\t   * Produces output conforming to the TAP13 specification.\n\t   *\n\t   * @private\n\t   * @constructor\n\t   * @extends TAPProducer\n\t   * @see {@link https://testanything.org/tap-version-13-specification.html|Specification}\n\t   */\n\n\t  function TAP13Producer() {\n\t    /**\n\t     * Writes the TAP version to reporter output stream.\n\t     * @override\n\t     */\n\t    this.writeVersion = function () {\n\t      println('TAP version 13');\n\t    };\n\t    /**\n\t     * Writes that test failed to reporter output stream, with error formatting.\n\t     * @override\n\t     */\n\n\n\t    this.writeFail = function (n, test, err) {\n\t      TAPProducer.prototype.writeFail.call(this, n, test, err);\n\t      var emitYamlBlock = err.message != null || err.stack != null;\n\n\t      if (emitYamlBlock) {\n\t        println(indent(1) + '---');\n\n\t        if (err.message) {\n\t          println(indent(2) + 'message: |-');\n\t          println(err.message.replace(/^/gm, indent(3)));\n\t        }\n\n\t        if (err.stack) {\n\t          println(indent(2) + 'stack: |-');\n\t          println(err.stack.replace(/^/gm, indent(3)));\n\t        }\n\n\t        println(indent(1) + '...');\n\t      }\n\t    };\n\n\t    function indent(level) {\n\t      return Array(level + 1).join('  ');\n\t    }\n\t  }\n\t  /**\n\t   * Inherit from `TAPProducer.prototype`.\n\t   */\n\n\n\t  inherits(TAP13Producer, TAPProducer);\n\t  TAP.description = 'TAP-compatible output';\n\t});\n\n\tvar json = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module JSON\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_TEST_END = constants.EVENT_TEST_END;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  /**\n\t   * Expose `JSON`.\n\t   */\n\n\t  module.exports = JSONReporter;\n\t  /**\n\t   * Constructs a new `JSON` reporter instance.\n\t   *\n\t   * @public\n\t   * @class JSON\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function JSONReporter(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var tests = [];\n\t    var pending = [];\n\t    var failures = [];\n\t    var passes = [];\n\t    runner.on(EVENT_TEST_END, function (test) {\n\t      tests.push(test);\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      passes.push(test);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test) {\n\t      failures.push(test);\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      pending.push(test);\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      var obj = {\n\t        stats: self.stats,\n\t        tests: tests.map(clean),\n\t        pending: pending.map(clean),\n\t        failures: failures.map(clean),\n\t        passes: passes.map(clean)\n\t      };\n\t      runner.testResults = obj;\n\t      process$1.stdout.write(JSON.stringify(obj, null, 2));\n\t    });\n\t  }\n\t  /**\n\t   * Return a plain-object representation of `test`\n\t   * free of cyclic properties etc.\n\t   *\n\t   * @private\n\t   * @param {Object} test\n\t   * @return {Object}\n\t   */\n\n\n\t  function clean(test) {\n\t    var err = test.err || {};\n\n\t    if (err instanceof Error) {\n\t      err = errorJSON(err);\n\t    }\n\n\t    return {\n\t      title: test.title,\n\t      fullTitle: test.fullTitle(),\n\t      file: test.file,\n\t      duration: test.duration,\n\t      currentRetry: test.currentRetry(),\n\t      speed: test.speed,\n\t      err: cleanCycles(err)\n\t    };\n\t  }\n\t  /**\n\t   * Replaces any circular references inside `obj` with '[object Object]'\n\t   *\n\t   * @private\n\t   * @param {Object} obj\n\t   * @return {Object}\n\t   */\n\n\n\t  function cleanCycles(obj) {\n\t    var cache = [];\n\t    return JSON.parse(JSON.stringify(obj, function (key, value) {\n\t      if (_typeof(value) === 'object' && value !== null) {\n\t        if (cache.indexOf(value) !== -1) {\n\t          // Instead of going in a circle, we'll print [object Object]\n\t          return '' + value;\n\t        }\n\n\t        cache.push(value);\n\t      }\n\n\t      return value;\n\t    }));\n\t  }\n\t  /**\n\t   * Transform an Error object into a JSON object.\n\t   *\n\t   * @private\n\t   * @param {Error} err\n\t   * @return {Object}\n\t   */\n\n\n\t  function errorJSON(err) {\n\t    var res = {};\n\t    Object.getOwnPropertyNames(err).forEach(function (key) {\n\t      res[key] = err[key];\n\t    }, err);\n\t    return res;\n\t  }\n\n\t  JSONReporter.description = 'single JSON object';\n\t});\n\n\t// `thisNumberValue` abstract operation\n\t// https://tc39.es/ecma262/#sec-thisnumbervalue\n\tvar thisNumberValue = function (value) {\n\t  if (typeof value != 'number' && classofRaw(value) != 'Number') {\n\t    throw TypeError('Incorrect invocation');\n\t  }\n\t  return +value;\n\t};\n\n\t// `String.prototype.repeat` method implementation\n\t// https://tc39.es/ecma262/#sec-string.prototype.repeat\n\tvar stringRepeat = ''.repeat || function repeat(count) {\n\t  var str = String(requireObjectCoercible(this));\n\t  var result = '';\n\t  var n = toInteger(count);\n\t  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n\t  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n\t  return result;\n\t};\n\n\tvar nativeToFixed = 1.0.toFixed;\n\tvar floor$4 = Math.floor;\n\n\tvar pow$1 = function (x, n, acc) {\n\t  return n === 0 ? acc : n % 2 === 1 ? pow$1(x, n - 1, acc * x) : pow$1(x * x, n / 2, acc);\n\t};\n\n\tvar log$2 = function (x) {\n\t  var n = 0;\n\t  var x2 = x;\n\t  while (x2 >= 4096) {\n\t    n += 12;\n\t    x2 /= 4096;\n\t  }\n\t  while (x2 >= 2) {\n\t    n += 1;\n\t    x2 /= 2;\n\t  } return n;\n\t};\n\n\tvar FORCED$8 = nativeToFixed && (\n\t  0.00008.toFixed(3) !== '0.000' ||\n\t  0.9.toFixed(0) !== '1' ||\n\t  1.255.toFixed(2) !== '1.25' ||\n\t  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n\t) || !fails(function () {\n\t  // V8 ~ Android 4.3-\n\t  nativeToFixed.call({});\n\t});\n\n\t// `Number.prototype.toFixed` method\n\t// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n\t_export({ target: 'Number', proto: true, forced: FORCED$8 }, {\n\t  // eslint-disable-next-line max-statements\n\t  toFixed: function toFixed(fractionDigits) {\n\t    var number = thisNumberValue(this);\n\t    var fractDigits = toInteger(fractionDigits);\n\t    var data = [0, 0, 0, 0, 0, 0];\n\t    var sign = '';\n\t    var result = '0';\n\t    var e, z, j, k;\n\n\t    var multiply = function (n, c) {\n\t      var index = -1;\n\t      var c2 = c;\n\t      while (++index < 6) {\n\t        c2 += n * data[index];\n\t        data[index] = c2 % 1e7;\n\t        c2 = floor$4(c2 / 1e7);\n\t      }\n\t    };\n\n\t    var divide = function (n) {\n\t      var index = 6;\n\t      var c = 0;\n\t      while (--index >= 0) {\n\t        c += data[index];\n\t        data[index] = floor$4(c / n);\n\t        c = (c % n) * 1e7;\n\t      }\n\t    };\n\n\t    var dataToString = function () {\n\t      var index = 6;\n\t      var s = '';\n\t      while (--index >= 0) {\n\t        if (s !== '' || index === 0 || data[index] !== 0) {\n\t          var t = String(data[index]);\n\t          s = s === '' ? t : s + stringRepeat.call('0', 7 - t.length) + t;\n\t        }\n\t      } return s;\n\t    };\n\n\t    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n\t    // eslint-disable-next-line no-self-compare\n\t    if (number != number) return 'NaN';\n\t    if (number <= -1e21 || number >= 1e21) return String(number);\n\t    if (number < 0) {\n\t      sign = '-';\n\t      number = -number;\n\t    }\n\t    if (number > 1e-21) {\n\t      e = log$2(number * pow$1(2, 69, 1)) - 69;\n\t      z = e < 0 ? number * pow$1(2, -e, 1) : number / pow$1(2, e, 1);\n\t      z *= 0x10000000000000;\n\t      e = 52 - e;\n\t      if (e > 0) {\n\t        multiply(0, z);\n\t        j = fractDigits;\n\t        while (j >= 7) {\n\t          multiply(1e7, 0);\n\t          j -= 7;\n\t        }\n\t        multiply(pow$1(10, j, 1), 0);\n\t        j = e - 1;\n\t        while (j >= 23) {\n\t          divide(1 << 23);\n\t          j -= 23;\n\t        }\n\t        divide(1 << j);\n\t        multiply(1, 1);\n\t        divide(2);\n\t        result = dataToString();\n\t      } else {\n\t        multiply(0, z);\n\t        multiply(1 << -e, 0);\n\t        result = dataToString() + stringRepeat.call('0', fractDigits);\n\t      }\n\t    }\n\t    if (fractDigits > 0) {\n\t      k = result.length;\n\t      result = sign + (k <= fractDigits\n\t        ? '0.' + stringRepeat.call('0', fractDigits - k) + result\n\t        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n\t    } else {\n\t      result = sign + result;\n\t    } return result;\n\t  }\n\t});\n\n\t/**\n\t @module browser/Progress\n\t*/\n\n\t/**\n\t * Expose `Progress`.\n\t */\n\n\tvar progress = Progress;\n\t/**\n\t * Initialize a new `Progress` indicator.\n\t */\n\n\tfunction Progress() {\n\t  this.percent = 0;\n\t  this.size(0);\n\t  this.fontSize(11);\n\t  this.font('helvetica, arial, sans-serif');\n\t}\n\t/**\n\t * Set progress size to `size`.\n\t *\n\t * @public\n\t * @param {number} size\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.size = function (size) {\n\t  this._size = size;\n\t  return this;\n\t};\n\t/**\n\t * Set text to `text`.\n\t *\n\t * @public\n\t * @param {string} text\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.text = function (text) {\n\t  this._text = text;\n\t  return this;\n\t};\n\t/**\n\t * Set font size to `size`.\n\t *\n\t * @public\n\t * @param {number} size\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.fontSize = function (size) {\n\t  this._fontSize = size;\n\t  return this;\n\t};\n\t/**\n\t * Set font to `family`.\n\t *\n\t * @param {string} family\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.font = function (family) {\n\t  this._font = family;\n\t  return this;\n\t};\n\t/**\n\t * Update percentage to `n`.\n\t *\n\t * @param {number} n\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.update = function (n) {\n\t  this.percent = n;\n\t  return this;\n\t};\n\t/**\n\t * Draw on `ctx`.\n\t *\n\t * @param {CanvasRenderingContext2d} ctx\n\t * @return {Progress} Progress instance.\n\t */\n\n\n\tProgress.prototype.draw = function (ctx) {\n\t  try {\n\t    var percent = Math.min(this.percent, 100);\n\t    var size = this._size;\n\t    var half = size / 2;\n\t    var x = half;\n\t    var y = half;\n\t    var rad = half - 1;\n\t    var fontSize = this._fontSize;\n\t    ctx.font = fontSize + 'px ' + this._font;\n\t    var angle = Math.PI * 2 * (percent / 100);\n\t    ctx.clearRect(0, 0, size, size); // outer circle\n\n\t    ctx.strokeStyle = '#9f9f9f';\n\t    ctx.beginPath();\n\t    ctx.arc(x, y, rad, 0, angle, false);\n\t    ctx.stroke(); // inner circle\n\n\t    ctx.strokeStyle = '#eee';\n\t    ctx.beginPath();\n\t    ctx.arc(x, y, rad - 1, 0, angle, true);\n\t    ctx.stroke(); // text\n\n\t    var text = this._text || (percent | 0) + '%';\n\t    var w = ctx.measureText(text).width;\n\t    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n\t  } catch (ignore) {// don't fail if we can't render progress\n\t  }\n\n\t  return this;\n\t};\n\n\tvar html$1 = createCommonjsModule(function (module, exports) {\n\t  /* eslint-env browser */\n\n\t  /**\n\t   * @module HTML\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n\t  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var escape = utils.escape;\n\t  /**\n\t   * Save timer references to avoid Sinon interfering (see GH-237).\n\t   */\n\n\t  var Date = commonjsGlobal.Date;\n\t  /**\n\t   * Expose `HTML`.\n\t   */\n\n\t  module.exports = HTML;\n\t  /**\n\t   * Stats template.\n\t   */\n\n\t  var statsTemplate = '<ul id=\"mocha-stats\">' + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>' + '<li class=\"passes\"><a href=\"javascript:void(0);\">passes:</a> <em>0</em></li>' + '<li class=\"failures\"><a href=\"javascript:void(0);\">failures:</a> <em>0</em></li>' + '<li class=\"duration\">duration: <em>0</em>s</li>' + '</ul>';\n\t  var playIcon = '&#x2023;';\n\t  /**\n\t   * Constructs a new `HTML` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function HTML(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var stats = this.stats;\n\t    var stat = fragment(statsTemplate);\n\t    var items = stat.getElementsByTagName('li');\n\t    var passes = items[1].getElementsByTagName('em')[0];\n\t    var passesLink = items[1].getElementsByTagName('a')[0];\n\t    var failures = items[2].getElementsByTagName('em')[0];\n\t    var failuresLink = items[2].getElementsByTagName('a')[0];\n\t    var duration = items[3].getElementsByTagName('em')[0];\n\t    var canvas = stat.getElementsByTagName('canvas')[0];\n\t    var report = fragment('<ul id=\"mocha-report\"></ul>');\n\t    var stack = [report];\n\t    var progress$1;\n\t    var ctx;\n\t    var root = document.getElementById('mocha');\n\n\t    if (canvas.getContext) {\n\t      var ratio = window.devicePixelRatio || 1;\n\t      canvas.style.width = canvas.width;\n\t      canvas.style.height = canvas.height;\n\t      canvas.width *= ratio;\n\t      canvas.height *= ratio;\n\t      ctx = canvas.getContext('2d');\n\t      ctx.scale(ratio, ratio);\n\t      progress$1 = new progress();\n\t    }\n\n\t    if (!root) {\n\t      return error('#mocha div missing, add it to your document');\n\t    } // pass toggle\n\n\n\t    on(passesLink, 'click', function (evt) {\n\t      evt.preventDefault();\n\t      unhide();\n\t      var name = /pass/.test(report.className) ? '' : ' pass';\n\t      report.className = report.className.replace(/fail|pass/g, '') + name;\n\n\t      if (report.className.trim()) {\n\t        hideSuitesWithout('test pass');\n\t      }\n\t    }); // failure toggle\n\n\t    on(failuresLink, 'click', function (evt) {\n\t      evt.preventDefault();\n\t      unhide();\n\t      var name = /fail/.test(report.className) ? '' : ' fail';\n\t      report.className = report.className.replace(/fail|pass/g, '') + name;\n\n\t      if (report.className.trim()) {\n\t        hideSuitesWithout('test fail');\n\t      }\n\t    });\n\t    root.appendChild(stat);\n\t    root.appendChild(report);\n\n\t    if (progress$1) {\n\t      progress$1.size(40);\n\t    }\n\n\t    runner.on(EVENT_SUITE_BEGIN, function (suite) {\n\t      if (suite.root) {\n\t        return;\n\t      } // suite\n\n\n\t      var url = self.suiteURL(suite);\n\t      var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title)); // container\n\n\t      stack[0].appendChild(el);\n\t      stack.unshift(document.createElement('ul'));\n\t      el.appendChild(stack[0]);\n\t    });\n\t    runner.on(EVENT_SUITE_END, function (suite) {\n\t      if (suite.root) {\n\t        updateStats();\n\t        return;\n\t      }\n\n\t      stack.shift();\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      var url = self.testURL(test);\n\t      var markup = '<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> ' + '<a href=\"%s\" class=\"replay\">' + playIcon + '</a></h2></li>';\n\t      var el = fragment(markup, test.speed, test.title, test.duration, url);\n\t      self.addCodeToggle(el, test.body);\n\t      appendToStack(el);\n\t      updateStats();\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test) {\n\t      var el = fragment('<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">' + playIcon + '</a></h2></li>', test.title, self.testURL(test));\n\t      var stackString; // Note: Includes leading newline\n\n\t      var message = test.err.toString(); // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n\t      // check for the result of the stringifying.\n\n\t      if (message === '[object Error]') {\n\t        message = test.err.message;\n\t      }\n\n\t      if (test.err.stack) {\n\t        var indexOfMessage = test.err.stack.indexOf(test.err.message);\n\n\t        if (indexOfMessage === -1) {\n\t          stackString = test.err.stack;\n\t        } else {\n\t          stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);\n\t        }\n\t      } else if (test.err.sourceURL && test.err.line !== undefined) {\n\t        // Safari doesn't give you a stack. Let's at least provide a source line.\n\t        stackString = '\\n(' + test.err.sourceURL + ':' + test.err.line + ')';\n\t      }\n\n\t      stackString = stackString || '';\n\n\t      if (test.err.htmlMessage && stackString) {\n\t        el.appendChild(fragment('<div class=\"html-error\">%s\\n<pre class=\"error\">%e</pre></div>', test.err.htmlMessage, stackString));\n\t      } else if (test.err.htmlMessage) {\n\t        el.appendChild(fragment('<div class=\"html-error\">%s</div>', test.err.htmlMessage));\n\t      } else {\n\t        el.appendChild(fragment('<pre class=\"error\">%e%e</pre>', message, stackString));\n\t      }\n\n\t      self.addCodeToggle(el, test.body);\n\t      appendToStack(el);\n\t      updateStats();\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      var el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n\t      appendToStack(el);\n\t      updateStats();\n\t    });\n\n\t    function appendToStack(el) {\n\t      // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n\t      if (stack[0]) {\n\t        stack[0].appendChild(el);\n\t      }\n\t    }\n\n\t    function updateStats() {\n\t      // TODO: add to stats\n\t      var percent = stats.tests / runner.total * 100 | 0;\n\n\t      if (progress$1) {\n\t        progress$1.update(percent).draw(ctx);\n\t      } // update stats\n\n\n\t      var ms = new Date() - stats.start;\n\t      text(passes, stats.passes);\n\t      text(failures, stats.failures);\n\t      text(duration, (ms / 1000).toFixed(2));\n\t    }\n\t  }\n\t  /**\n\t   * Makes a URL, preserving querystring (\"search\") parameters.\n\t   *\n\t   * @param {string} s\n\t   * @return {string} A new URL.\n\t   */\n\n\n\t  function makeUrl(s) {\n\t    var search = window.location.search; // Remove previous grep query parameter if present\n\n\t    if (search) {\n\t      search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');\n\t    }\n\n\t    return window.location.pathname + (search ? search + '&' : '?') + 'grep=' + encodeURIComponent(escapeStringRegexp(s));\n\t  }\n\t  /**\n\t   * Provide suite URL.\n\t   *\n\t   * @param {Object} [suite]\n\t   */\n\n\n\t  HTML.prototype.suiteURL = function (suite) {\n\t    return makeUrl(suite.fullTitle());\n\t  };\n\t  /**\n\t   * Provide test URL.\n\t   *\n\t   * @param {Object} [test]\n\t   */\n\n\n\t  HTML.prototype.testURL = function (test) {\n\t    return makeUrl(test.fullTitle());\n\t  };\n\t  /**\n\t   * Adds code toggle functionality for the provided test's list element.\n\t   *\n\t   * @param {HTMLLIElement} el\n\t   * @param {string} contents\n\t   */\n\n\n\t  HTML.prototype.addCodeToggle = function (el, contents) {\n\t    var h2 = el.getElementsByTagName('h2')[0];\n\t    on(h2, 'click', function () {\n\t      pre.style.display = pre.style.display === 'none' ? 'block' : 'none';\n\t    });\n\t    var pre = fragment('<pre><code>%e</code></pre>', utils.clean(contents));\n\t    el.appendChild(pre);\n\t    pre.style.display = 'none';\n\t  };\n\t  /**\n\t   * Display error `msg`.\n\t   *\n\t   * @param {string} msg\n\t   */\n\n\n\t  function error(msg) {\n\t    document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n\t  }\n\t  /**\n\t   * Return a DOM fragment from `html`.\n\t   *\n\t   * @param {string} html\n\t   */\n\n\n\t  function fragment(html) {\n\t    var args = arguments;\n\t    var div = document.createElement('div');\n\t    var i = 1;\n\t    div.innerHTML = html.replace(/%([se])/g, function (_, type) {\n\t      switch (type) {\n\t        case 's':\n\t          return String(args[i++]);\n\n\t        case 'e':\n\t          return escape(args[i++]);\n\t        // no default\n\t      }\n\t    });\n\t    return div.firstChild;\n\t  }\n\t  /**\n\t   * Check for suites that do not have elements\n\t   * with `classname`, and hide them.\n\t   *\n\t   * @param {text} classname\n\t   */\n\n\n\t  function hideSuitesWithout(classname) {\n\t    var suites = document.getElementsByClassName('suite');\n\n\t    for (var i = 0; i < suites.length; i++) {\n\t      var els = suites[i].getElementsByClassName(classname);\n\n\t      if (!els.length) {\n\t        suites[i].className += ' hidden';\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Unhide .hidden suites.\n\t   */\n\n\n\t  function unhide() {\n\t    var els = document.getElementsByClassName('suite hidden');\n\n\t    while (els.length > 0) {\n\t      els[0].className = els[0].className.replace('suite hidden', 'suite');\n\t    }\n\t  }\n\t  /**\n\t   * Set an element's text contents.\n\t   *\n\t   * @param {HTMLElement} el\n\t   * @param {string} contents\n\t   */\n\n\n\t  function text(el, contents) {\n\t    if (el.textContent) {\n\t      el.textContent = contents;\n\t    } else {\n\t      el.innerText = contents;\n\t    }\n\t  }\n\t  /**\n\t   * Listen on `event` with callback `fn`.\n\t   */\n\n\n\t  function on(el, event, fn) {\n\t    if (el.addEventListener) {\n\t      el.addEventListener(event, fn, false);\n\t    } else {\n\t      el.attachEvent('on' + event, fn);\n\t    }\n\t  }\n\n\t  HTML.browserOnly = true;\n\t});\n\n\tvar list = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module List\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var inherits = utils.inherits;\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_BEGIN = constants.EVENT_TEST_BEGIN;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var color = base.color;\n\t  var cursor = base.cursor;\n\t  /**\n\t   * Expose `List`.\n\t   */\n\n\t  module.exports = List;\n\t  /**\n\t   * Constructs a new `List` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function List(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var n = 0;\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      base.consoleLog();\n\t    });\n\t    runner.on(EVENT_TEST_BEGIN, function (test) {\n\t      process$1.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      var fmt = color('checkmark', '  -') + color('pending', ' %s');\n\t      base.consoleLog(fmt, test.fullTitle());\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      var fmt = color('checkmark', '  ' + base.symbols.ok) + color('pass', ' %s: ') + color(test.speed, '%dms');\n\t      cursor.CR();\n\t      base.consoleLog(fmt, test.fullTitle(), test.duration);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test) {\n\t      cursor.CR();\n\t      base.consoleLog(color('fail', '  %d) %s'), ++n, test.fullTitle());\n\t    });\n\t    runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(List, base);\n\t  List.description = 'like \"spec\" reporter but flat';\n\t});\n\n\tvar min$7 = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Min\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var inherits = utils.inherits;\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  /**\n\t   * Expose `Min`.\n\t   */\n\n\t  module.exports = Min;\n\t  /**\n\t   * Constructs a new `Min` reporter instance.\n\t   *\n\t   * @description\n\t   * This minimal test reporter is best used with '--watch'.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Min(runner, options) {\n\t    base.call(this, runner, options);\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      // clear screen\n\t      process$1.stdout.write(\"\\x1B[2J\"); // set cursor position\n\n\t      process$1.stdout.write(\"\\x1B[1;3H\");\n\t    });\n\t    runner.once(EVENT_RUN_END, this.epilogue.bind(this));\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(Min, base);\n\t  Min.description = 'essentially just a summary';\n\t});\n\n\tvar spec = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Spec\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n\t  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var inherits = utils.inherits;\n\t  var color = base.color;\n\t  /**\n\t   * Expose `Spec`.\n\t   */\n\n\t  module.exports = Spec;\n\t  /**\n\t   * Constructs a new `Spec` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Spec(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var indents = 0;\n\t    var n = 0;\n\n\t    function indent() {\n\t      return Array(indents).join('  ');\n\t    }\n\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      base.consoleLog();\n\t    });\n\t    runner.on(EVENT_SUITE_BEGIN, function (suite) {\n\t      ++indents;\n\t      base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n\t    });\n\t    runner.on(EVENT_SUITE_END, function () {\n\t      --indents;\n\n\t      if (indents === 1) {\n\t        base.consoleLog();\n\t      }\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      var fmt = indent() + color('pending', '  - %s');\n\t      base.consoleLog(fmt, test.title);\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      var fmt;\n\n\t      if (test.speed === 'fast') {\n\t        fmt = indent() + color('checkmark', '  ' + base.symbols.ok) + color('pass', ' %s');\n\t        base.consoleLog(fmt, test.title);\n\t      } else {\n\t        fmt = indent() + color('checkmark', '  ' + base.symbols.ok) + color('pass', ' %s') + color(test.speed, ' (%dms)');\n\t        base.consoleLog(fmt, test.title, test.duration);\n\t      }\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test) {\n\t      base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n\t    });\n\t    runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(Spec, base);\n\t  Spec.description = 'hierarchical & verbose [default]';\n\t});\n\n\tvar nyan = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Nyan\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var inherits = utils.inherits;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  /**\n\t   * Expose `Dot`.\n\t   */\n\n\t  module.exports = NyanCat;\n\t  /**\n\t   * Constructs a new `Nyan` reporter instance.\n\t   *\n\t   * @public\n\t   * @class Nyan\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function NyanCat(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var width = base.window.width * 0.75 | 0;\n\t    var nyanCatWidth = this.nyanCatWidth = 11;\n\t    this.colorIndex = 0;\n\t    this.numberOfLines = 4;\n\t    this.rainbowColors = self.generateColors();\n\t    this.scoreboardWidth = 5;\n\t    this.tick = 0;\n\t    this.trajectories = [[], [], [], []];\n\t    this.trajectoryWidthMax = width - nyanCatWidth;\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      base.cursor.hide();\n\t      self.draw();\n\t    });\n\t    runner.on(EVENT_TEST_PENDING, function () {\n\t      self.draw();\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function () {\n\t      self.draw();\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function () {\n\t      self.draw();\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      base.cursor.show();\n\n\t      for (var i = 0; i < self.numberOfLines; i++) {\n\t        write('\\n');\n\t      }\n\n\t      self.epilogue();\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(NyanCat, base);\n\t  /**\n\t   * Draw the nyan cat\n\t   *\n\t   * @private\n\t   */\n\n\t  NyanCat.prototype.draw = function () {\n\t    this.appendRainbow();\n\t    this.drawScoreboard();\n\t    this.drawRainbow();\n\t    this.drawNyanCat();\n\t    this.tick = !this.tick;\n\t  };\n\t  /**\n\t   * Draw the \"scoreboard\" showing the number\n\t   * of passes, failures and pending tests.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  NyanCat.prototype.drawScoreboard = function () {\n\t    var stats = this.stats;\n\n\t    function draw(type, n) {\n\t      write(' ');\n\t      write(base.color(type, n));\n\t      write('\\n');\n\t    }\n\n\t    draw('green', stats.passes);\n\t    draw('fail', stats.failures);\n\t    draw('pending', stats.pending);\n\t    write('\\n');\n\t    this.cursorUp(this.numberOfLines);\n\t  };\n\t  /**\n\t   * Append the rainbow.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  NyanCat.prototype.appendRainbow = function () {\n\t    var segment = this.tick ? '_' : '-';\n\t    var rainbowified = this.rainbowify(segment);\n\n\t    for (var index = 0; index < this.numberOfLines; index++) {\n\t      var trajectory = this.trajectories[index];\n\n\t      if (trajectory.length >= this.trajectoryWidthMax) {\n\t        trajectory.shift();\n\t      }\n\n\t      trajectory.push(rainbowified);\n\t    }\n\t  };\n\t  /**\n\t   * Draw the rainbow.\n\t   *\n\t   * @private\n\t   */\n\n\n\t  NyanCat.prototype.drawRainbow = function () {\n\t    var self = this;\n\t    this.trajectories.forEach(function (line) {\n\t      write(\"\\x1B[\" + self.scoreboardWidth + 'C');\n\t      write(line.join(''));\n\t      write('\\n');\n\t    });\n\t    this.cursorUp(this.numberOfLines);\n\t  };\n\t  /**\n\t   * Draw the nyan cat\n\t   *\n\t   * @private\n\t   */\n\n\n\t  NyanCat.prototype.drawNyanCat = function () {\n\t    var self = this;\n\t    var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n\t    var dist = \"\\x1B[\" + startWidth + 'C';\n\t    var padding = '';\n\t    write(dist);\n\t    write('_,------,');\n\t    write('\\n');\n\t    write(dist);\n\t    padding = self.tick ? '  ' : '   ';\n\t    write('_|' + padding + '/\\\\_/\\\\ ');\n\t    write('\\n');\n\t    write(dist);\n\t    padding = self.tick ? '_' : '__';\n\t    var tail = self.tick ? '~' : '^';\n\t    write(tail + '|' + padding + this.face() + ' ');\n\t    write('\\n');\n\t    write(dist);\n\t    padding = self.tick ? ' ' : '  ';\n\t    write(padding + '\"\"  \"\" ');\n\t    write('\\n');\n\t    this.cursorUp(this.numberOfLines);\n\t  };\n\t  /**\n\t   * Draw nyan cat face.\n\t   *\n\t   * @private\n\t   * @return {string}\n\t   */\n\n\n\t  NyanCat.prototype.face = function () {\n\t    var stats = this.stats;\n\n\t    if (stats.failures) {\n\t      return '( x .x)';\n\t    } else if (stats.pending) {\n\t      return '( o .o)';\n\t    } else if (stats.passes) {\n\t      return '( ^ .^)';\n\t    }\n\n\t    return '( - .-)';\n\t  };\n\t  /**\n\t   * Move cursor up `n`.\n\t   *\n\t   * @private\n\t   * @param {number} n\n\t   */\n\n\n\t  NyanCat.prototype.cursorUp = function (n) {\n\t    write(\"\\x1B[\" + n + 'A');\n\t  };\n\t  /**\n\t   * Move cursor down `n`.\n\t   *\n\t   * @private\n\t   * @param {number} n\n\t   */\n\n\n\t  NyanCat.prototype.cursorDown = function (n) {\n\t    write(\"\\x1B[\" + n + 'B');\n\t  };\n\t  /**\n\t   * Generate rainbow colors.\n\t   *\n\t   * @private\n\t   * @return {Array}\n\t   */\n\n\n\t  NyanCat.prototype.generateColors = function () {\n\t    var colors = [];\n\n\t    for (var i = 0; i < 6 * 7; i++) {\n\t      var pi3 = Math.floor(Math.PI / 3);\n\t      var n = i * (1.0 / 6);\n\t      var r = Math.floor(3 * Math.sin(n) + 3);\n\t      var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n\t      var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n\t      colors.push(36 * r + 6 * g + b + 16);\n\t    }\n\n\t    return colors;\n\t  };\n\t  /**\n\t   * Apply rainbow to the given `str`.\n\t   *\n\t   * @private\n\t   * @param {string} str\n\t   * @return {string}\n\t   */\n\n\n\t  NyanCat.prototype.rainbowify = function (str) {\n\t    if (!base.useColors) {\n\t      return str;\n\t    }\n\n\t    var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n\t    this.colorIndex += 1;\n\t    return \"\\x1B[38;5;\" + color + 'm' + str + \"\\x1B[0m\";\n\t  };\n\t  /**\n\t   * Stdout helper.\n\t   *\n\t   * @param {string} string A message to write to stdout.\n\t   */\n\n\n\t  function write(string) {\n\t    process$1.stdout.write(string);\n\t  }\n\n\t  NyanCat.description = '\"nyan cat\"';\n\t});\n\n\tvar fs = {};\n\n\tvar xunit = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module XUnit\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var createUnsupportedError = errors.createUnsupportedError;\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n\t  var STATE_FAILED = runnable.constants.STATE_FAILED;\n\t  var inherits = utils.inherits;\n\t  var escape = utils.escape;\n\t  /**\n\t   * Save timer references to avoid Sinon interfering (see GH-237).\n\t   */\n\n\t  var Date = commonjsGlobal.Date;\n\t  /**\n\t   * Expose `XUnit`.\n\t   */\n\n\t  module.exports = XUnit;\n\t  /**\n\t   * Constructs a new `XUnit` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function XUnit(runner, options) {\n\t    base.call(this, runner, options);\n\t    var stats = this.stats;\n\t    var tests = [];\n\t    var self = this; // the name of the test suite, as it will appear in the resulting XML file\n\n\t    var suiteName; // the default name of the test suite if none is provided\n\n\t    var DEFAULT_SUITE_NAME = 'Mocha Tests';\n\n\t    if (options && options.reporterOptions) {\n\t      if (options.reporterOptions.output) {\n\t        if (!fs.createWriteStream) {\n\t          throw createUnsupportedError('file output not supported in browser');\n\t        }\n\n\t        fs.mkdirSync(path$1.dirname(options.reporterOptions.output), {\n\t          recursive: true\n\t        });\n\t        self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n\t      } // get the suite name from the reporter options (if provided)\n\n\n\t      suiteName = options.reporterOptions.suiteName;\n\t    } // fall back to the default suite name\n\n\n\t    suiteName = suiteName || DEFAULT_SUITE_NAME;\n\t    runner.on(EVENT_TEST_PENDING, function (test) {\n\t      tests.push(test);\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      tests.push(test);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test) {\n\t      tests.push(test);\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      self.write(tag('testsuite', {\n\t        name: suiteName,\n\t        tests: stats.tests,\n\t        failures: 0,\n\t        errors: stats.failures,\n\t        skipped: stats.tests - stats.failures - stats.passes,\n\t        timestamp: new Date().toUTCString(),\n\t        time: stats.duration / 1000 || 0\n\t      }, false));\n\t      tests.forEach(function (t) {\n\t        self.test(t);\n\t      });\n\t      self.write('</testsuite>');\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(XUnit, base);\n\t  /**\n\t   * Override done to close the stream (if it's a file).\n\t   *\n\t   * @param failures\n\t   * @param {Function} fn\n\t   */\n\n\t  XUnit.prototype.done = function (failures, fn) {\n\t    if (this.fileStream) {\n\t      this.fileStream.end(function () {\n\t        fn(failures);\n\t      });\n\t    } else {\n\t      fn(failures);\n\t    }\n\t  };\n\t  /**\n\t   * Write out the given line.\n\t   *\n\t   * @param {string} line\n\t   */\n\n\n\t  XUnit.prototype.write = function (line) {\n\t    if (this.fileStream) {\n\t      this.fileStream.write(line + '\\n');\n\t    } else if (_typeof(process$1) === 'object' && process$1.stdout) {\n\t      process$1.stdout.write(line + '\\n');\n\t    } else {\n\t      base.consoleLog(line);\n\t    }\n\t  };\n\t  /**\n\t   * Output tag for the given `test.`\n\t   *\n\t   * @param {Test} test\n\t   */\n\n\n\t  XUnit.prototype.test = function (test) {\n\t    base.useColors = false;\n\t    var attrs = {\n\t      classname: test.parent.fullTitle(),\n\t      name: test.title,\n\t      time: test.duration / 1000 || 0\n\t    };\n\n\t    if (test.state === STATE_FAILED) {\n\t      var err = test.err;\n\t      var diff = !base.hideDiff && base.showDiff(err) ? '\\n' + base.generateDiff(err.actual, err.expected) : '';\n\t      this.write(tag('testcase', attrs, false, tag('failure', {}, false, escape(err.message) + escape(diff) + '\\n' + escape(err.stack))));\n\t    } else if (test.isPending()) {\n\t      this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n\t    } else {\n\t      this.write(tag('testcase', attrs, true));\n\t    }\n\t  };\n\t  /**\n\t   * HTML tag helper.\n\t   *\n\t   * @param name\n\t   * @param attrs\n\t   * @param close\n\t   * @param content\n\t   * @return {string}\n\t   */\n\n\n\t  function tag(name, attrs, close, content) {\n\t    var end = close ? '/>' : '>';\n\t    var pairs = [];\n\t    var tag;\n\n\t    for (var key in attrs) {\n\t      if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n\t        pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n\t      }\n\t    }\n\n\t    tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n\n\t    if (content) {\n\t      tag += content + '</' + name + end;\n\t    }\n\n\t    return tag;\n\t  }\n\n\t  XUnit.description = 'XUnit-compatible XML output';\n\t});\n\n\tvar markdown = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Markdown\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n\t  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  /**\n\t   * Constants\n\t   */\n\n\t  var SUITE_PREFIX = '$';\n\t  /**\n\t   * Expose `Markdown`.\n\t   */\n\n\t  module.exports = Markdown;\n\t  /**\n\t   * Constructs a new `Markdown` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Markdown(runner, options) {\n\t    base.call(this, runner, options);\n\t    var level = 0;\n\t    var buf = '';\n\n\t    function title(str) {\n\t      return Array(level).join('#') + ' ' + str;\n\t    }\n\n\t    function mapTOC(suite, obj) {\n\t      var ret = obj;\n\t      var key = SUITE_PREFIX + suite.title;\n\t      obj = obj[key] = obj[key] || {\n\t        suite: suite\n\t      };\n\t      suite.suites.forEach(function (suite) {\n\t        mapTOC(suite, obj);\n\t      });\n\t      return ret;\n\t    }\n\n\t    function stringifyTOC(obj, level) {\n\t      ++level;\n\t      var buf = '';\n\t      var link;\n\n\t      for (var key in obj) {\n\t        if (key === 'suite') {\n\t          continue;\n\t        }\n\n\t        if (key !== SUITE_PREFIX) {\n\t          link = ' - [' + key.substring(1) + ']';\n\t          link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n\t          buf += Array(level).join('  ') + link;\n\t        }\n\n\t        buf += stringifyTOC(obj[key], level);\n\t      }\n\n\t      return buf;\n\t    }\n\n\t    function generateTOC(suite) {\n\t      var obj = mapTOC(suite, {});\n\t      return stringifyTOC(obj, 0);\n\t    }\n\n\t    generateTOC(runner.suite);\n\t    runner.on(EVENT_SUITE_BEGIN, function (suite) {\n\t      ++level;\n\t      var slug = utils.slug(suite.fullTitle());\n\t      buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n\t      buf += title(suite.title) + '\\n';\n\t    });\n\t    runner.on(EVENT_SUITE_END, function () {\n\t      --level;\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      var code = utils.clean(test.body);\n\t      buf += test.title + '.\\n';\n\t      buf += '\\n```js\\n';\n\t      buf += code + '\\n';\n\t      buf += '```\\n\\n';\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      process$1.stdout.write('# TOC\\n');\n\t      process$1.stdout.write(generateTOC(runner.suite));\n\t      process$1.stdout.write(buf);\n\t    });\n\t  }\n\n\t  Markdown.description = 'GitHub Flavored Markdown';\n\t});\n\n\tvar progress$1 = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Progress\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_TEST_END = constants.EVENT_TEST_END;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var inherits = utils.inherits;\n\t  var color = base.color;\n\t  var cursor = base.cursor;\n\t  /**\n\t   * Expose `Progress`.\n\t   */\n\n\t  module.exports = Progress;\n\t  /**\n\t   * General progress bar color.\n\t   */\n\n\t  base.colors.progress = 90;\n\t  /**\n\t   * Constructs a new `Progress` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Progress(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var width = base.window.width * 0.5 | 0;\n\t    var total = runner.total;\n\t    var complete = 0;\n\t    var lastN = -1; // default chars\n\n\t    options = options || {};\n\t    var reporterOptions = options.reporterOptions || {};\n\t    options.open = reporterOptions.open || '[';\n\t    options.complete = reporterOptions.complete || '▬';\n\t    options.incomplete = reporterOptions.incomplete || base.symbols.dot;\n\t    options.close = reporterOptions.close || ']';\n\t    options.verbose = reporterOptions.verbose || false; // tests started\n\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      process$1.stdout.write('\\n');\n\t      cursor.hide();\n\t    }); // tests complete\n\n\t    runner.on(EVENT_TEST_END, function () {\n\t      complete++;\n\t      var percent = complete / total;\n\t      var n = width * percent | 0;\n\t      var i = width - n;\n\n\t      if (n === lastN && !options.verbose) {\n\t        // Don't re-render the line if it hasn't changed\n\t        return;\n\t      }\n\n\t      lastN = n;\n\t      cursor.CR();\n\t      process$1.stdout.write(\"\\x1B[J\");\n\t      process$1.stdout.write(color('progress', '  ' + options.open));\n\t      process$1.stdout.write(Array(n).join(options.complete));\n\t      process$1.stdout.write(Array(i).join(options.incomplete));\n\t      process$1.stdout.write(color('progress', options.close));\n\n\t      if (options.verbose) {\n\t        process$1.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n\t      }\n\t    }); // tests are complete, output some stats\n\t    // and the failures if any\n\n\t    runner.once(EVENT_RUN_END, function () {\n\t      cursor.show();\n\t      process$1.stdout.write('\\n');\n\t      self.epilogue();\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(Progress, base);\n\t  Progress.description = 'a progress bar';\n\t});\n\n\tvar landing = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module Landing\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var inherits = utils.inherits;\n\t  var constants = runner$1.constants;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  var EVENT_TEST_END = constants.EVENT_TEST_END;\n\t  var STATE_FAILED = runnable.constants.STATE_FAILED;\n\t  var cursor = base.cursor;\n\t  var color = base.color;\n\t  /**\n\t   * Expose `Landing`.\n\t   */\n\n\t  module.exports = Landing;\n\t  /**\n\t   * Airplane color.\n\t   */\n\n\t  base.colors.plane = 0;\n\t  /**\n\t   * Airplane crash color.\n\t   */\n\n\t  base.colors['plane crash'] = 31;\n\t  /**\n\t   * Runway color.\n\t   */\n\n\t  base.colors.runway = 90;\n\t  /**\n\t   * Constructs a new `Landing` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function Landing(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var width = base.window.width * 0.75 | 0;\n\t    var stream = process$1.stdout;\n\t    var plane = color('plane', '✈');\n\t    var crashed = -1;\n\t    var n = 0;\n\t    var total = 0;\n\n\t    function runway() {\n\t      var buf = Array(width).join('-');\n\t      return '  ' + color('runway', buf);\n\t    }\n\n\t    runner.on(EVENT_RUN_BEGIN, function () {\n\t      stream.write('\\n\\n\\n  ');\n\t      cursor.hide();\n\t    });\n\t    runner.on(EVENT_TEST_END, function (test) {\n\t      // check if the plane crashed\n\t      var col = crashed === -1 ? width * ++n / ++total | 0 : crashed; // show the crash\n\n\t      if (test.state === STATE_FAILED) {\n\t        plane = color('plane crash', '✈');\n\t        crashed = col;\n\t      } // render landing strip\n\n\n\t      stream.write(\"\\x1B[\" + (width + 1) + \"D\\x1B[2A\");\n\t      stream.write(runway());\n\t      stream.write('\\n  ');\n\t      stream.write(color('runway', Array(col).join('⋅')));\n\t      stream.write(plane);\n\t      stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n\t      stream.write(runway());\n\t      stream.write(\"\\x1B[0m\");\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      cursor.show();\n\t      process$1.stdout.write('\\n');\n\t      self.epilogue();\n\t    }); // if cursor is hidden when we ctrl-C, then it will remain hidden unless...\n\n\t    process$1.once('SIGINT', function () {\n\t      cursor.show();\n\t      nextTick(function () {\n\t        process$1.kill(process$1.pid, 'SIGINT');\n\t      });\n\t    });\n\t  }\n\t  /**\n\t   * Inherit from `Base.prototype`.\n\t   */\n\n\n\t  inherits(Landing, base);\n\t  Landing.description = 'Unicode landing strip';\n\t});\n\n\tvar jsonStream = createCommonjsModule(function (module, exports) {\n\t  /**\n\t   * @module JSONStream\n\t   */\n\n\t  /**\n\t   * Module dependencies.\n\t   */\n\n\t  var constants = runner$1.constants;\n\t  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\t  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\t  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\t  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\t  /**\n\t   * Expose `JSONStream`.\n\t   */\n\n\t  module.exports = JSONStream;\n\t  /**\n\t   * Constructs a new `JSONStream` reporter instance.\n\t   *\n\t   * @public\n\t   * @class\n\t   * @memberof Mocha.reporters\n\t   * @extends Mocha.reporters.Base\n\t   * @param {Runner} runner - Instance triggers reporter actions.\n\t   * @param {Object} [options] - runner options\n\t   */\n\n\t  function JSONStream(runner, options) {\n\t    base.call(this, runner, options);\n\t    var self = this;\n\t    var total = runner.total;\n\t    runner.once(EVENT_RUN_BEGIN, function () {\n\t      writeEvent(['start', {\n\t        total: total\n\t      }]);\n\t    });\n\t    runner.on(EVENT_TEST_PASS, function (test) {\n\t      writeEvent(['pass', clean(test)]);\n\t    });\n\t    runner.on(EVENT_TEST_FAIL, function (test, err) {\n\t      test = clean(test);\n\t      test.err = err.message;\n\t      test.stack = err.stack || null;\n\t      writeEvent(['fail', test]);\n\t    });\n\t    runner.once(EVENT_RUN_END, function () {\n\t      writeEvent(['end', self.stats]);\n\t    });\n\t  }\n\t  /**\n\t   * Mocha event to be written to the output stream.\n\t   * @typedef {Array} JSONStream~MochaEvent\n\t   */\n\n\t  /**\n\t   * Writes Mocha event to reporter output stream.\n\t   *\n\t   * @private\n\t   * @param {JSONStream~MochaEvent} event - Mocha event to be output.\n\t   */\n\n\n\t  function writeEvent(event) {\n\t    process$1.stdout.write(JSON.stringify(event) + '\\n');\n\t  }\n\t  /**\n\t   * Returns an object literal representation of `test`\n\t   * free of cyclic properties, etc.\n\t   *\n\t   * @private\n\t   * @param {Test} test - Instance used as data source.\n\t   * @return {Object} object containing pared-down test instance data\n\t   */\n\n\n\t  function clean(test) {\n\t    return {\n\t      title: test.title,\n\t      fullTitle: test.fullTitle(),\n\t      file: test.file,\n\t      duration: test.duration,\n\t      currentRetry: test.currentRetry(),\n\t      speed: test.speed\n\t    };\n\t  }\n\n\t  JSONStream.description = 'newline delimited JSON events';\n\t});\n\n\tvar reporters = createCommonjsModule(function (module, exports) {\n\t  // for dynamic (try/catch) requires, which Browserify doesn't handle.\n\n\t  exports.Base = exports.base = base;\n\t  exports.Dot = exports.dot = dot;\n\t  exports.Doc = exports.doc = doc;\n\t  exports.TAP = exports.tap = tap;\n\t  exports.JSON = exports.json = json;\n\t  exports.HTML = exports.html = html$1;\n\t  exports.List = exports.list = list;\n\t  exports.Min = exports.min = min$7;\n\t  exports.Spec = exports.spec = spec;\n\t  exports.Nyan = exports.nyan = nyan;\n\t  exports.XUnit = exports.xunit = xunit;\n\t  exports.Markdown = exports.markdown = markdown;\n\t  exports.Progress = exports.progress = progress$1;\n\t  exports.Landing = exports.landing = landing;\n\t  exports.JSONStream = exports['json-stream'] = jsonStream;\n\t});\n\n\tvar name = \"mocha\";\n\tvar version$2 = \"8.3.2\";\n\tvar homepage = \"https://mochajs.org/\";\n\tvar notifyLogo = \"https://ibin.co/4QuRuGjXvl36.png\";\n\tvar _package = {\n\t\tname: name,\n\t\tversion: version$2,\n\t\thomepage: homepage,\n\t\tnotifyLogo: notifyLogo\n\t};\n\n\tvar _package$1 = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tname: name,\n\t\tversion: version$2,\n\t\thomepage: homepage,\n\t\tnotifyLogo: notifyLogo,\n\t\t'default': _package\n\t});\n\n\tvar require$$10 = getCjsExportFromNamespace(_package$1);\n\n\t/**\n\t * Web Notifications module.\n\t * @module Growl\n\t */\n\n\t/**\n\t * Save timer references to avoid Sinon interfering (see GH-237).\n\t */\n\n\n\tvar Date$2 = commonjsGlobal.Date;\n\tvar setTimeout$2 = commonjsGlobal.setTimeout;\n\tvar EVENT_RUN_END = runner$1.constants.EVENT_RUN_END;\n\tvar isBrowser = utils.isBrowser;\n\t/**\n\t * Checks if browser notification support exists.\n\t *\n\t * @public\n\t * @see {@link https://caniuse.com/#feat=notifications|Browser support (notifications)}\n\t * @see {@link https://caniuse.com/#feat=promises|Browser support (promises)}\n\t * @see {@link Mocha#growl}\n\t * @see {@link Mocha#isGrowlCapable}\n\t * @return {boolean} whether browser notification support exists\n\t */\n\n\tvar isCapable = function isCapable() {\n\t  var hasNotificationSupport = ('Notification' in window);\n\t  var hasPromiseSupport = typeof Promise === 'function';\n\t  return isBrowser() && hasNotificationSupport && hasPromiseSupport;\n\t};\n\t/**\n\t * Implements browser notifications as a pseudo-reporter.\n\t *\n\t * @public\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/notification|Notification API}\n\t * @see {@link https://developers.google.com/web/fundamentals/push-notifications/display-a-notification|Displaying a Notification}\n\t * @see {@link Growl#isPermitted}\n\t * @see {@link Mocha#_growl}\n\t * @param {Runner} runner - Runner instance.\n\t */\n\n\n\tvar notify$2 = function notify(runner) {\n\t  var promise = isPermitted();\n\t  /**\n\t   * Attempt notification.\n\t   */\n\n\t  var sendNotification = function sendNotification() {\n\t    // If user hasn't responded yet... \"No notification for you!\" (Seinfeld)\n\t    Promise.race([promise, Promise.resolve(undefined)]).then(canNotify).then(function () {\n\t      display(runner);\n\t    })[\"catch\"](notPermitted);\n\t  };\n\n\t  runner.once(EVENT_RUN_END, sendNotification);\n\t};\n\t/**\n\t * Checks if browser notification is permitted by user.\n\t *\n\t * @private\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission|Notification.permission}\n\t * @see {@link Mocha#growl}\n\t * @see {@link Mocha#isGrowlPermitted}\n\t * @returns {Promise<boolean>} promise determining if browser notification\n\t *     permissible when fulfilled.\n\t */\n\n\n\tfunction isPermitted() {\n\t  var permitted = {\n\t    granted: function allow() {\n\t      return Promise.resolve(true);\n\t    },\n\t    denied: function deny() {\n\t      return Promise.resolve(false);\n\t    },\n\t    \"default\": function ask() {\n\t      return Notification.requestPermission().then(function (permission) {\n\t        return permission === 'granted';\n\t      });\n\t    }\n\t  };\n\t  return permitted[Notification.permission]();\n\t}\n\t/**\n\t * @summary\n\t * Determines if notification should proceed.\n\t *\n\t * @description\n\t * Notification shall <strong>not</strong> proceed unless `value` is true.\n\t *\n\t * `value` will equal one of:\n\t * <ul>\n\t *   <li><code>true</code> (from `isPermitted`)</li>\n\t *   <li><code>false</code> (from `isPermitted`)</li>\n\t *   <li><code>undefined</code> (from `Promise.race`)</li>\n\t * </ul>\n\t *\n\t * @private\n\t * @param {boolean|undefined} value - Determines if notification permissible.\n\t * @returns {Promise<undefined>} Notification can proceed\n\t */\n\n\n\tfunction canNotify(value) {\n\t  if (!value) {\n\t    var why = value === false ? 'blocked' : 'unacknowledged';\n\t    var reason = 'not permitted by user (' + why + ')';\n\t    return Promise.reject(new Error(reason));\n\t  }\n\n\t  return Promise.resolve();\n\t}\n\t/**\n\t * Displays the notification.\n\t *\n\t * @private\n\t * @param {Runner} runner - Runner instance.\n\t */\n\n\n\tfunction display(runner) {\n\t  var stats = runner.stats;\n\t  var symbol = {\n\t    cross: \"\\u274C\",\n\t    tick: \"\\u2705\"\n\t  };\n\t  var logo = require$$10.notifyLogo;\n\n\t  var _message;\n\n\t  var message;\n\t  var title;\n\n\t  if (stats.failures) {\n\t    _message = stats.failures + ' of ' + stats.tests + ' tests failed';\n\t    message = symbol.cross + ' ' + _message;\n\t    title = 'Failed';\n\t  } else {\n\t    _message = stats.passes + ' tests passed in ' + stats.duration + 'ms';\n\t    message = symbol.tick + ' ' + _message;\n\t    title = 'Passed';\n\t  } // Send notification\n\n\n\t  var options = {\n\t    badge: logo,\n\t    body: message,\n\t    dir: 'ltr',\n\t    icon: logo,\n\t    lang: 'en-US',\n\t    name: 'mocha',\n\t    requireInteraction: false,\n\t    timestamp: Date$2.now()\n\t  };\n\t  var notification = new Notification(title, options); // Autoclose after brief delay (makes various browsers act same)\n\n\t  var FORCE_DURATION = 4000;\n\t  setTimeout$2(notification.close.bind(notification), FORCE_DURATION);\n\t}\n\t/**\n\t * As notifications are tangential to our purpose, just log the error.\n\t *\n\t * @private\n\t * @param {Error} err - Why notification didn't happen.\n\t */\n\n\n\tfunction notPermitted(err) {\n\t  console.error('notification error:', err.message);\n\t}\n\n\tvar growl = {\n\t  isCapable: isCapable,\n\t  notify: notify$2\n\t};\n\n\tvar diff$1 = true;\n\tvar extension = [\n\t\t\"js\",\n\t\t\"cjs\",\n\t\t\"mjs\"\n\t];\n\tvar reporter = \"spec\";\n\tvar slow = 75;\n\tvar timeout = 2000;\n\tvar ui = \"bdd\";\n\tvar mocharc = {\n\t\tdiff: diff$1,\n\t\textension: extension,\n\t\t\"package\": \"./package.json\",\n\t\treporter: reporter,\n\t\tslow: slow,\n\t\ttimeout: timeout,\n\t\tui: ui,\n\t\t\"watch-ignore\": [\n\t\t\"node_modules\",\n\t\t\".git\"\n\t]\n\t};\n\n\tvar mocharc$1 = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tdiff: diff$1,\n\t\textension: extension,\n\t\treporter: reporter,\n\t\tslow: slow,\n\t\ttimeout: timeout,\n\t\tui: ui,\n\t\t'default': mocharc\n\t});\n\n\t/**\n\t * Provides a factory function for a {@link StatsCollector} object.\n\t * @module\n\t */\n\n\n\tvar constants$4 = runner$1.constants;\n\tvar EVENT_TEST_PASS = constants$4.EVENT_TEST_PASS;\n\tvar EVENT_TEST_FAIL = constants$4.EVENT_TEST_FAIL;\n\tvar EVENT_SUITE_BEGIN = constants$4.EVENT_SUITE_BEGIN;\n\tvar EVENT_RUN_BEGIN = constants$4.EVENT_RUN_BEGIN;\n\tvar EVENT_TEST_PENDING = constants$4.EVENT_TEST_PENDING;\n\tvar EVENT_RUN_END$1 = constants$4.EVENT_RUN_END;\n\tvar EVENT_TEST_END = constants$4.EVENT_TEST_END;\n\t/**\n\t * Test statistics collector.\n\t *\n\t * @public\n\t * @typedef {Object} StatsCollector\n\t * @property {number} suites - integer count of suites run.\n\t * @property {number} tests - integer count of tests run.\n\t * @property {number} passes - integer count of passing tests.\n\t * @property {number} pending - integer count of pending tests.\n\t * @property {number} failures - integer count of failed tests.\n\t * @property {Date} start - time when testing began.\n\t * @property {Date} end - time when testing concluded.\n\t * @property {number} duration - number of msecs that testing took.\n\t */\n\n\tvar Date$3 = commonjsGlobal.Date;\n\t/**\n\t * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n\t *\n\t * @private\n\t * @param {Runner} runner - Runner instance\n\t * @throws {TypeError} If falsy `runner`\n\t */\n\n\tfunction createStatsCollector(runner) {\n\t  /**\n\t   * @type StatsCollector\n\t   */\n\t  var stats = {\n\t    suites: 0,\n\t    tests: 0,\n\t    passes: 0,\n\t    pending: 0,\n\t    failures: 0\n\t  };\n\n\t  if (!runner) {\n\t    throw new TypeError('Missing runner argument');\n\t  }\n\n\t  runner.stats = stats;\n\t  runner.once(EVENT_RUN_BEGIN, function () {\n\t    stats.start = new Date$3();\n\t  });\n\t  runner.on(EVENT_SUITE_BEGIN, function (suite) {\n\t    suite.root || stats.suites++;\n\t  });\n\t  runner.on(EVENT_TEST_PASS, function () {\n\t    stats.passes++;\n\t  });\n\t  runner.on(EVENT_TEST_FAIL, function () {\n\t    stats.failures++;\n\t  });\n\t  runner.on(EVENT_TEST_PENDING, function () {\n\t    stats.pending++;\n\t  });\n\t  runner.on(EVENT_TEST_END, function () {\n\t    stats.tests++;\n\t  });\n\t  runner.once(EVENT_RUN_END$1, function () {\n\t    stats.end = new Date$3();\n\t    stats.duration = stats.end - stats.start;\n\t  });\n\t}\n\n\tvar statsCollector = createStatsCollector;\n\n\tvar createInvalidArgumentTypeError$1 = errors.createInvalidArgumentTypeError;\n\tvar isString$1 = utils.isString;\n\tvar MOCHA_ID_PROP_NAME$1 = utils.constants.MOCHA_ID_PROP_NAME;\n\tvar test$1 = Test;\n\t/**\n\t * Initialize a new `Test` with the given `title` and callback `fn`.\n\t *\n\t * @public\n\t * @class\n\t * @extends Runnable\n\t * @param {String} title - Test title (required)\n\t * @param {Function} [fn] - Test callback.  If omitted, the Test is considered \"pending\"\n\t */\n\n\tfunction Test(title, fn) {\n\t  if (!isString$1(title)) {\n\t    throw createInvalidArgumentTypeError$1('Test argument \"title\" should be a string. Received type \"' + _typeof(title) + '\"', 'title', 'string');\n\t  }\n\n\t  this.type = 'test';\n\t  runnable.call(this, title, fn);\n\t  this.reset();\n\t}\n\t/**\n\t * Inherit from `Runnable.prototype`.\n\t */\n\n\n\tutils.inherits(Test, runnable);\n\t/**\n\t * Resets the state initially or for a next run.\n\t */\n\n\tTest.prototype.reset = function () {\n\t  runnable.prototype.reset.call(this);\n\t  this.pending = !this.fn;\n\t  delete this.state;\n\t};\n\t/**\n\t * Set or get retried test\n\t *\n\t * @private\n\t */\n\n\n\tTest.prototype.retriedTest = function (n) {\n\t  if (!arguments.length) {\n\t    return this._retriedTest;\n\t  }\n\n\t  this._retriedTest = n;\n\t};\n\t/**\n\t * Add test to the list of tests marked `only`.\n\t *\n\t * @private\n\t */\n\n\n\tTest.prototype.markOnly = function () {\n\t  this.parent.appendOnlyTest(this);\n\t};\n\n\tTest.prototype.clone = function () {\n\t  var test = new Test(this.title, this.fn);\n\t  test.timeout(this.timeout());\n\t  test.slow(this.slow());\n\t  test.retries(this.retries());\n\t  test.currentRetry(this.currentRetry());\n\t  test.retriedTest(this.retriedTest() || this);\n\t  test.globals(this.globals());\n\t  test.parent = this.parent;\n\t  test.file = this.file;\n\t  test.ctx = this.ctx;\n\t  return test;\n\t};\n\t/**\n\t * Returns an minimal object suitable for transmission over IPC.\n\t * Functions are represented by keys beginning with `$$`.\n\t * @private\n\t * @returns {Object}\n\t */\n\n\n\tTest.prototype.serialize = function serialize() {\n\t  return _defineProperty({\n\t    $$currentRetry: this._currentRetry,\n\t    $$fullTitle: this.fullTitle(),\n\t    $$isPending: this.pending,\n\t    $$retriedTest: this._retriedTest || null,\n\t    $$slow: this._slow,\n\t    $$titlePath: this.titlePath(),\n\t    body: this.body,\n\t    duration: this.duration,\n\t    err: this.err,\n\t    parent: _defineProperty({\n\t      $$fullTitle: this.parent.fullTitle()\n\t    }, MOCHA_ID_PROP_NAME$1, this.parent.id),\n\t    speed: this.speed,\n\t    state: this.state,\n\t    title: this.title,\n\t    type: this.type,\n\t    file: this.file\n\t  }, MOCHA_ID_PROP_NAME$1, this.id);\n\t};\n\n\t/**\n\t @module interfaces/common\n\t*/\n\n\n\tvar createMissingArgumentError$1 = errors.createMissingArgumentError;\n\tvar createUnsupportedError$2 = errors.createUnsupportedError;\n\tvar createForbiddenExclusivityError$1 = errors.createForbiddenExclusivityError;\n\t/**\n\t * Functions common to more than one interface.\n\t *\n\t * @private\n\t * @param {Suite[]} suites\n\t * @param {Context} context\n\t * @param {Mocha} mocha\n\t * @return {Object} An object containing common functions.\n\t */\n\n\tvar common$1 = function common(suites, context, mocha) {\n\t  /**\n\t   * Check if the suite should be tested.\n\t   *\n\t   * @private\n\t   * @param {Suite} suite - suite to check\n\t   * @returns {boolean}\n\t   */\n\t  function shouldBeTested(suite) {\n\t    return !mocha.options.grep || mocha.options.grep && mocha.options.grep.test(suite.fullTitle()) && !mocha.options.invert;\n\t  }\n\n\t  return {\n\t    /**\n\t     * This is only present if flag --delay is passed into Mocha. It triggers\n\t     * root suite execution.\n\t     *\n\t     * @param {Suite} suite The root suite.\n\t     * @return {Function} A function which runs the root suite\n\t     */\n\t    runWithSuite: function runWithSuite(suite) {\n\t      return function run() {\n\t        suite.run();\n\t      };\n\t    },\n\n\t    /**\n\t     * Execute before running tests.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     */\n\t    before: function before(name, fn) {\n\t      suites[0].beforeAll(name, fn);\n\t    },\n\n\t    /**\n\t     * Execute after running tests.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     */\n\t    after: function after(name, fn) {\n\t      suites[0].afterAll(name, fn);\n\t    },\n\n\t    /**\n\t     * Execute before each test case.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     */\n\t    beforeEach: function beforeEach(name, fn) {\n\t      suites[0].beforeEach(name, fn);\n\t    },\n\n\t    /**\n\t     * Execute after each test case.\n\t     *\n\t     * @param {string} name\n\t     * @param {Function} fn\n\t     */\n\t    afterEach: function afterEach(name, fn) {\n\t      suites[0].afterEach(name, fn);\n\t    },\n\t    suite: {\n\t      /**\n\t       * Create an exclusive Suite; convenience function\n\t       * See docstring for create() below.\n\t       *\n\t       * @param {Object} opts\n\t       * @returns {Suite}\n\t       */\n\t      only: function only(opts) {\n\t        if (mocha.options.forbidOnly) {\n\t          throw createForbiddenExclusivityError$1(mocha);\n\t        }\n\n\t        opts.isOnly = true;\n\t        return this.create(opts);\n\t      },\n\n\t      /**\n\t       * Create a Suite, but skip it; convenience function\n\t       * See docstring for create() below.\n\t       *\n\t       * @param {Object} opts\n\t       * @returns {Suite}\n\t       */\n\t      skip: function skip(opts) {\n\t        opts.pending = true;\n\t        return this.create(opts);\n\t      },\n\n\t      /**\n\t       * Creates a suite.\n\t       *\n\t       * @param {Object} opts Options\n\t       * @param {string} opts.title Title of Suite\n\t       * @param {Function} [opts.fn] Suite Function (not always applicable)\n\t       * @param {boolean} [opts.pending] Is Suite pending?\n\t       * @param {string} [opts.file] Filepath where this Suite resides\n\t       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n\t       * @returns {Suite}\n\t       */\n\t      create: function create(opts) {\n\t        var suite$1 = suite.create(suites[0], opts.title);\n\t        suite$1.pending = Boolean(opts.pending);\n\t        suite$1.file = opts.file;\n\t        suites.unshift(suite$1);\n\n\t        if (opts.isOnly) {\n\t          suite$1.markOnly();\n\t        }\n\n\t        if (suite$1.pending && mocha.options.forbidPending && shouldBeTested(suite$1)) {\n\t          throw createUnsupportedError$2('Pending test forbidden');\n\t        }\n\n\t        if (typeof opts.fn === 'function') {\n\t          opts.fn.call(suite$1);\n\t          suites.shift();\n\t        } else if (typeof opts.fn === 'undefined' && !suite$1.pending) {\n\t          throw createMissingArgumentError$1('Suite \"' + suite$1.fullTitle() + '\" was defined but no callback was supplied. ' + 'Supply a callback or explicitly skip the suite.', 'callback', 'function');\n\t        } else if (!opts.fn && suite$1.pending) {\n\t          suites.shift();\n\t        }\n\n\t        return suite$1;\n\t      }\n\t    },\n\t    test: {\n\t      /**\n\t       * Exclusive test-case.\n\t       *\n\t       * @param {Object} mocha\n\t       * @param {Function} test\n\t       * @returns {*}\n\t       */\n\t      only: function only(mocha, test) {\n\t        if (mocha.options.forbidOnly) {\n\t          throw createForbiddenExclusivityError$1(mocha);\n\t        }\n\n\t        test.markOnly();\n\t        return test;\n\t      },\n\n\t      /**\n\t       * Pending test case.\n\t       *\n\t       * @param {string} title\n\t       */\n\t      skip: function skip(title) {\n\t        context.test(title);\n\t      },\n\n\t      /**\n\t       * Number of retry attempts\n\t       *\n\t       * @param {number} n\n\t       */\n\t      retries: function retries(n) {\n\t        context.retries(n);\n\t      }\n\t    }\n\t  };\n\t};\n\n\tvar EVENT_FILE_PRE_REQUIRE = suite.constants.EVENT_FILE_PRE_REQUIRE;\n\t/**\n\t * BDD-style interface:\n\t *\n\t *      describe('Array', function() {\n\t *        describe('#indexOf()', function() {\n\t *          it('should return -1 when not present', function() {\n\t *            // ...\n\t *          });\n\t *\n\t *          it('should return the index when present', function() {\n\t *            // ...\n\t *          });\n\t *        });\n\t *      });\n\t *\n\t * @param {Suite} suite Root suite.\n\t */\n\n\tvar bdd = function bddInterface(suite) {\n\t  var suites = [suite];\n\t  suite.on(EVENT_FILE_PRE_REQUIRE, function (context, file, mocha) {\n\t    var common = common$1(suites, context, mocha);\n\t    context.before = common.before;\n\t    context.after = common.after;\n\t    context.beforeEach = common.beforeEach;\n\t    context.afterEach = common.afterEach;\n\t    context.run = mocha.options.delay && common.runWithSuite(suite);\n\t    /**\n\t     * Describe a \"suite\" with the given `title`\n\t     * and callback `fn` containing nested suites\n\t     * and/or tests.\n\t     */\n\n\t    context.describe = context.context = function (title, fn) {\n\t      return common.suite.create({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Pending describe.\n\t     */\n\n\n\t    context.xdescribe = context.xcontext = context.describe.skip = function (title, fn) {\n\t      return common.suite.skip({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Exclusive suite.\n\t     */\n\n\n\t    context.describe.only = function (title, fn) {\n\t      return common.suite.only({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Describe a specification or test-case\n\t     * with the given `title` and callback `fn`\n\t     * acting as a thunk.\n\t     */\n\n\n\t    context.it = context.specify = function (title, fn) {\n\t      var suite = suites[0];\n\n\t      if (suite.isPending()) {\n\t        fn = null;\n\t      }\n\n\t      var test = new test$1(title, fn);\n\t      test.file = file;\n\t      suite.addTest(test);\n\t      return test;\n\t    };\n\t    /**\n\t     * Exclusive test-case.\n\t     */\n\n\n\t    context.it.only = function (title, fn) {\n\t      return common.test.only(mocha, context.it(title, fn));\n\t    };\n\t    /**\n\t     * Pending test case.\n\t     */\n\n\n\t    context.xit = context.xspecify = context.it.skip = function (title) {\n\t      return context.it(title);\n\t    };\n\t    /**\n\t     * Number of attempts to retry.\n\t     */\n\n\n\t    context.it.retries = function (n) {\n\t      context.retries(n);\n\t    };\n\t  });\n\t};\n\n\tvar description = 'BDD or RSpec style [default]';\n\tbdd.description = description;\n\n\tvar EVENT_FILE_PRE_REQUIRE$1 = suite.constants.EVENT_FILE_PRE_REQUIRE;\n\t/**\n\t * TDD-style interface:\n\t *\n\t *      suite('Array', function() {\n\t *        suite('#indexOf()', function() {\n\t *          suiteSetup(function() {\n\t *\n\t *          });\n\t *\n\t *          test('should return -1 when not present', function() {\n\t *\n\t *          });\n\t *\n\t *          test('should return the index when present', function() {\n\t *\n\t *          });\n\t *\n\t *          suiteTeardown(function() {\n\t *\n\t *          });\n\t *        });\n\t *      });\n\t *\n\t * @param {Suite} suite Root suite.\n\t */\n\n\tvar tdd = function tdd(suite) {\n\t  var suites = [suite];\n\t  suite.on(EVENT_FILE_PRE_REQUIRE$1, function (context, file, mocha) {\n\t    var common = common$1(suites, context, mocha);\n\t    context.setup = common.beforeEach;\n\t    context.teardown = common.afterEach;\n\t    context.suiteSetup = common.before;\n\t    context.suiteTeardown = common.after;\n\t    context.run = mocha.options.delay && common.runWithSuite(suite);\n\t    /**\n\t     * Describe a \"suite\" with the given `title` and callback `fn` containing\n\t     * nested suites and/or tests.\n\t     */\n\n\t    context.suite = function (title, fn) {\n\t      return common.suite.create({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Pending suite.\n\t     */\n\n\n\t    context.suite.skip = function (title, fn) {\n\t      return common.suite.skip({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Exclusive test-case.\n\t     */\n\n\n\t    context.suite.only = function (title, fn) {\n\t      return common.suite.only({\n\t        title: title,\n\t        file: file,\n\t        fn: fn\n\t      });\n\t    };\n\t    /**\n\t     * Describe a specification or test-case with the given `title` and\n\t     * callback `fn` acting as a thunk.\n\t     */\n\n\n\t    context.test = function (title, fn) {\n\t      var suite = suites[0];\n\n\t      if (suite.isPending()) {\n\t        fn = null;\n\t      }\n\n\t      var test = new test$1(title, fn);\n\t      test.file = file;\n\t      suite.addTest(test);\n\t      return test;\n\t    };\n\t    /**\n\t     * Exclusive test-case.\n\t     */\n\n\n\t    context.test.only = function (title, fn) {\n\t      return common.test.only(mocha, context.test(title, fn));\n\t    };\n\n\t    context.test.skip = common.test.skip;\n\t    context.test.retries = common.test.retries;\n\t  });\n\t};\n\n\tvar description$1 = 'traditional \"suite\"/\"test\" instead of BDD\\'s \"describe\"/\"it\"';\n\ttdd.description = description$1;\n\n\tvar EVENT_FILE_PRE_REQUIRE$2 = suite.constants.EVENT_FILE_PRE_REQUIRE;\n\t/**\n\t * QUnit-style interface:\n\t *\n\t *     suite('Array');\n\t *\n\t *     test('#length', function() {\n\t *       var arr = [1,2,3];\n\t *       ok(arr.length == 3);\n\t *     });\n\t *\n\t *     test('#indexOf()', function() {\n\t *       var arr = [1,2,3];\n\t *       ok(arr.indexOf(1) == 0);\n\t *       ok(arr.indexOf(2) == 1);\n\t *       ok(arr.indexOf(3) == 2);\n\t *     });\n\t *\n\t *     suite('String');\n\t *\n\t *     test('#length', function() {\n\t *       ok('foo'.length == 3);\n\t *     });\n\t *\n\t * @param {Suite} suite Root suite.\n\t */\n\n\tvar qunit = function qUnitInterface(suite) {\n\t  var suites = [suite];\n\t  suite.on(EVENT_FILE_PRE_REQUIRE$2, function (context, file, mocha) {\n\t    var common = common$1(suites, context, mocha);\n\t    context.before = common.before;\n\t    context.after = common.after;\n\t    context.beforeEach = common.beforeEach;\n\t    context.afterEach = common.afterEach;\n\t    context.run = mocha.options.delay && common.runWithSuite(suite);\n\t    /**\n\t     * Describe a \"suite\" with the given `title`.\n\t     */\n\n\t    context.suite = function (title) {\n\t      if (suites.length > 1) {\n\t        suites.shift();\n\t      }\n\n\t      return common.suite.create({\n\t        title: title,\n\t        file: file,\n\t        fn: false\n\t      });\n\t    };\n\t    /**\n\t     * Exclusive Suite.\n\t     */\n\n\n\t    context.suite.only = function (title) {\n\t      if (suites.length > 1) {\n\t        suites.shift();\n\t      }\n\n\t      return common.suite.only({\n\t        title: title,\n\t        file: file,\n\t        fn: false\n\t      });\n\t    };\n\t    /**\n\t     * Describe a specification or test-case\n\t     * with the given `title` and callback `fn`\n\t     * acting as a thunk.\n\t     */\n\n\n\t    context.test = function (title, fn) {\n\t      var test = new test$1(title, fn);\n\t      test.file = file;\n\t      suites[0].addTest(test);\n\t      return test;\n\t    };\n\t    /**\n\t     * Exclusive test-case.\n\t     */\n\n\n\t    context.test.only = function (title, fn) {\n\t      return common.test.only(mocha, context.test(title, fn));\n\t    };\n\n\t    context.test.skip = common.test.skip;\n\t    context.test.retries = common.test.retries;\n\t  });\n\t};\n\n\tvar description$2 = 'QUnit style';\n\tqunit.description = description$2;\n\n\t/**\n\t * Exports-style (as Node.js module) interface:\n\t *\n\t *     exports.Array = {\n\t *       '#indexOf()': {\n\t *         'should return -1 when the value is not present': function() {\n\t *\n\t *         },\n\t *\n\t *         'should return the correct index when the value is present': function() {\n\t *\n\t *         }\n\t *       }\n\t *     };\n\t *\n\t * @param {Suite} suite Root suite.\n\t */\n\n\n\tvar exports$1 = function exports(suite$1) {\n\t  var suites = [suite$1];\n\t  suite$1.on(suite.constants.EVENT_FILE_REQUIRE, visit);\n\n\t  function visit(obj, file) {\n\t    var suite$1;\n\n\t    for (var key in obj) {\n\t      if (typeof obj[key] === 'function') {\n\t        var fn = obj[key];\n\n\t        switch (key) {\n\t          case 'before':\n\t            suites[0].beforeAll(fn);\n\t            break;\n\n\t          case 'after':\n\t            suites[0].afterAll(fn);\n\t            break;\n\n\t          case 'beforeEach':\n\t            suites[0].beforeEach(fn);\n\t            break;\n\n\t          case 'afterEach':\n\t            suites[0].afterEach(fn);\n\t            break;\n\n\t          default:\n\t            var test = new test$1(key, fn);\n\t            test.file = file;\n\t            suites[0].addTest(test);\n\t        }\n\t      } else {\n\t        suite$1 = suite.create(suites[0], key);\n\t        suites.unshift(suite$1);\n\t        visit(obj[key], file);\n\t        suites.shift();\n\t      }\n\t    }\n\t  }\n\t};\n\n\tvar description$3 = 'Node.js module (\"exports\") style';\n\texports$1.description = description$3;\n\n\tvar bdd$1 = bdd;\n\tvar tdd$1 = tdd;\n\tvar qunit$1 = qunit;\n\tvar exports$2 = exports$1;\n\tvar interfaces = {\n\t  bdd: bdd$1,\n\t  tdd: tdd$1,\n\t  qunit: qunit$1,\n\t  exports: exports$2\n\t};\n\n\t/**\n\t * @module Context\n\t */\n\n\t/**\n\t * Expose `Context`.\n\t */\n\n\tvar context = Context;\n\t/**\n\t * Initialize a new `Context`.\n\t *\n\t * @private\n\t */\n\n\tfunction Context() {}\n\t/**\n\t * Set or get the context `Runnable` to `runnable`.\n\t *\n\t * @private\n\t * @param {Runnable} runnable\n\t * @return {Context} context\n\t */\n\n\n\tContext.prototype.runnable = function (runnable) {\n\t  if (!arguments.length) {\n\t    return this._runnable;\n\t  }\n\n\t  this.test = this._runnable = runnable;\n\t  return this;\n\t};\n\t/**\n\t * Set or get test timeout `ms`.\n\t *\n\t * @private\n\t * @param {number} ms\n\t * @return {Context} self\n\t */\n\n\n\tContext.prototype.timeout = function (ms) {\n\t  if (!arguments.length) {\n\t    return this.runnable().timeout();\n\t  }\n\n\t  this.runnable().timeout(ms);\n\t  return this;\n\t};\n\t/**\n\t * Set or get test slowness threshold `ms`.\n\t *\n\t * @private\n\t * @param {number} ms\n\t * @return {Context} self\n\t */\n\n\n\tContext.prototype.slow = function (ms) {\n\t  if (!arguments.length) {\n\t    return this.runnable().slow();\n\t  }\n\n\t  this.runnable().slow(ms);\n\t  return this;\n\t};\n\t/**\n\t * Mark a test as skipped.\n\t *\n\t * @private\n\t * @throws Pending\n\t */\n\n\n\tContext.prototype.skip = function () {\n\t  this.runnable().skip();\n\t};\n\t/**\n\t * Set or get a number of allowed retries on failed tests\n\t *\n\t * @private\n\t * @param {number} n\n\t * @return {Context} self\n\t */\n\n\n\tContext.prototype.retries = function (n) {\n\t  if (!arguments.length) {\n\t    return this.runnable().retries();\n\t  }\n\n\t  this.runnable().retries(n);\n\t  return this;\n\t};\n\n\tvar mocharc$2 = getCjsExportFromNamespace(mocharc$1);\n\n\tvar mocha = createCommonjsModule(function (module, exports) {\n\t  /*!\n\t   * mocha\n\t   * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n\t   * MIT Licensed\n\t   */\n\n\t  var esmUtils = utils.supportsEsModules(true) ? require$$11 : undefined;\n\t  var warn = errors.warn,\n\t      createInvalidReporterError = errors.createInvalidReporterError,\n\t      createInvalidInterfaceError = errors.createInvalidInterfaceError,\n\t      createMochaInstanceAlreadyDisposedError = errors.createMochaInstanceAlreadyDisposedError,\n\t      createMochaInstanceAlreadyRunningError = errors.createMochaInstanceAlreadyRunningError,\n\t      createUnsupportedError = errors.createUnsupportedError;\n\t  var _Suite$constants = suite.constants,\n\t      EVENT_FILE_PRE_REQUIRE = _Suite$constants.EVENT_FILE_PRE_REQUIRE,\n\t      EVENT_FILE_POST_REQUIRE = _Suite$constants.EVENT_FILE_POST_REQUIRE,\n\t      EVENT_FILE_REQUIRE = _Suite$constants.EVENT_FILE_REQUIRE;\n\t  var sQuote = utils.sQuote;\n\t  var debug = browser$2('mocha:mocha');\n\t  exports = module.exports = Mocha;\n\t  /**\n\t   * A Mocha instance is a finite state machine.\n\t   * These are the states it can be in.\n\t   * @private\n\t   */\n\n\t  var mochaStates = utils.defineConstants({\n\t    /**\n\t     * Initial state of the mocha instance\n\t     * @private\n\t     */\n\t    INIT: 'init',\n\n\t    /**\n\t     * Mocha instance is running tests\n\t     * @private\n\t     */\n\t    RUNNING: 'running',\n\n\t    /**\n\t     * Mocha instance is done running tests and references to test functions and hooks are cleaned.\n\t     * You can reset this state by unloading the test files.\n\t     * @private\n\t     */\n\t    REFERENCES_CLEANED: 'referencesCleaned',\n\n\t    /**\n\t     * Mocha instance is disposed and can no longer be used.\n\t     * @private\n\t     */\n\t    DISPOSED: 'disposed'\n\t  });\n\t  /**\n\t   * To require local UIs and reporters when running in node.\n\t   */\n\n\t  if (!utils.isBrowser() && typeof module.paths !== 'undefined') {\n\t    var cwd = utils.cwd();\n\t    module.paths.push(cwd, path$1.join(cwd, 'node_modules'));\n\t  }\n\t  /**\n\t   * Expose internals.\n\t   * @private\n\t   */\n\n\n\t  exports.utils = utils;\n\t  exports.interfaces = interfaces;\n\t  /**\n\t   * @public\n\t   * @memberof Mocha\n\t   */\n\n\t  exports.reporters = reporters;\n\t  exports.Runnable = runnable;\n\t  exports.Context = context;\n\t  /**\n\t   *\n\t   * @memberof Mocha\n\t   */\n\n\t  exports.Runner = runner$1;\n\t  exports.Suite = suite;\n\t  exports.Hook = hook;\n\t  exports.Test = test$1;\n\t  var currentContext;\n\n\t  exports.afterEach = function () {\n\t    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return (currentContext.afterEach || currentContext.teardown).apply(this, args);\n\t  };\n\n\t  exports.after = function () {\n\t    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\n\t    return (currentContext.after || currentContext.suiteTeardown).apply(this, args);\n\t  };\n\n\t  exports.beforeEach = function () {\n\t    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t      args[_key3] = arguments[_key3];\n\t    }\n\n\t    return (currentContext.beforeEach || currentContext.setup).apply(this, args);\n\t  };\n\n\t  exports.before = function () {\n\t    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n\t      args[_key4] = arguments[_key4];\n\t    }\n\n\t    return (currentContext.before || currentContext.suiteSetup).apply(this, args);\n\t  };\n\n\t  exports.describe = function () {\n\t    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n\t      args[_key5] = arguments[_key5];\n\t    }\n\n\t    return (currentContext.describe || currentContext.suite).apply(this, args);\n\t  };\n\n\t  exports.describe.only = function () {\n\t    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n\t      args[_key6] = arguments[_key6];\n\t    }\n\n\t    return (currentContext.describe || currentContext.suite).only.apply(this, args);\n\t  };\n\n\t  exports.describe.skip = function () {\n\t    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n\t      args[_key7] = arguments[_key7];\n\t    }\n\n\t    return (currentContext.describe || currentContext.suite).skip.apply(this, args);\n\t  };\n\n\t  exports.it = function () {\n\t    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n\t      args[_key8] = arguments[_key8];\n\t    }\n\n\t    return (currentContext.it || currentContext.test).apply(this, args);\n\t  };\n\n\t  exports.it.only = function () {\n\t    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n\t      args[_key9] = arguments[_key9];\n\t    }\n\n\t    return (currentContext.it || currentContext.test).only.apply(this, args);\n\t  };\n\n\t  exports.it.skip = function () {\n\t    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n\t      args[_key10] = arguments[_key10];\n\t    }\n\n\t    return (currentContext.it || currentContext.test).skip.apply(this, args);\n\t  };\n\n\t  exports.xdescribe = exports.describe.skip;\n\t  exports.xit = exports.it.skip;\n\t  exports.setup = exports.beforeEach;\n\t  exports.suiteSetup = exports.before;\n\t  exports.suiteTeardown = exports.after;\n\t  exports.suite = exports.describe;\n\t  exports.teardown = exports.afterEach;\n\t  exports.test = exports.it;\n\n\t  exports.run = function () {\n\t    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n\t      args[_key11] = arguments[_key11];\n\t    }\n\n\t    return currentContext.run.apply(this, args);\n\t  };\n\t  /**\n\t   * Constructs a new Mocha instance with `options`.\n\t   *\n\t   * @public\n\t   * @class Mocha\n\t   * @param {Object} [options] - Settings object.\n\t   * @param {boolean} [options.allowUncaught] - Propagate uncaught errors?\n\t   * @param {boolean} [options.asyncOnly] - Force `done` callback or promise?\n\t   * @param {boolean} [options.bail] - Bail after first test failure?\n\t   * @param {boolean} [options.checkLeaks] - Check for global variable leaks?\n\t   * @param {boolean} [options.color] - Color TTY output from reporter?\n\t   * @param {boolean} [options.delay] - Delay root suite execution?\n\t   * @param {boolean} [options.diff] - Show diff on failure?\n\t   * @param {string} [options.fgrep] - Test filter given string.\n\t   * @param {boolean} [options.forbidOnly] - Tests marked `only` fail the suite?\n\t   * @param {boolean} [options.forbidPending] - Pending tests fail the suite?\n\t   * @param {boolean} [options.fullTrace] - Full stacktrace upon failure?\n\t   * @param {string[]} [options.global] - Variables expected in global scope.\n\t   * @param {RegExp|string} [options.grep] - Test filter given regular expression.\n\t   * @param {boolean} [options.growl] - Enable desktop notifications?\n\t   * @param {boolean} [options.inlineDiffs] - Display inline diffs?\n\t   * @param {boolean} [options.invert] - Invert test filter matches?\n\t   * @param {boolean} [options.noHighlighting] - Disable syntax highlighting?\n\t   * @param {string|constructor} [options.reporter] - Reporter name or constructor.\n\t   * @param {Object} [options.reporterOption] - Reporter settings object.\n\t   * @param {number} [options.retries] - Number of times to retry failed tests.\n\t   * @param {number} [options.slow] - Slow threshold value.\n\t   * @param {number|string} [options.timeout] - Timeout threshold value.\n\t   * @param {string} [options.ui] - Interface name.\n\t   * @param {boolean} [options.parallel] - Run jobs in parallel\n\t   * @param {number} [options.jobs] - Max number of worker processes for parallel runs\n\t   * @param {MochaRootHookObject} [options.rootHooks] - Hooks to bootstrap the root\n\t   * suite with\n\t   * @param {boolean} [options.isWorker] - Should be `true` if `Mocha` process is running in a worker process.\n\t   */\n\n\n\t  function Mocha() {\n\t    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t    options = _objectSpread2(_objectSpread2({}, mocharc$2), options);\n\t    this.files = [];\n\t    this.options = options; // root suite\n\n\t    this.suite = new exports.Suite('', new exports.Context(), true);\n\t    this._cleanReferencesAfterRun = true;\n\t    this._state = mochaStates.INIT;\n\t    this.grep(options.grep).fgrep(options.fgrep).ui(options.ui).reporter(options.reporter, options.reporterOption || options.reporterOptions // reporterOptions was previously the only way to specify options to reporter\n\t    ).slow(options.slow).global(options.global); // this guard exists because Suite#timeout does not consider `undefined` to be valid input\n\n\t    if (typeof options.timeout !== 'undefined') {\n\t      this.timeout(options.timeout === false ? 0 : options.timeout);\n\t    }\n\n\t    if ('retries' in options) {\n\t      this.retries(options.retries);\n\t    }\n\n\t    ['allowUncaught', 'asyncOnly', 'bail', 'checkLeaks', 'color', 'delay', 'diff', 'forbidOnly', 'forbidPending', 'fullTrace', 'growl', 'inlineDiffs', 'invert'].forEach(function (opt) {\n\t      if (options[opt]) {\n\t        this[opt]();\n\t      }\n\t    }, this);\n\n\t    if (options.rootHooks) {\n\t      this.rootHooks(options.rootHooks);\n\t    }\n\t    /**\n\t     * The class which we'll instantiate in {@link Mocha#run}.  Defaults to\n\t     * {@link Runner} in serial mode; changes in parallel mode.\n\t     * @memberof Mocha\n\t     * @private\n\t     */\n\n\n\t    this._runnerClass = exports.Runner;\n\t    /**\n\t     * Whether or not to call {@link Mocha#loadFiles} implicitly when calling\n\t     * {@link Mocha#run}.  If this is `true`, then it's up to the consumer to call\n\t     * {@link Mocha#loadFiles} _or_ {@link Mocha#loadFilesAsync}.\n\t     * @private\n\t     * @memberof Mocha\n\t     */\n\n\t    this._lazyLoadFiles = false;\n\t    /**\n\t     * It's useful for a Mocha instance to know if it's running in a worker process.\n\t     * We could derive this via other means, but it's helpful to have a flag to refer to.\n\t     * @memberof Mocha\n\t     * @private\n\t     */\n\n\t    this.isWorker = Boolean(options.isWorker);\n\t    this.globalSetup(options.globalSetup).globalTeardown(options.globalTeardown).enableGlobalSetup(options.enableGlobalSetup).enableGlobalTeardown(options.enableGlobalTeardown);\n\n\t    if (options.parallel && (typeof options.jobs === 'undefined' || options.jobs > 1)) {\n\t      debug('attempting to enable parallel mode');\n\t      this.parallelMode(true);\n\t    }\n\t  }\n\t  /**\n\t   * Enables or disables bailing on the first failure.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-bail-b)\n\t   * @param {boolean} [bail=true] - Whether to bail on first error.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.bail = function (bail) {\n\t    this.suite.bail(bail !== false);\n\t    return this;\n\t  };\n\t  /**\n\t   * @summary\n\t   * Adds `file` to be loaded for execution.\n\t   *\n\t   * @description\n\t   * Useful for generic setup code that must be included within test suite.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-file-filedirectoryglob)\n\t   * @param {string} file - Pathname of file to be loaded.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.addFile = function (file) {\n\t    this.files.push(file);\n\t    return this;\n\t  };\n\t  /**\n\t   * Sets reporter to `reporter`, defaults to \"spec\".\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-reporter-name-r-name)\n\t   * @see [Reporters](../#reporters)\n\t   * @param {String|Function} reporterName - Reporter name or constructor.\n\t   * @param {Object} [reporterOptions] - Options used to configure the reporter.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   * @throws {Error} if requested reporter cannot be loaded\n\t   * @example\n\t   *\n\t   * // Use XUnit reporter and direct its output to file\n\t   * mocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });\n\t   */\n\n\n\t  Mocha.prototype.reporter = function (reporterName, reporterOptions) {\n\t    if (typeof reporterName === 'function') {\n\t      this._reporter = reporterName;\n\t    } else {\n\t      reporterName = reporterName || 'spec';\n\t      var reporter; // Try to load a built-in reporter.\n\n\t      if (reporters[reporterName]) {\n\t        reporter = reporters[reporterName];\n\t      } // Try to load reporters from process.cwd() and node_modules\n\n\n\t      if (!reporter) {\n\t        try {\n\t          reporter = commonjsRequire(reporterName);\n\t        } catch (err) {\n\t          if (err.code === 'MODULE_NOT_FOUND') {\n\t            // Try to load reporters from a path (absolute or relative)\n\t            try {\n\t              reporter = commonjsRequire(path$1.resolve(utils.cwd(), reporterName));\n\t            } catch (_err) {\n\t              _err.code === 'MODULE_NOT_FOUND' ? warn(sQuote(reporterName) + ' reporter not found') : warn(sQuote(reporterName) + ' reporter blew up with error:\\n' + err.stack);\n\t            }\n\t          } else {\n\t            warn(sQuote(reporterName) + ' reporter blew up with error:\\n' + err.stack);\n\t          }\n\t        }\n\t      }\n\n\t      if (!reporter) {\n\t        throw createInvalidReporterError('invalid reporter ' + sQuote(reporterName), reporterName);\n\t      }\n\n\t      this._reporter = reporter;\n\t    }\n\n\t    this.options.reporterOption = reporterOptions; // alias option name is used in public reporters xunit/tap/progress\n\n\t    this.options.reporterOptions = reporterOptions;\n\t    return this;\n\t  };\n\t  /**\n\t   * Sets test UI `name`, defaults to \"bdd\".\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-ui-name-u-name)\n\t   * @see [Interface DSLs](../#interfaces)\n\t   * @param {string|Function} [ui=bdd] - Interface name or class.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   * @throws {Error} if requested interface cannot be loaded\n\t   */\n\n\n\t  Mocha.prototype.ui = function (ui) {\n\t    var bindInterface;\n\n\t    if (typeof ui === 'function') {\n\t      bindInterface = ui;\n\t    } else {\n\t      ui = ui || 'bdd';\n\t      bindInterface = exports.interfaces[ui];\n\n\t      if (!bindInterface) {\n\t        try {\n\t          bindInterface = commonjsRequire(ui);\n\t        } catch (err) {\n\t          throw createInvalidInterfaceError('invalid interface ' + sQuote(ui), ui);\n\t        }\n\t      }\n\t    }\n\n\t    bindInterface(this.suite);\n\t    this.suite.on(EVENT_FILE_PRE_REQUIRE, function (context) {\n\t      currentContext = context;\n\t    });\n\t    return this;\n\t  };\n\t  /**\n\t   * Loads `files` prior to execution. Does not support ES Modules.\n\t   *\n\t   * @description\n\t   * The implementation relies on Node's `require` to execute\n\t   * the test interface functions and will be subject to its cache.\n\t   * Supports only CommonJS modules. To load ES modules, use Mocha#loadFilesAsync.\n\t   *\n\t   * @private\n\t   * @see {@link Mocha#addFile}\n\t   * @see {@link Mocha#run}\n\t   * @see {@link Mocha#unloadFiles}\n\t   * @see {@link Mocha#loadFilesAsync}\n\t   * @param {Function} [fn] - Callback invoked upon completion.\n\t   */\n\n\n\t  Mocha.prototype.loadFiles = function (fn) {\n\t    var self = this;\n\t    var suite = this.suite;\n\t    this.files.forEach(function (file) {\n\t      file = path$1.resolve(file);\n\t      suite.emit(EVENT_FILE_PRE_REQUIRE, commonjsGlobal, file, self);\n\t      suite.emit(EVENT_FILE_REQUIRE, commonjsRequire(), file, self);\n\t      suite.emit(EVENT_FILE_POST_REQUIRE, commonjsGlobal, file, self);\n\t    });\n\t    fn && fn();\n\t  };\n\t  /**\n\t   * Loads `files` prior to execution. Supports Node ES Modules.\n\t   *\n\t   * @description\n\t   * The implementation relies on Node's `require` and `import` to execute\n\t   * the test interface functions and will be subject to its cache.\n\t   * Supports both CJS and ESM modules.\n\t   *\n\t   * @public\n\t   * @see {@link Mocha#addFile}\n\t   * @see {@link Mocha#run}\n\t   * @see {@link Mocha#unloadFiles}\n\t   * @returns {Promise}\n\t   * @example\n\t   *\n\t   * // loads ESM (and CJS) test files asynchronously, then runs root suite\n\t   * mocha.loadFilesAsync()\n\t   *   .then(() => mocha.run(failures => process.exitCode = failures ? 1 : 0))\n\t   *   .catch(() => process.exitCode = 1);\n\t   */\n\n\n\t  Mocha.prototype.loadFilesAsync = function () {\n\t    var self = this;\n\t    var suite = this.suite;\n\t    this.lazyLoadFiles(true);\n\n\t    if (!esmUtils) {\n\t      return new Promise(function (resolve) {\n\t        self.loadFiles(resolve);\n\t      });\n\t    }\n\n\t    return esmUtils.loadFilesAsync(this.files, function (file) {\n\t      suite.emit(EVENT_FILE_PRE_REQUIRE, commonjsGlobal, file, self);\n\t    }, function (file, resultModule) {\n\t      suite.emit(EVENT_FILE_REQUIRE, resultModule, file, self);\n\t      suite.emit(EVENT_FILE_POST_REQUIRE, commonjsGlobal, file, self);\n\t    });\n\t  };\n\t  /**\n\t   * Removes a previously loaded file from Node's `require` cache.\n\t   *\n\t   * @private\n\t   * @static\n\t   * @see {@link Mocha#unloadFiles}\n\t   * @param {string} file - Pathname of file to be unloaded.\n\t   */\n\n\n\t  Mocha.unloadFile = function (file) {\n\t    if (utils.isBrowser()) {\n\t      throw createUnsupportedError('unloadFile() is only suported in a Node.js environment');\n\t    }\n\n\t    return require$$11.unloadFile(file);\n\t  };\n\t  /**\n\t   * Unloads `files` from Node's `require` cache.\n\t   *\n\t   * @description\n\t   * This allows required files to be \"freshly\" reloaded, providing the ability\n\t   * to reuse a Mocha instance programmatically.\n\t   * Note: does not clear ESM module files from the cache\n\t   *\n\t   * <strong>Intended for consumers &mdash; not used internally</strong>\n\t   *\n\t   * @public\n\t   * @see {@link Mocha#run}\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.unloadFiles = function () {\n\t    if (this._state === mochaStates.DISPOSED) {\n\t      throw createMochaInstanceAlreadyDisposedError('Mocha instance is already disposed, it cannot be used again.', this._cleanReferencesAfterRun, this);\n\t    }\n\n\t    this.files.forEach(function (file) {\n\t      Mocha.unloadFile(file);\n\t    });\n\t    this._state = mochaStates.INIT;\n\t    return this;\n\t  };\n\t  /**\n\t   * Sets `grep` filter after escaping RegExp special characters.\n\t   *\n\t   * @public\n\t   * @see {@link Mocha#grep}\n\t   * @param {string} str - Value to be converted to a regexp.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Select tests whose full title begins with `\"foo\"` followed by a period\n\t   * mocha.fgrep('foo.');\n\t   */\n\n\n\t  Mocha.prototype.fgrep = function (str) {\n\t    if (!str) {\n\t      return this;\n\t    }\n\n\t    return this.grep(new RegExp(escapeStringRegexp(str)));\n\t  };\n\t  /**\n\t   * @summary\n\t   * Sets `grep` filter used to select specific tests for execution.\n\t   *\n\t   * @description\n\t   * If `re` is a regexp-like string, it will be converted to regexp.\n\t   * The regexp is tested against the full title of each test (i.e., the\n\t   * name of the test preceded by titles of each its ancestral suites).\n\t   * As such, using an <em>exact-match</em> fixed pattern against the\n\t   * test name itself will not yield any matches.\n\t   * <br>\n\t   * <strong>Previous filter value will be overwritten on each call!</strong>\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-grep-regexp-g-regexp)\n\t   * @see {@link Mocha#fgrep}\n\t   * @see {@link Mocha#invert}\n\t   * @param {RegExp|String} re - Regular expression used to select tests.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Select tests whose full title contains `\"match\"`, ignoring case\n\t   * mocha.grep(/match/i);\n\t   * @example\n\t   *\n\t   * // Same as above but with regexp-like string argument\n\t   * mocha.grep('/match/i');\n\t   * @example\n\t   *\n\t   * // ## Anti-example\n\t   * // Given embedded test `it('only-this-test')`...\n\t   * mocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!\n\t   */\n\n\n\t  Mocha.prototype.grep = function (re) {\n\t    if (utils.isString(re)) {\n\t      // extract args if it's regex-like, i.e: [string, pattern, flag]\n\t      var arg = re.match(/^\\/(.*)\\/(g|i|)$|.*/);\n\t      this.options.grep = new RegExp(arg[1] || arg[0], arg[2]);\n\t    } else {\n\t      this.options.grep = re;\n\t    }\n\n\t    return this;\n\t  };\n\t  /**\n\t   * Inverts `grep` matches.\n\t   *\n\t   * @public\n\t   * @see {@link Mocha#grep}\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Select tests whose full title does *not* contain `\"match\"`, ignoring case\n\t   * mocha.grep(/match/i).invert();\n\t   */\n\n\n\t  Mocha.prototype.invert = function () {\n\t    this.options.invert = true;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables or disables checking for global variables leaked while running tests.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-check-leaks)\n\t   * @param {boolean} [checkLeaks=true] - Whether to check for global variable leaks.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.checkLeaks = function (checkLeaks) {\n\t    this.options.checkLeaks = checkLeaks !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables or disables whether or not to dispose after each test run.\n\t   * Disable this to ensure you can run the test suite multiple times.\n\t   * If disabled, be sure to dispose mocha when you're done to prevent memory leaks.\n\t   * @public\n\t   * @see {@link Mocha#dispose}\n\t   * @param {boolean} cleanReferencesAfterRun\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.cleanReferencesAfterRun = function (cleanReferencesAfterRun) {\n\t    this._cleanReferencesAfterRun = cleanReferencesAfterRun !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Manually dispose this mocha instance. Mark this instance as `disposed` and unable to run more tests.\n\t   * It also removes function references to tests functions and hooks, so variables trapped in closures can be cleaned by the garbage collector.\n\t   * @public\n\t   */\n\n\n\t  Mocha.prototype.dispose = function () {\n\t    if (this._state === mochaStates.RUNNING) {\n\t      throw createMochaInstanceAlreadyRunningError('Cannot dispose while the mocha instance is still running tests.');\n\t    }\n\n\t    this.unloadFiles();\n\t    this._previousRunner && this._previousRunner.dispose();\n\t    this.suite.dispose();\n\t    this._state = mochaStates.DISPOSED;\n\t  };\n\t  /**\n\t   * Displays full stack trace upon test failure.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-full-trace)\n\t   * @param {boolean} [fullTrace=true] - Whether to print full stacktrace upon failure.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.fullTrace = function (fullTrace) {\n\t    this.options.fullTrace = fullTrace !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables desktop notification support if prerequisite software installed.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-growl-g)\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.growl = function () {\n\t    this.options.growl = this.isGrowlCapable();\n\n\t    if (!this.options.growl) {\n\t      var detail = utils.isBrowser() ? 'notification support not available in this browser...' : 'notification support prerequisites not installed...';\n\t      console.error(detail + ' cannot enable!');\n\t    }\n\n\t    return this;\n\t  };\n\t  /**\n\t   * @summary\n\t   * Determines if Growl support seems likely.\n\t   *\n\t   * @description\n\t   * <strong>Not available when run in browser.</strong>\n\t   *\n\t   * @private\n\t   * @see {@link Growl#isCapable}\n\t   * @see {@link Mocha#growl}\n\t   * @return {boolean} whether Growl support can be expected\n\t   */\n\n\n\t  Mocha.prototype.isGrowlCapable = growl.isCapable;\n\t  /**\n\t   * Implements desktop notifications using a pseudo-reporter.\n\t   *\n\t   * @private\n\t   * @see {@link Mocha#growl}\n\t   * @see {@link Growl#notify}\n\t   * @param {Runner} runner - Runner instance.\n\t   */\n\n\t  Mocha.prototype._growl = growl.notify;\n\t  /**\n\t   * Specifies whitelist of variable names to be expected in global scope.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-global-variable-name)\n\t   * @see {@link Mocha#checkLeaks}\n\t   * @param {String[]|String} global - Accepted global variable name(s).\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Specify variables to be expected in global scope\n\t   * mocha.global(['jQuery', 'MyLib']);\n\t   */\n\n\t  Mocha.prototype.global = function (global) {\n\t    this.options.global = (this.options.global || []).concat(global).filter(Boolean).filter(function (elt, idx, arr) {\n\t      return arr.indexOf(elt) === idx;\n\t    });\n\t    return this;\n\t  }; // for backwards compability, 'globals' is an alias of 'global'\n\n\n\t  Mocha.prototype.globals = Mocha.prototype.global;\n\t  /**\n\t   * Enables or disables TTY color output by screen-oriented reporters.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-color-c-colors)\n\t   * @param {boolean} [color=true] - Whether to enable color output.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\t  Mocha.prototype.color = function (color) {\n\t    this.options.color = color !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables or disables reporter to use inline diffs (rather than +/-)\n\t   * in test failure output.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-inline-diffs)\n\t   * @param {boolean} [inlineDiffs=true] - Whether to use inline diffs.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.inlineDiffs = function (inlineDiffs) {\n\t    this.options.inlineDiffs = inlineDiffs !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables or disables reporter to include diff in test failure output.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-diff)\n\t   * @param {boolean} [diff=true] - Whether to show diff on failure.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.diff = function (diff) {\n\t    this.options.diff = diff !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * @summary\n\t   * Sets timeout threshold value.\n\t   *\n\t   * @description\n\t   * A string argument can use shorthand (such as \"2s\") and will be converted.\n\t   * If the value is `0`, timeouts will be disabled.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-timeout-ms-t-ms)\n\t   * @see [Timeouts](../#timeouts)\n\t   * @param {number|string} msecs - Timeout threshold value.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Sets timeout to one second\n\t   * mocha.timeout(1000);\n\t   * @example\n\t   *\n\t   * // Same as above but using string argument\n\t   * mocha.timeout('1s');\n\t   */\n\n\n\t  Mocha.prototype.timeout = function (msecs) {\n\t    this.suite.timeout(msecs);\n\t    return this;\n\t  };\n\t  /**\n\t   * Sets the number of times to retry failed tests.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-retries-n)\n\t   * @see [Retry Tests](../#retry-tests)\n\t   * @param {number} retry - Number of times to retry failed tests.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Allow any failed test to retry one more time\n\t   * mocha.retries(1);\n\t   */\n\n\n\t  Mocha.prototype.retries = function (retry) {\n\t    this.suite.retries(retry);\n\t    return this;\n\t  };\n\t  /**\n\t   * Sets slowness threshold value.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-slow-ms-s-ms)\n\t   * @param {number} msecs - Slowness threshold value.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   * @example\n\t   *\n\t   * // Sets \"slow\" threshold to half a second\n\t   * mocha.slow(500);\n\t   * @example\n\t   *\n\t   * // Same as above but using string argument\n\t   * mocha.slow('0.5s');\n\t   */\n\n\n\t  Mocha.prototype.slow = function (msecs) {\n\t    this.suite.slow(msecs);\n\t    return this;\n\t  };\n\t  /**\n\t   * Forces all tests to either accept a `done` callback or return a promise.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-async-only-a)\n\t   * @param {boolean} [asyncOnly=true] - Whether to force `done` callback or promise.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.asyncOnly = function (asyncOnly) {\n\t    this.options.asyncOnly = asyncOnly !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Disables syntax highlighting (in browser).\n\t   *\n\t   * @public\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.noHighlighting = function () {\n\t    this.options.noHighlighting = true;\n\t    return this;\n\t  };\n\t  /**\n\t   * Enables or disables uncaught errors to propagate.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-allow-uncaught)\n\t   * @param {boolean} [allowUncaught=true] - Whether to propagate uncaught errors.\n\t   * @return {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.allowUncaught = function (allowUncaught) {\n\t    this.options.allowUncaught = allowUncaught !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * @summary\n\t   * Delays root suite execution.\n\t   *\n\t   * @description\n\t   * Used to perform async operations before any suites are run.\n\t   *\n\t   * @public\n\t   * @see [delayed root suite](../#delayed-root-suite)\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.delay = function delay() {\n\t    this.options.delay = true;\n\t    return this;\n\t  };\n\t  /**\n\t   * Causes tests marked `only` to fail the suite.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-forbid-only)\n\t   * @param {boolean} [forbidOnly=true] - Whether tests marked `only` fail the suite.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.forbidOnly = function (forbidOnly) {\n\t    this.options.forbidOnly = forbidOnly !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Causes pending tests and tests marked `skip` to fail the suite.\n\t   *\n\t   * @public\n\t   * @see [CLI option](../#-forbid-pending)\n\t   * @param {boolean} [forbidPending=true] - Whether pending tests fail the suite.\n\t   * @returns {Mocha} this\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.forbidPending = function (forbidPending) {\n\t    this.options.forbidPending = forbidPending !== false;\n\t    return this;\n\t  };\n\t  /**\n\t   * Throws an error if mocha is in the wrong state to be able to transition to a \"running\" state.\n\t   * @private\n\t   */\n\n\n\t  Mocha.prototype._guardRunningStateTransition = function () {\n\t    if (this._state === mochaStates.RUNNING) {\n\t      throw createMochaInstanceAlreadyRunningError('Mocha instance is currently running tests, cannot start a next test run until this one is done', this);\n\t    }\n\n\t    if (this._state === mochaStates.DISPOSED || this._state === mochaStates.REFERENCES_CLEANED) {\n\t      throw createMochaInstanceAlreadyDisposedError('Mocha instance is already disposed, cannot start a new test run. Please create a new mocha instance. Be sure to set disable `cleanReferencesAfterRun` when you want to reuse the same mocha instance for multiple test runs.', this._cleanReferencesAfterRun, this);\n\t    }\n\t  };\n\t  /**\n\t   * Mocha version as specified by \"package.json\".\n\t   *\n\t   * @name Mocha#version\n\t   * @type string\n\t   * @readonly\n\t   */\n\n\n\t  Object.defineProperty(Mocha.prototype, 'version', {\n\t    value: require$$10.version,\n\t    configurable: false,\n\t    enumerable: true,\n\t    writable: false\n\t  });\n\t  /**\n\t   * Callback to be invoked when test execution is complete.\n\t   *\n\t   * @private\n\t   * @callback DoneCB\n\t   * @param {number} failures - Number of failures that occurred.\n\t   */\n\n\t  /**\n\t   * Runs root suite and invokes `fn()` when complete.\n\t   *\n\t   * @description\n\t   * To run tests multiple times (or to run tests in files that are\n\t   * already in the `require` cache), make sure to clear them from\n\t   * the cache first!\n\t   *\n\t   * @public\n\t   * @see {@link Mocha#unloadFiles}\n\t   * @see {@link Runner#run}\n\t   * @param {DoneCB} [fn] - Callback invoked when test execution completed.\n\t   * @returns {Runner} runner instance\n\t   * @example\n\t   *\n\t   * // exit with non-zero status if there were test failures\n\t   * mocha.run(failures => process.exitCode = failures ? 1 : 0);\n\t   */\n\n\t  Mocha.prototype.run = function (fn) {\n\t    var _this = this;\n\n\t    this._guardRunningStateTransition();\n\n\t    this._state = mochaStates.RUNNING;\n\n\t    if (this._previousRunner) {\n\t      this._previousRunner.dispose();\n\n\t      this.suite.reset();\n\t    }\n\n\t    if (this.files.length && !this._lazyLoadFiles) {\n\t      this.loadFiles();\n\t    }\n\n\t    var suite = this.suite;\n\t    var options = this.options;\n\t    options.files = this.files;\n\t    var runner = new this._runnerClass(suite, {\n\t      delay: options.delay,\n\t      cleanReferencesAfterRun: this._cleanReferencesAfterRun\n\t    });\n\t    statsCollector(runner);\n\t    var reporter = new this._reporter(runner, options);\n\t    runner.checkLeaks = options.checkLeaks === true;\n\t    runner.fullStackTrace = options.fullTrace;\n\t    runner.asyncOnly = options.asyncOnly;\n\t    runner.allowUncaught = options.allowUncaught;\n\t    runner.forbidOnly = options.forbidOnly;\n\t    runner.forbidPending = options.forbidPending;\n\n\t    if (options.grep) {\n\t      runner.grep(options.grep, options.invert);\n\t    }\n\n\t    if (options.global) {\n\t      runner.globals(options.global);\n\t    }\n\n\t    if (options.growl) {\n\t      this._growl(runner);\n\t    }\n\n\t    if (options.color !== undefined) {\n\t      exports.reporters.Base.useColors = options.color;\n\t    }\n\n\t    exports.reporters.Base.inlineDiffs = options.inlineDiffs;\n\t    exports.reporters.Base.hideDiff = !options.diff;\n\n\t    var done = function done(failures) {\n\t      _this._previousRunner = runner;\n\t      _this._state = _this._cleanReferencesAfterRun ? mochaStates.REFERENCES_CLEANED : mochaStates.INIT;\n\t      fn = fn || utils.noop;\n\n\t      if (typeof reporter.done === 'function') {\n\t        reporter.done(failures, fn);\n\t      } else {\n\t        fn(failures);\n\t      }\n\t    };\n\n\t    var runAsync = /*#__PURE__*/function () {\n\t      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(runner) {\n\t        var context, failureCount;\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                if (!(_this.options.enableGlobalSetup && _this.hasGlobalSetupFixtures())) {\n\t                  _context.next = 6;\n\t                  break;\n\t                }\n\n\t                _context.next = 3;\n\t                return _this.runGlobalSetup(runner);\n\n\t              case 3:\n\t                _context.t0 = _context.sent;\n\t                _context.next = 7;\n\t                break;\n\n\t              case 6:\n\t                _context.t0 = {};\n\n\t              case 7:\n\t                context = _context.t0;\n\t                _context.next = 10;\n\t                return runner.runAsync({\n\t                  files: _this.files,\n\t                  options: options\n\t                });\n\n\t              case 10:\n\t                failureCount = _context.sent;\n\n\t                if (!(_this.options.enableGlobalTeardown && _this.hasGlobalTeardownFixtures())) {\n\t                  _context.next = 14;\n\t                  break;\n\t                }\n\n\t                _context.next = 14;\n\t                return _this.runGlobalTeardown(runner, {\n\t                  context: context\n\t                });\n\n\t              case 14:\n\t                return _context.abrupt(\"return\", failureCount);\n\n\t              case 15:\n\t              case \"end\":\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee);\n\t      }));\n\n\t      return function runAsync(_x) {\n\t        return _ref.apply(this, arguments);\n\t      };\n\t    }(); // no \"catch\" here is intentional. errors coming out of\n\t    // Runner#run are considered uncaught/unhandled and caught\n\t    // by the `process` event listeners.\n\t    // also: returning anything other than `runner` would be a breaking\n\t    // change\n\n\n\t    runAsync(runner).then(done);\n\t    return runner;\n\t  };\n\t  /**\n\t   * Assigns hooks to the root suite\n\t   * @param {MochaRootHookObject} [hooks] - Hooks to assign to root suite\n\t   * @chainable\n\t   */\n\n\n\t  Mocha.prototype.rootHooks = function rootHooks() {\n\t    var _this2 = this;\n\n\t    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        _ref2$beforeAll = _ref2.beforeAll,\n\t        beforeAll = _ref2$beforeAll === void 0 ? [] : _ref2$beforeAll,\n\t        _ref2$beforeEach = _ref2.beforeEach,\n\t        beforeEach = _ref2$beforeEach === void 0 ? [] : _ref2$beforeEach,\n\t        _ref2$afterAll = _ref2.afterAll,\n\t        afterAll = _ref2$afterAll === void 0 ? [] : _ref2$afterAll,\n\t        _ref2$afterEach = _ref2.afterEach,\n\t        afterEach = _ref2$afterEach === void 0 ? [] : _ref2$afterEach;\n\n\t    beforeAll = utils.castArray(beforeAll);\n\t    beforeEach = utils.castArray(beforeEach);\n\t    afterAll = utils.castArray(afterAll);\n\t    afterEach = utils.castArray(afterEach);\n\t    beforeAll.forEach(function (hook) {\n\t      _this2.suite.beforeAll(hook);\n\t    });\n\t    beforeEach.forEach(function (hook) {\n\t      _this2.suite.beforeEach(hook);\n\t    });\n\t    afterAll.forEach(function (hook) {\n\t      _this2.suite.afterAll(hook);\n\t    });\n\t    afterEach.forEach(function (hook) {\n\t      _this2.suite.afterEach(hook);\n\t    });\n\t    return this;\n\t  };\n\t  /**\n\t   * Toggles parallel mode.\n\t   *\n\t   * Must be run before calling {@link Mocha#run}. Changes the `Runner` class to\n\t   * use; also enables lazy file loading if not already done so.\n\t   *\n\t   * Warning: when passed `false` and lazy loading has been enabled _via any means_ (including calling `parallelMode(true)`), this method will _not_ disable lazy loading. Lazy loading is a prerequisite for parallel\n\t   * mode, but parallel mode is _not_ a prerequisite for lazy loading!\n\t   * @param {boolean} [enable] - If `true`, enable; otherwise disable.\n\t   * @throws If run in browser\n\t   * @throws If Mocha not in `INIT` state\n\t   * @returns {Mocha}\n\t   * @chainable\n\t   * @public\n\t   */\n\n\n\t  Mocha.prototype.parallelMode = function parallelMode() {\n\t    var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n\t    if (utils.isBrowser()) {\n\t      throw createUnsupportedError('parallel mode is only supported in Node.js');\n\t    }\n\n\t    var parallel = Boolean(enable);\n\n\t    if (parallel === this.options.parallel && this._lazyLoadFiles && this._runnerClass !== exports.Runner) {\n\t      return this;\n\t    }\n\n\t    if (this._state !== mochaStates.INIT) {\n\t      throw createUnsupportedError('cannot change parallel mode after having called run()');\n\t    }\n\n\t    this.options.parallel = parallel; // swap Runner class\n\n\t    this._runnerClass = parallel ? require$$11 : exports.Runner; // lazyLoadFiles may have been set `true` otherwise (for ESM loading),\n\t    // so keep `true` if so.\n\n\t    return this.lazyLoadFiles(this._lazyLoadFiles || parallel);\n\t  };\n\t  /**\n\t   * Disables implicit call to {@link Mocha#loadFiles} in {@link Mocha#run}. This\n\t   * setting is used by watch mode, parallel mode, and for loading ESM files.\n\t   * @todo This should throw if we've already loaded files; such behavior\n\t   * necessitates adding a new state.\n\t   * @param {boolean} [enable] - If `true`, disable eager loading of files in\n\t   * {@link Mocha#run}\n\t   * @chainable\n\t   * @public\n\t   */\n\n\n\t  Mocha.prototype.lazyLoadFiles = function lazyLoadFiles(enable) {\n\t    this._lazyLoadFiles = enable === true;\n\t    debug('set lazy load to %s', enable);\n\t    return this;\n\t  };\n\t  /**\n\t   * Configures one or more global setup fixtures.\n\t   *\n\t   * If given no parameters, _unsets_ any previously-set fixtures.\n\t   * @chainable\n\t   * @public\n\t   * @param {MochaGlobalFixture|MochaGlobalFixture[]} [setupFns] - Global setup fixture(s)\n\t   * @returns {Mocha}\n\t   */\n\n\n\t  Mocha.prototype.globalSetup = function globalSetup() {\n\t    var setupFns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    setupFns = utils.castArray(setupFns);\n\t    this.options.globalSetup = setupFns;\n\t    debug('configured %d global setup functions', setupFns.length);\n\t    return this;\n\t  };\n\t  /**\n\t   * Configures one or more global teardown fixtures.\n\t   *\n\t   * If given no parameters, _unsets_ any previously-set fixtures.\n\t   * @chainable\n\t   * @public\n\t   * @param {MochaGlobalFixture|MochaGlobalFixture[]} [teardownFns] - Global teardown fixture(s)\n\t   * @returns {Mocha}\n\t   */\n\n\n\t  Mocha.prototype.globalTeardown = function globalTeardown() {\n\t    var teardownFns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    teardownFns = utils.castArray(teardownFns);\n\t    this.options.globalTeardown = teardownFns;\n\t    debug('configured %d global teardown functions', teardownFns.length);\n\t    return this;\n\t  };\n\t  /**\n\t   * Run any global setup fixtures sequentially, if any.\n\t   *\n\t   * This is _automatically called_ by {@link Mocha#run} _unless_ the `runGlobalSetup` option is `false`; see {@link Mocha#enableGlobalSetup}.\n\t   *\n\t   * The context object this function resolves with should be consumed by {@link Mocha#runGlobalTeardown}.\n\t   * @param {object} [context] - Context object if already have one\n\t   * @public\n\t   * @returns {Promise<object>} Context object\n\t   */\n\n\n\t  Mocha.prototype.runGlobalSetup = /*#__PURE__*/function () {\n\t    var _runGlobalSetup = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n\t      var context,\n\t          globalSetup,\n\t          _args2 = arguments;\n\t      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t        while (1) {\n\t          switch (_context2.prev = _context2.next) {\n\t            case 0:\n\t              context = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n\t              globalSetup = this.options.globalSetup;\n\n\t              if (!(globalSetup && globalSetup.length)) {\n\t                _context2.next = 7;\n\t                break;\n\t              }\n\n\t              debug('run(): global setup starting');\n\t              _context2.next = 6;\n\t              return this._runGlobalFixtures(globalSetup, context);\n\n\t            case 6:\n\t              debug('run(): global setup complete');\n\n\t            case 7:\n\t              return _context2.abrupt(\"return\", context);\n\n\t            case 8:\n\t            case \"end\":\n\t              return _context2.stop();\n\t          }\n\t        }\n\t      }, _callee2, this);\n\t    }));\n\n\t    function runGlobalSetup() {\n\t      return _runGlobalSetup.apply(this, arguments);\n\t    }\n\n\t    return runGlobalSetup;\n\t  }();\n\t  /**\n\t   * Run any global teardown fixtures sequentially, if any.\n\t   *\n\t   * This is _automatically called_ by {@link Mocha#run} _unless_ the `runGlobalTeardown` option is `false`; see {@link Mocha#enableGlobalTeardown}.\n\t   *\n\t   * Should be called with context object returned by {@link Mocha#runGlobalSetup}, if applicable.\n\t   * @param {object} [context] - Context object if already have one\n\t   * @public\n\t   * @returns {Promise<object>} Context object\n\t   */\n\n\n\t  Mocha.prototype.runGlobalTeardown = /*#__PURE__*/function () {\n\t    var _runGlobalTeardown = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n\t      var context,\n\t          globalTeardown,\n\t          _args3 = arguments;\n\t      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t        while (1) {\n\t          switch (_context3.prev = _context3.next) {\n\t            case 0:\n\t              context = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n\t              globalTeardown = this.options.globalTeardown;\n\n\t              if (!(globalTeardown && globalTeardown.length)) {\n\t                _context3.next = 6;\n\t                break;\n\t              }\n\n\t              debug('run(): global teardown starting');\n\t              _context3.next = 6;\n\t              return this._runGlobalFixtures(globalTeardown, context);\n\n\t            case 6:\n\t              debug('run(): global teardown complete');\n\t              return _context3.abrupt(\"return\", context);\n\n\t            case 8:\n\t            case \"end\":\n\t              return _context3.stop();\n\t          }\n\t        }\n\t      }, _callee3, this);\n\t    }));\n\n\t    function runGlobalTeardown() {\n\t      return _runGlobalTeardown.apply(this, arguments);\n\t    }\n\n\t    return runGlobalTeardown;\n\t  }();\n\t  /**\n\t   * Run global fixtures sequentially with context `context`\n\t   * @private\n\t   * @param {MochaGlobalFixture[]} [fixtureFns] - Fixtures to run\n\t   * @param {object} [context] - context object\n\t   * @returns {Promise<object>} context object\n\t   */\n\n\n\t  Mocha.prototype._runGlobalFixtures = /*#__PURE__*/function () {\n\t    var _runGlobalFixtures2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n\t      var fixtureFns,\n\t          context,\n\t          _iteratorNormalCompletion,\n\t          _didIteratorError,\n\t          _iteratorError,\n\t          _iterator,\n\t          _step,\n\t          _value,\n\t          fixtureFn,\n\t          _args4 = arguments;\n\n\t      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t        while (1) {\n\t          switch (_context4.prev = _context4.next) {\n\t            case 0:\n\t              fixtureFns = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : [];\n\t              context = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n\t              _iteratorNormalCompletion = true;\n\t              _didIteratorError = false;\n\t              _context4.prev = 4;\n\t              _iterator = _asyncIterator(fixtureFns);\n\n\t            case 6:\n\t              _context4.next = 8;\n\t              return _iterator.next();\n\n\t            case 8:\n\t              _step = _context4.sent;\n\t              _iteratorNormalCompletion = _step.done;\n\t              _context4.next = 12;\n\t              return _step.value;\n\n\t            case 12:\n\t              _value = _context4.sent;\n\n\t              if (_iteratorNormalCompletion) {\n\t                _context4.next = 20;\n\t                break;\n\t              }\n\n\t              fixtureFn = _value;\n\t              _context4.next = 17;\n\t              return fixtureFn.call(context);\n\n\t            case 17:\n\t              _iteratorNormalCompletion = true;\n\t              _context4.next = 6;\n\t              break;\n\n\t            case 20:\n\t              _context4.next = 26;\n\t              break;\n\n\t            case 22:\n\t              _context4.prev = 22;\n\t              _context4.t0 = _context4[\"catch\"](4);\n\t              _didIteratorError = true;\n\t              _iteratorError = _context4.t0;\n\n\t            case 26:\n\t              _context4.prev = 26;\n\t              _context4.prev = 27;\n\n\t              if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n\t                _context4.next = 31;\n\t                break;\n\t              }\n\n\t              _context4.next = 31;\n\t              return _iterator[\"return\"]();\n\n\t            case 31:\n\t              _context4.prev = 31;\n\n\t              if (!_didIteratorError) {\n\t                _context4.next = 34;\n\t                break;\n\t              }\n\n\t              throw _iteratorError;\n\n\t            case 34:\n\t              return _context4.finish(31);\n\n\t            case 35:\n\t              return _context4.finish(26);\n\n\t            case 36:\n\t              return _context4.abrupt(\"return\", context);\n\n\t            case 37:\n\t            case \"end\":\n\t              return _context4.stop();\n\t          }\n\t        }\n\t      }, _callee4, null, [[4, 22, 26, 36], [27,, 31, 35]]);\n\t    }));\n\n\t    function _runGlobalFixtures() {\n\t      return _runGlobalFixtures2.apply(this, arguments);\n\t    }\n\n\t    return _runGlobalFixtures;\n\t  }();\n\t  /**\n\t   * Toggle execution of any global setup fixture(s)\n\t   *\n\t   * @chainable\n\t   * @public\n\t   * @param {boolean } [enabled=true] - If `false`, do not run global setup fixture\n\t   * @returns {Mocha}\n\t   */\n\n\n\t  Mocha.prototype.enableGlobalSetup = function enableGlobalSetup() {\n\t    var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t    this.options.enableGlobalSetup = Boolean(enabled);\n\t    return this;\n\t  };\n\t  /**\n\t   * Toggle execution of any global teardown fixture(s)\n\t   *\n\t   * @chainable\n\t   * @public\n\t   * @param {boolean } [enabled=true] - If `false`, do not run global teardown fixture\n\t   * @returns {Mocha}\n\t   */\n\n\n\t  Mocha.prototype.enableGlobalTeardown = function enableGlobalTeardown() {\n\t    var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\t    this.options.enableGlobalTeardown = Boolean(enabled);\n\t    return this;\n\t  };\n\t  /**\n\t   * Returns `true` if one or more global setup fixtures have been supplied.\n\t   * @public\n\t   * @returns {boolean}\n\t   */\n\n\n\t  Mocha.prototype.hasGlobalSetupFixtures = function hasGlobalSetupFixtures() {\n\t    return Boolean(this.options.globalSetup.length);\n\t  };\n\t  /**\n\t   * Returns `true` if one or more global teardown fixtures have been supplied.\n\t   * @public\n\t   * @returns {boolean}\n\t   */\n\n\n\t  Mocha.prototype.hasGlobalTeardownFixtures = function hasGlobalTeardownFixtures() {\n\t    return Boolean(this.options.globalTeardown.length);\n\t  };\n\t  /**\n\t   * An alternative way to define root hooks that works with parallel runs.\n\t   * @typedef {Object} MochaRootHookObject\n\t   * @property {Function|Function[]} [beforeAll] - \"Before all\" hook(s)\n\t   * @property {Function|Function[]} [beforeEach] - \"Before each\" hook(s)\n\t   * @property {Function|Function[]} [afterAll] - \"After all\" hook(s)\n\t   * @property {Function|Function[]} [afterEach] - \"After each\" hook(s)\n\t   */\n\n\t  /**\n\t   * An function that returns a {@link MochaRootHookObject}, either sync or async.\n\t     @callback MochaRootHookFunction\n\t   * @returns {MochaRootHookObject|Promise<MochaRootHookObject>}\n\t   */\n\n\t  /**\n\t   * A function that's invoked _once_ which is either sync or async.\n\t   * Can be a \"teardown\" or \"setup\".  These will all share the same context.\n\t   * @callback MochaGlobalFixture\n\t   * @returns {void|Promise<void>}\n\t   */\n\n\t  /**\n\t   * An object making up all necessary parts of a plugin loader and aggregator\n\t   * @typedef {Object} PluginDefinition\n\t   * @property {string} exportName - Named export to use\n\t   * @property {string} [optionName] - Option name for Mocha constructor (use `exportName` if omitted)\n\t   * @property {PluginValidator} [validate] - Validator function\n\t   * @property {PluginFinalizer} [finalize] - Finalizer/aggregator function\n\t   */\n\n\t  /**\n\t   * A (sync) function to assert a user-supplied plugin implementation is valid.\n\t   *\n\t   * Defined in a {@link PluginDefinition}.\n\t  \n\t   * @callback PluginValidator\n\t   * @param {*} value - Value to check\n\t   * @this {PluginDefinition}\n\t   * @returns {void}\n\t   */\n\n\t  /**\n\t   * A function to finalize plugins impls of a particular ilk\n\t   * @callback PluginFinalizer\n\t   * @param {Array<*>} impls - User-supplied implementations\n\t   * @returns {Promise<*>|*}\n\t   */\n\n\t});\n\n\t/* eslint no-unused-vars: off */\n\n\t/* eslint-env commonjs */\n\n\t/**\n\t * Shim process.stdout.\n\t */\n\n\n\tprocess$1.stdout = browserStdout({\n\t  label: false\n\t});\n\t/**\n\t * Create a Mocha instance.\n\t *\n\t * @return {undefined}\n\t */\n\n\tvar mocha$1 = new mocha({\n\t  reporter: 'html'\n\t});\n\t/**\n\t * Save timer references to avoid Sinon interfering (see GH-237).\n\t */\n\n\tvar Date$4 = commonjsGlobal.Date;\n\tvar setTimeout$3 = commonjsGlobal.setTimeout;\n\tvar uncaughtExceptionHandlers = [];\n\tvar originalOnerrorHandler = commonjsGlobal.onerror;\n\t/**\n\t * Remove uncaughtException listener.\n\t * Revert to original onerror handler if previously defined.\n\t */\n\n\tprocess$1.removeListener = function (e, fn) {\n\t  if (e === 'uncaughtException') {\n\t    if (originalOnerrorHandler) {\n\t      commonjsGlobal.onerror = originalOnerrorHandler;\n\t    } else {\n\t      commonjsGlobal.onerror = function () {};\n\t    }\n\n\t    var i = uncaughtExceptionHandlers.indexOf(fn);\n\n\t    if (i !== -1) {\n\t      uncaughtExceptionHandlers.splice(i, 1);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Implements listenerCount for 'uncaughtException'.\n\t */\n\n\n\tprocess$1.listenerCount = function (name) {\n\t  if (name === 'uncaughtException') {\n\t    return uncaughtExceptionHandlers.length;\n\t  }\n\n\t  return 0;\n\t};\n\t/**\n\t * Implements uncaughtException listener.\n\t */\n\n\n\tprocess$1.on = function (e, fn) {\n\t  if (e === 'uncaughtException') {\n\t    commonjsGlobal.onerror = function (err, url, line) {\n\t      fn(new Error(err + ' (' + url + ':' + line + ')'));\n\t      return !mocha$1.options.allowUncaught;\n\t    };\n\n\t    uncaughtExceptionHandlers.push(fn);\n\t  }\n\t};\n\n\tprocess$1.listeners = function (e) {\n\t  if (e === 'uncaughtException') {\n\t    return uncaughtExceptionHandlers;\n\t  }\n\n\t  return [];\n\t}; // The BDD UI is registered by default, but no UI will be functional in the\n\t// browser without an explicit call to the overridden `mocha.ui` (see below).\n\t// Ensure that this default UI does not expose its methods to the global scope.\n\n\n\tmocha$1.suite.removeAllListeners('pre-require');\n\tvar immediateQueue = [];\n\tvar immediateTimeout;\n\n\tfunction timeslice() {\n\t  var immediateStart = new Date$4().getTime();\n\n\t  while (immediateQueue.length && new Date$4().getTime() - immediateStart < 100) {\n\t    immediateQueue.shift()();\n\t  }\n\n\t  if (immediateQueue.length) {\n\t    immediateTimeout = setTimeout$3(timeslice, 0);\n\t  } else {\n\t    immediateTimeout = null;\n\t  }\n\t}\n\t/**\n\t * High-performance override of Runner.immediately.\n\t */\n\n\n\tmocha.Runner.immediately = function (callback) {\n\t  immediateQueue.push(callback);\n\n\t  if (!immediateTimeout) {\n\t    immediateTimeout = setTimeout$3(timeslice, 0);\n\t  }\n\t};\n\t/**\n\t * Function to allow assertion libraries to throw errors directly into mocha.\n\t * This is useful when running tests in a browser because window.onerror will\n\t * only receive the 'message' attribute of the Error.\n\t */\n\n\n\tmocha$1.throwError = function (err) {\n\t  uncaughtExceptionHandlers.forEach(function (fn) {\n\t    fn(err);\n\t  });\n\t  throw err;\n\t};\n\t/**\n\t * Override ui to ensure that the ui functions are initialized.\n\t * Normally this would happen in Mocha.prototype.loadFiles.\n\t */\n\n\n\tmocha$1.ui = function (ui) {\n\t  mocha.prototype.ui.call(this, ui);\n\t  this.suite.emit('pre-require', commonjsGlobal, null, this);\n\t  return this;\n\t};\n\t/**\n\t * Setup mocha with the given setting options.\n\t */\n\n\n\tmocha$1.setup = function (opts) {\n\t  if (typeof opts === 'string') {\n\t    opts = {\n\t      ui: opts\n\t    };\n\t  }\n\n\t  if (opts.delay === true) {\n\t    this.delay();\n\t  }\n\n\t  var self = this;\n\t  Object.keys(opts).filter(function (opt) {\n\t    return opt !== 'delay';\n\t  }).forEach(function (opt) {\n\t    if (Object.prototype.hasOwnProperty.call(opts, opt)) {\n\t      self[opt](opts[opt]);\n\t    }\n\t  });\n\t  return this;\n\t};\n\t/**\n\t * Run mocha, returning the Runner.\n\t */\n\n\n\tmocha$1.run = function (fn) {\n\t  var options = mocha$1.options;\n\t  mocha$1.globals('location');\n\t  var query = parseQuery(commonjsGlobal.location.search || '');\n\n\t  if (query.grep) {\n\t    mocha$1.grep(query.grep);\n\t  }\n\n\t  if (query.fgrep) {\n\t    mocha$1.fgrep(query.fgrep);\n\t  }\n\n\t  if (query.invert) {\n\t    mocha$1.invert();\n\t  }\n\n\t  return mocha.prototype.run.call(mocha$1, function (err) {\n\t    // The DOM Document is not available in Web Workers.\n\t    var document = commonjsGlobal.document;\n\n\t    if (document && document.getElementById('mocha') && options.noHighlighting !== true) {\n\t      highlightTags('code');\n\t    }\n\n\t    if (fn) {\n\t      fn(err);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Expose the process shim.\n\t * https://github.com/mochajs/mocha/pull/916\n\t */\n\n\n\tmocha.process = process$1;\n\t/**\n\t * Expose mocha.\n\t */\n\n\tcommonjsGlobal.Mocha = mocha;\n\tcommonjsGlobal.mocha = mocha$1; // this allows test/acceptance/required-tokens.js to pass; thus,\n\t// you can now do `const describe = require('mocha').describe` in a\n\t// browser context (assuming browserification).  should fix #880\n\n\tvar browserEntry = Object.assign(mocha$1, commonjsGlobal);\n\n\treturn browserEntry;\n\n})));\n//# sourceMappingURL=mocha.js.map\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/mocha/mocha.js?");

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/***/ (function(module) {

"use strict";
eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/object-assign/index.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css ***!
  \********************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../css-loader/dist/cjs.js!./mocha.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\nif (true) {\n  if (!_css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = _css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default.locals;\n\n    module.hot.accept(\n      /*! !!../css-loader/dist/cjs.js!./mocha.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css\",\n      function(__WEBPACK_OUTDATED_DEPENDENCIES__) { /* harmony import */ _css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../css-loader/dist/cjs.js!./mocha.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/mocha/mocha.css\");\n(function () {\n        if (!isEqualLocals(oldLocals, _css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = _css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default.locals;\n\n              update(_css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default);\n      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }.bind(this)\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_css_loader_dist_cjs_js_mocha_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://wp-demo/./node_modules/mocha/mocha.css?./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://wp-demo/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/util/node_modules/inherits/inherits_browser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/util/node_modules/inherits/inherits_browser.js ***!
  \*********************************************************************/
/***/ (function(module) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/util/node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/***/ (function(module) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://wp-demo/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(__webpack_require__.g.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/client.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\n\n/**\n * @note This file exists merely as an easy reference for folks adding it to their configuration entries\n */\n\n(() => {\n  /* eslint-disable global-require */\n  const { run } = __webpack_require__(/*! ./lib/client/client */ \"./node_modules/webpack-plugin-serve/lib/client/client.js\");\n  let hash = '<unknown>';\n  let options;\n  try {\n    options = {\"compress\":null,\"headers\":null,\"historyFallback\":false,\"hmr\":true,\"host\":null,\"liveReload\":false,\"log\":{\"level\":\"info\",\"prefix\":{\"template\":\"{{level}}\"},\"name\":\"webpack-plugin-serve\"},\"open\":false,\"port\":8080,\"progress\":true,\"ramdisk\":false,\"secure\":false,\"static\":\"./dist\",\"status\":true,\"waitForBuild\":true,\"address\":\"[::]:8080\",\"compilerName\":null,\"wpsId\":\"6517cb5\"};\n  } catch (e) {\n    const { log } = __webpack_require__(/*! ./lib/client/log */ \"./node_modules/webpack-plugin-serve/lib/client/log.js\");\n    log.error(\n      'The entry for webpack-plugin-serve was included in your build, but it does not appear that the plugin was. Please check your configuration.'\n    );\n  }\n\n  try {\n    // eslint-disable-next-line camelcase\n    hash = __webpack_require__.h();\n  } catch (e) {} // eslint-disable-line no-empty\n\n  run(hash, options);\n})();\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/client.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/ClientSocket.js":
/*!**********************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/ClientSocket.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { error, refresh, warn } = __webpack_require__(/*! ./log */ \"./node_modules/webpack-plugin-serve/lib/client/log.js\")();\n\n// ignore 1008 (HTTP 400 equivalent) and 1011 (HTTP 500 equivalent)\nconst ignoreCodes = [1008, 1011];\nconst maxAttempts = 10;\n\nclass ClientSocket {\n  constructor(options, ...args) {\n    this.args = args;\n    this.attempts = 0;\n    this.eventHandlers = [];\n    this.options = options;\n    this.retrying = false;\n\n    this.connect();\n  }\n\n  addEventListener(...args) {\n    this.eventHandlers.push(args);\n    this.socket.addEventListener(...args);\n  }\n\n  close() {\n    this.socket.close();\n  }\n\n  connect() {\n    if (this.socket) {\n      delete this.socket;\n    }\n\n    this.connecting = true;\n\n    this.socket = new WebSocket(...this.args);\n\n    if (this.options.retry) {\n      this.socket.addEventListener('close', (event) => {\n        if (ignoreCodes.includes(event.code)) {\n          return;\n        }\n\n        if (!this.retrying) {\n          warn(`The WebSocket was closed and will attempt to reconnect`);\n        }\n\n        this.reconnect();\n      });\n    } else {\n      this.socket.onclose = () => warn(`The client WebSocket was closed. ${refresh}`);\n    }\n\n    this.socket.addEventListener('open', () => {\n      this.attempts = 0;\n      this.retrying = false;\n    });\n\n    if (this.eventHandlers.length) {\n      for (const [name, fn] of this.eventHandlers) {\n        this.socket.addEventListener(name, fn);\n      }\n    }\n  }\n\n  reconnect() {\n    this.attempts += 1;\n    this.retrying = true;\n\n    if (this.attempts > maxAttempts) {\n      error(`The WebSocket could not be reconnected. ${refresh}`);\n      this.retrying = false;\n      return;\n    }\n\n    const timeout = 1000 * this.attempts ** 2;\n\n    setTimeout(() => this.connect(this.args), timeout);\n  }\n\n  removeEventListener(...args) {\n    const [, handler] = args;\n    this.eventHandlers = this.eventHandlers.filter(([, fn]) => fn === handler);\n    this.socket.removeEventListener(...args);\n  }\n}\n\nmodule.exports = { ClientSocket };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/ClientSocket.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/client.js":
/*!****************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/client.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\n/* eslint-disable global-require */\nconst run = (buildHash, options) => {\n  const { address, client = {}, hmr, progress, secure, status } = options;\n\n  options.firstInstance = !window.webpackPluginServe; // eslint-disable-line no-param-reassign\n\n  window.webpackPluginServe = window.webpackPluginServe || {\n    compilers: {}\n  };\n  window.webpackPluginServe.silent = !!client.silent;\n\n  const { ClientSocket } = __webpack_require__(/*! ./ClientSocket */ \"./node_modules/webpack-plugin-serve/lib/client/ClientSocket.js\");\n  const { replace } = __webpack_require__(/*! ./hmr */ \"./node_modules/webpack-plugin-serve/lib/client/hmr.js\");\n  const { error, info, warn } = __webpack_require__(/*! ./log */ \"./node_modules/webpack-plugin-serve/lib/client/log.js\")();\n\n  const protocol = secure ? 'wss' : 'ws';\n  const socket = new ClientSocket(client, `${protocol}://${client.address || address}/wps`);\n\n  const { compilerName } = options;\n\n  window.webpackPluginServe.compilers[compilerName] = {};\n\n  // prevents ECONNRESET errors on the server\n  window.addEventListener('beforeunload', () => socket.close());\n\n  socket.addEventListener('message', (message) => {\n    const { action, data = {} } = JSON.parse(message.data);\n    const { errors, hash = '<?>', warnings } = data || {};\n    const shortHash = hash.slice(0, 7);\n    const identifier = options.compilerName ? `(Compiler: ${options.compilerName}) ` : '';\n    const compiler = window.webpackPluginServe.compilers[compilerName];\n    const { wpsId } = data;\n\n    switch (action) {\n      case 'build':\n        compiler.done = false;\n        break;\n      case 'connected':\n        info(`WebSocket connected ${identifier}`);\n        break;\n      case 'done':\n        compiler.done = true;\n        break;\n      case 'problems':\n        if (data.errors.length) {\n          error(`${identifier}Build ${shortHash} produced errors:\\n`, errors);\n        }\n        if (data.warnings.length) {\n          warn(`${identifier}Build ${shortHash} produced warnings:\\n`, warnings);\n        }\n        break;\n      case 'reload':\n        window.location.reload();\n        break;\n      case 'replace':\n        // actions with a wpsId in tow indicate actions that should only be executed when the wpsId sent\n        // matches the wpsId set in options. this is how we can identify multiple compilers in the\n        // client.\n        if (wpsId && wpsId === options.wpsId) {\n          replace(buildHash, hash, hmr === 'refresh-on-failure');\n        }\n        break;\n      default:\n    }\n  });\n\n  if (options.firstInstance) {\n    if (progress === 'minimal') {\n      const { init } = __webpack_require__(/*! ./overlays/progress-minimal */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/progress-minimal.js\");\n      init(options, socket);\n    } else if (progress) {\n      const { init } = __webpack_require__(/*! ./overlays/progress */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/progress.js\");\n      init(options, socket);\n    }\n\n    if (status) {\n      const { init } = __webpack_require__(/*! ./overlays/status */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/status.js\");\n      init(options, socket);\n    }\n\n    if (true) {\n      info('Hot Module Replacement is active');\n\n      if (options.liveReload) {\n        info('Live Reload taking precedence over Hot Module Replacement');\n      }\n    } else {}\n\n    if (false) {}\n  }\n};\n\nmodule.exports = { run };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/client.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/hmr.js":
/*!*************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/hmr.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { error, info, refresh, warn } = __webpack_require__(/*! ./log */ \"./node_modules/webpack-plugin-serve/lib/client/log.js\")();\n\nlet latest = true;\n\nconst hmr = (onFailure) => {\n  return {\n    onUnaccepted(data) {\n      onFailure();\n      warn('Change in unaccepted module(s):\\n', data);\n      warn(data);\n    },\n    onDeclined(data) {\n      onFailure();\n      warn('Change in declined module(s):\\n', data);\n    },\n    onErrored(data) {\n      onFailure();\n      error('Error in module(s):\\n', data);\n    }\n  };\n};\n\nconst replace = async (buildHash, hash, refreshOnFailure) => {\n  const { apply, check, status } = module.hot;\n\n  if (hash) {\n    // eslint-disable-next-line no-undef\n    latest = hash.includes(buildHash);\n  }\n\n  if (!latest) {\n    const hmrStatus = status();\n\n    if (hmrStatus === 'abort' || hmrStatus === 'fail') {\n      warn(`An HMR update was triggered, but ${hmrStatus}ed. ${refresh}`);\n      return;\n    }\n\n    let modules;\n\n    try {\n      modules = await check(false);\n    } catch (e) {\n      // noop. this typically happens when a MultiCompiler has more than one compiler that includes\n      // this script, and an update happens with a hash that isn't part of the compiler/module this\n      // instance was loaded for.\n      return;\n    }\n\n    if (!modules) {\n      warn(`No modules found for replacement. ${refresh}`);\n      return;\n    }\n\n    modules = await apply(\n      hmr(\n        refreshOnFailure\n          ? () => {\n              if (refreshOnFailure) {\n                // eslint-disable-next-line no-undef\n                location.reload();\n              }\n            }\n          : () => {}\n      )\n    );\n\n    if (modules) {\n      latest = true;\n      info(`Build ${hash.slice(0, 7)} replaced:\\n`, modules);\n    }\n  }\n};\n\nmodule.exports = { replace };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/hmr.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/log.js":
/*!*************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/log.js ***!
  \*************************************************************/
/***/ (function(module) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { error, info, warn } = console;\nconst log = {\n  error: error.bind(console, '⬡ wps:'),\n  info: info.bind(console, '⬡ wps:'),\n  refresh: 'Please refresh the page',\n  warn: warn.bind(console, '⬡ wps:')\n};\nconst noop = () => {};\nconst silent = {\n  error: noop,\n  info: noop,\n  warn: noop\n};\n\nmodule.exports = () => (window.webpackPluginServe.silent ? silent : log);\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/log.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/overlays/progress-minimal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/overlays/progress-minimal.js ***!
  \***********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell, Matheus Gonçalves da Silva\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml } = __webpack_require__(/*! ./util */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/util.js\");\n\nconst ns = 'wps-progress-minimal';\nconst html = `\n<div id=\"${ns}\" class=\"${ns}-hidden\">\n  <div id=\"${ns}-bar\"></div>\n</div>\n`;\nconst css = `\n#${ns} {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 4px;\n  width: 100vw;\n  z-index: 2147483645;\n}\n\n#${ns}-bar {\n  width: 0%;\n  height: 4px;\n  background-color: rgb(186, 223, 172);\n}\n\n@keyframes ${ns}-fade {\n\t0% {\n\t\topacity: 1;\n\t}\n\t100% {\n\t\topacity: 0;\n\t}\n}\n\n.${ns}-disappear {\n  animation: ${ns}-fade .3s;\n  animation-fill-mode: forwards;\n  animation-delay: .5s;\n}\n\n.${ns}-hidden {\n  display: none;\n}\n`;\n\nlet hideOnPageVisible = false;\n\nconst update = (percent) => {\n  const bar = document.querySelector(`#${ns}-bar`);\n  bar.style.width = `${percent}%`;\n};\n\nconst reset = (wrapper) => {\n  wrapper.classList.add(`${ns}-disappear`);\n};\n\nconst init = (options, socket) => {\n  if (options.firstInstance) {\n    document.addEventListener('DOMContentLoaded', () => {\n      addCss(css);\n      addHtml(html);\n\n      const wrapper = document.querySelector(`#${ns}`);\n      wrapper.addEventListener('animationend', () => {\n        update(0);\n        wrapper.classList.add(`${ns}-hidden`);\n      });\n    });\n\n    document.addEventListener('visibilitychange', () => {\n      if (!document.hidden && hideOnPageVisible) {\n        const wrapper = document.querySelector(`#${ns}`);\n        reset(wrapper);\n        hideOnPageVisible = false;\n      }\n    });\n  }\n\n  socket.addEventListener('message', (message) => {\n    const { action, data } = JSON.parse(message.data);\n\n    if (action !== 'progress') {\n      return;\n    }\n\n    const percent = Math.floor(data.percent * 100);\n    const wrapper = document.querySelector(`#${ns}`);\n\n    wrapper.classList.remove(`${ns}-hidden`, `${ns}-disappear`);\n\n    if (data.percent === 1) {\n      if (document.hidden) {\n        hideOnPageVisible = true;\n      } else {\n        reset(wrapper);\n      }\n    } else {\n      hideOnPageVisible = false;\n    }\n\n    update(percent);\n  });\n};\n\nmodule.exports = {\n  init\n};\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/overlays/progress-minimal.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/overlays/progress.js":
/*!***************************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/overlays/progress.js ***!
  \***************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell, Matheus Gonçalves da Silva\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml } = __webpack_require__(/*! ./util */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/util.js\");\n\nconst ns = 'wps-progress';\nconst css = `\n#${ns}{\n  width: 200px;\n  height: 200px;\n  position: fixed;\n  right: 5%;\n  top: 5%;\n  transition: opacity .25s ease-in-out;\n  z-index: 2147483645;\n}\n\n#${ns}-bg {\n  fill: #282d35;\n}\n\n#${ns}-fill {\n  fill: rgba(0, 0, 0, 0);\n  stroke: rgb(186, 223, 172);\n  stroke-dasharray: 219.99078369140625;\n  stroke-dashoffset: -219.99078369140625;\n  stroke-width: 10;\n  transform: rotate(90deg)translate(0px, -80px);\n}\n\n#${ns}-percent {\n  font-family: 'Open Sans';\n  font-size: 18px;\n  fill: #ffffff;\n}\n\n#${ns}-percent-value {\n  dominant-baseline: middle;\n  text-anchor: middle;\n}\n\n#${ns}-percent-super {\n  fill: #bdc3c7;\n  font-size: .45em;\n  baseline-shift: 10%;\n}\n\n.${ns}-noselect {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  cursor: default;\n}\n\n@keyframes ${ns}-fade {\n\t0% {\n\t\topacity: 1;\n\t\ttransform: scale(1);\n\t\t-webkit-transform: scale(1);\n\t}\n\t100% {\n\t\topacity: 0;\n\t\ttransform: scale(0);\n\t\t-webkit-transform: scale(0);\n\t}\n}\n\n.${ns}-disappear {\n  animation: ${ns}-fade .3s;\n  animation-fill-mode:forwards;\n  animation-delay: .5s;\n}\n\n.${ns}-hidden {\n  display: none;\n}\n\n/* Put google web font at the end, or you'll see FOUC in Firefox */\n@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n`;\n\nconst html = `\n<svg id=\"${ns}\" class=\"${ns}-noselect ${ns}-hidden\" x=\"0px\" y=\"0px\" viewBox=\"0 0 80 80\">\n  <circle id=\"${ns}-bg\" cx=\"50%\" cy=\"50%\" r=\"35\"></circle>\n  <path id=\"${ns}-fill\" d=\"M5,40a35,35 0 1,0 70,0a35,35 0 1,0 -70,0\" />\n  <text id=\"${ns}-percent\" x=\"50%\" y=\"51%\"><tspan id=\"${ns}-percent-value\">0</tspan><tspan id=\"${ns}-percent-super\">%</tspan></text>\n</svg>\n`;\n\nlet hideOnPageVisible = false;\n\nconst update = (percent) => {\n  const max = -219.99078369140625;\n  const value = document.querySelector(`#${ns}-percent-value`);\n  const track = document.querySelector(`#${ns}-fill`);\n  const offset = ((100 - percent) / 100) * max;\n\n  track.setAttribute('style', `stroke-dashoffset: ${offset}`);\n  value.innerHTML = percent.toString();\n};\n\nconst reset = (svg) => {\n  svg.classList.add(`${ns}-disappear`);\n};\n\nconst init = (options, socket) => {\n  if (options.firstInstance) {\n    document.addEventListener('DOMContentLoaded', () => {\n      addCss(css);\n      addHtml(html);\n\n      // Reset progress to zero after disappear animation\n      const svg = document.querySelector(`#${ns}`);\n      svg.addEventListener('animationend', () => {\n        update(0);\n        svg.classList.add(`${ns}-hidden`);\n      });\n    });\n\n    document.addEventListener('visibilitychange', () => {\n      if (!document.hidden && hideOnPageVisible) {\n        const svg = document.querySelector(`#${ns}`);\n        reset(svg);\n        hideOnPageVisible = false;\n      }\n    });\n  }\n\n  socket.addEventListener('message', (message) => {\n    const { action, data } = JSON.parse(message.data);\n\n    if (action !== 'progress') {\n      return;\n    }\n\n    const percent = Math.floor(data.percent * 100);\n    const svg = document.querySelector(`#${ns}`);\n\n    if (!svg) {\n      return;\n    }\n\n    // we can safely call this even if it doesn't have the class\n    svg.classList.remove(`${ns}-disappear`, `${ns}-hidden`);\n\n    if (data.percent === 1) {\n      if (document.hidden) {\n        hideOnPageVisible = true;\n      } else {\n        reset(svg);\n      }\n    } else {\n      hideOnPageVisible = false;\n    }\n\n    update(percent);\n  });\n};\n\nmodule.exports = { init };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/overlays/progress.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/overlays/status.js":
/*!*************************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/overlays/status.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst { addCss, addHtml, socketMessage } = __webpack_require__(/*! ./util */ \"./node_modules/webpack-plugin-serve/lib/client/overlays/util.js\");\n\nconst ns = 'wps-status';\nconst css = `\n#${ns} {\n  background: #282d35;\n  border-radius: 0.6em;\n  display: flex;\n  flex-direction: column;\n\tfont-family: 'Open Sans', Helvetica, Arial, sans-serif;\n\tfont-size: 10px;\n  height: 90%;\n  min-height: 20em;\n  left: 50%;\n  opacity: 1;\n  overflow: hidden;\n  padding-bottom: 3em;\n  position: absolute;\n  top: 2rem;\n  transform: translateX(-50%);\n  transition: opacity .25s ease-in-out;\n  width: 95%;\n  z-index: 2147483645;\n}\n\n@keyframes ${ns}-hidden-display {\n\t0% {\n\t\topacity: 1;\n\t}\n\t99% {\n\t\tdisplay: inline-flex;\n\t\topacity: 0;\n\t}\n\t100% {\n\t\tdisplay: none;\n\t\topacity: 0;\n\t}\n}\n\n#${ns}.${ns}-hidden {\n  animation: ${ns}-hidden-display .3s;\n  animation-fill-mode:forwards;\n  display: none;\n}\n\n#${ns}.${ns}-min {\n  animation: minimize 10s;\n  bottom: 2em;\n  cursor: pointer;\n  height: 6em;\n  left: auto;\n  min-height: 6em;\n  padding-bottom: 0;\n  position: absolute;\n  right: 2em;\n  top: auto;\n  transform: none;\n  width: 6em;\n}\n\n#${ns}.${ns}-min #${ns}-beacon {\n  display: block;\n}\n\n#${ns}-title {\n  color: #fff;\n  font-size: 1.2em;\n  font-weight: normal;\n  margin: 0;\n  padding: 0.6em 0;\n  text-align: center;\n  width: 100%;\n}\n\n#${ns}.${ns}-min #${ns}-title {\n  display: none;\n}\n\n#${ns}-title-errors {\n  color: #ff5f58;\n  font-style: normal;\n  padding-left: 1em;\n}\n\n#${ns}-title-warnings {\n  color: #ffbd2e;\n  font-style: normal;\n  padding-left: 1em;\n}\n\n#${ns}-problems {\n  overflow-y: auto;\n  padding: 1em 2em;\n}\n\n#${ns}-problems pre {\n  color: #ddd;\n  background: #282d35;\n  display: block;\n  font-size: 1.3em;\n\tfont-family: 'Open Sans', Helvetica, Arial, sans-serif;\n  white-space: pre-wrap;\n}\n\n#${ns}-problems pre em {\n  background: #ff5f58;\n  border-radius: 0.3em;\n  color: #641e16;\n  font-style: normal;\n  line-height: 3em;\n  margin-right: 0.4em;\n  padding: 0.1em 0.4em;\n  text-transform: uppercase;\n}\n\npre#${ns}-warnings em {\n  background: #ffbd2e;\n  color: #3e2723;\n}\n\npre#${ns}-success {\n  display: none;\n  text-align: center;\n}\n\npre#${ns}-success em {\n  background: #7fb900;\n  color: #004d40;\n}\n\n#${ns}-problems.${ns}-success #${ns}-success {\n  display: block;\n}\n\n#${ns}.${ns}-min #${ns}-problems {\n  display: none;\n}\n\n#${ns}-nav {\n  opacity: 0.5;\n  padding: 1.2em;\n  position: absolute;\n}\n\n#${ns}.${ns}-min #${ns}-nav {\n  display: none;\n}\n\n#${ns}-nav:hover {\n  opacity: 1;\n}\n\n#${ns}-nav div {\n  background: #ff5f58;\n  border-radius: 1.2em;\n  cursor: pointer;\n  display: inline-block;\n  height: 1.2em;\n  position: relative;\n  width: 1.2em;\n}\n\ndiv#${ns}-min {\n  background: #ffbd2e;\n  margin-left: 0.8em;\n}\n\n#${ns}-beacon {\n  border-radius: 3em;\n  display: none;\n  font-size: 10px;\n  height: 3em;\n  margin: 1.6em auto;\n  position: relative;\n  width: 3em;\n}\n\n#${ns}-beacon:before, #${ns}-beacon:after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(127,185,0, 0.2);\n  border-radius: 3em;\n  opacity: 0;\n}\n\n#${ns}-beacon:before {\n  animation: ${ns}-pulse 3s infinite linear;\n  transform: scale(1);\n}\n\n#${ns}-beacon:after {\n  animation: ${ns}-pulse 3s 2s infinite linear;\n}\n\n\n@keyframes ${ns}-pulse {\n  0% {\n    opacity: 0;\n    transform: scale(0.6);\n  }\n  33% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(1.4);\n  }\n}\n\n#${ns}-beacon mark {\n  background: rgba(127, 185, 0, 1);\n  border-radius: 100% 100%;\n  height: 1em;\n  left: 1em;\n  position: absolute;\n  top: 1em;\n  width: 1em;\n}\n\n#${ns}-beacon.${ns}-error mark {\n  background: #ff5f58;\n}\n\n#${ns}-beacon.${ns}-error:before, #${ns}-beacon.error:after {\n  background: rgba(255, 95, 88, 0.2);\n}\n\n#${ns}-beacon.${ns}-warning mark {\n  background: #ffbd2e;\n}\n\n#${ns}-beacon.${ns}-warning:before, #${ns}-beacon.warning:after {\n  background: rgba(255, 189, 46, 0.2);\n}\n\n/* Put google web font at the end, or you'll see FOUC in Firefox */\n@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');\n`;\n\nconst html = `\n<aside id=\"${ns}\" class=\"${ns}-hidden\" title=\"build status\">\n  <figure id=\"${ns}-beacon\">\n    <mark/>\n  </figure>\n  <nav id=\"${ns}-nav\">\n    <div id=\"${ns}-close\" title=\"close\"></div>\n    <div id=\"${ns}-min\" title=\"minmize\"></div>\n  </nav>\n  <h1 id=\"${ns}-title\">\n    build status\n    <em id=\"${ns}-title-errors\"></em>\n    <em id=\"${ns}-title-warnings\"></em>\n  </h1>\n  <article id=\"${ns}-problems\">\n    <pre id=\"${ns}-success\"><em>Build Successful</em></pre>\n    <pre id=\"${ns}-errors\"></pre>\n    <pre id=\"${ns}-warnings\"></pre>\n  </article>\n</aside>\n`;\n\nconst init = (options, socket) => {\n  const hidden = `${ns}-hidden`;\n  let hasProblems = false;\n  let aside;\n  let beacon;\n  let problems;\n  let preErrors;\n  let preWarnings;\n  let titleErrors;\n  let titleWarnings;\n\n  const reset = () => {\n    preErrors.innerHTML = '';\n    preWarnings.innerHTML = '';\n    problems.classList.remove(`${ns}-success`);\n    beacon.className = '';\n    titleErrors.innerText = '';\n    titleWarnings.innerText = '';\n  };\n\n  const addErrors = (errors) => {\n    if (errors.length) {\n      problems.classList.remove(`${ns}-success`);\n      beacon.classList.add(`${ns}-error`);\n\n      for (const error of errors) {\n        const markup = `<div><em>Error</em> in ${error}</div>`;\n        addHtml(markup, preErrors);\n      }\n\n      titleErrors.innerText = `${errors.length} Error(s)`;\n    } else {\n      titleErrors.innerText = '';\n    }\n    aside.classList.remove(hidden);\n  };\n\n  const addWarnings = (warnings) => {\n    if (warnings.length) {\n      problems.classList.remove(`${ns}-success`);\n\n      if (!beacon.classList.contains(`${ns}-error`)) {\n        beacon.classList.add(`${ns}-warning`);\n      }\n\n      for (const warning of warnings) {\n        const markup = `<div><em>Warning</em> in ${warning}</div>`;\n        addHtml(markup, preWarnings);\n      }\n\n      titleWarnings.innerText = `${warnings.length} Warning(s)`;\n    } else {\n      titleWarnings.innerText = '';\n    }\n\n    aside.classList.remove(hidden);\n  };\n\n  if (options.firstInstance) {\n    document.addEventListener('DOMContentLoaded', () => {\n      addCss(css);\n      [aside] = addHtml(html);\n      beacon = document.querySelector(`#${ns}-beacon`);\n      problems = document.querySelector(`#${ns}-problems`);\n      preErrors = document.querySelector(`#${ns}-errors`);\n      preWarnings = document.querySelector(`#${ns}-warnings`);\n      titleErrors = document.querySelector(`#${ns}-title-errors`);\n      titleWarnings = document.querySelector(`#${ns}-title-warnings`);\n\n      const close = document.querySelector(`#${ns}-close`);\n      const min = document.querySelector(`#${ns}-min`);\n\n      aside.addEventListener('click', () => {\n        aside.classList.remove(`${ns}-min`);\n      });\n\n      close.addEventListener('click', () => {\n        aside.classList.add(`${ns}-hidden`);\n      });\n\n      min.addEventListener('click', (e) => {\n        aside.classList.add(`${ns}-min`);\n        e.stopImmediatePropagation();\n      });\n    });\n  }\n\n  socketMessage(socket, (action, data) => {\n    if (!aside) {\n      return;\n    }\n\n    const { compilers } = window.webpackPluginServe;\n\n    switch (action) {\n      case 'build':\n        // clear errors and warnings when a new build begins\n        reset();\n        break;\n      case 'problems':\n        addErrors(data.errors);\n        addWarnings(data.warnings);\n        aside.classList.remove(hidden);\n        hasProblems = data.errors.length || data.warnings.length;\n        break;\n      case 'replace':\n        // if there's a compiler that isn't done yet, hold off and let it run the show\n        for (const compilerName of Object.keys(compilers)) {\n          if (!compilers[compilerName]) {\n            return;\n          }\n        }\n\n        if (hasProblems && !preErrors.children.length && !preWarnings.children.length) {\n          reset();\n          hasProblems = false;\n          problems.classList.add(`${ns}-success`);\n          aside.classList.remove(hidden);\n\n          setTimeout(() => aside.classList.add(hidden), 3e3);\n        }\n        break;\n      default:\n    }\n  });\n};\n\nmodule.exports = { init };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/overlays/status.js?");

/***/ }),

/***/ "./node_modules/webpack-plugin-serve/lib/client/overlays/util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/webpack-plugin-serve/lib/client/overlays/util.js ***!
  \***********************************************************************/
/***/ (function(module) {

eval("/*\n  Copyright © 2018 Andrew Powell\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of this Source Code Form.\n*/\nconst addHtml = (html, parent) => {\n  const div = document.createElement('div');\n  const nodes = [];\n\n  div.innerHTML = html.trim();\n\n  while (div.firstChild) {\n    nodes.push((parent || document.body).appendChild(div.firstChild));\n  }\n\n  return nodes;\n};\n\nconst addCss = (css) => {\n  const style = document.createElement('style');\n\n  style.type = 'text/css';\n\n  if (css.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n\n  // append the stylesheet for the svg\n  document.head.appendChild(style);\n};\n\nconst socketMessage = (socket, handler) => {\n  socket.addEventListener('message', (message) => {\n    const { action, data = {} } = JSON.parse(message.data);\n    handler(action, data);\n  });\n};\n\nmodule.exports = { addCss, addHtml, socketMessage };\n\n\n//# sourceURL=webpack://wp-demo/./node_modules/webpack-plugin-serve/lib/client/overlays/util.js?");

/***/ }),

/***/ "./tests/add.js":
/*!**********************!*\
  !*** ./tests/add.js ***!
  \**********************/
/***/ (function(module) {

eval("module.exports = (a, b) => a + b;\n\n//# sourceURL=webpack://wp-demo/./tests/add.js?");

/***/ }),

/***/ "./tests/add.test.js":
/*!***************************!*\
  !*** ./tests/add.test.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("const assert = __webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\");\nconst add = __webpack_require__(/*! ./add */ \"./tests/add.js\");\n\ndescribe(\"Demo\", () => {\n  it(\"should add correctly\", () => {\n    assert.equal(add(1, 1), 2);\n  });\n});\n\n\n//# sourceURL=webpack://wp-demo/./tests/add.test.js?");

/***/ }),

/***/ "./tests/index.js":
/*!************************!*\
  !*** ./tests/index.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("// Skip execution in Node\nif (true) {\n  const context = __webpack_require__(\"./tests sync ./node_modules/mocha-loader/dist/cjs.js! \\\\.test.js$\");\n\n  // Execute each test suite\n  context.keys().forEach(context);\n}\n\n\n//# sourceURL=webpack://wp-demo/./tests/index.js?");

/***/ }),

/***/ "./tests sync ./node_modules/mocha-loader/dist/cjs.js! \\.test.js$":
/*!**************************************************************************************!*\
  !*** ./tests/ sync nonrecursive ./node_modules/mocha-loader/dist/cjs.js! \.test.js$ ***!
  \**************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var map = {\n\t\"./add.test.js\": \"./node_modules/mocha-loader/dist/cjs.js!./tests/add.test.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./tests sync ./node_modules/mocha-loader/dist/cjs.js! \\\\.test.js$\";\n\n//# sourceURL=webpack://wp-demo/_\\.test.js$?./tests/_sync_nonrecursive_./node_modules/mocha-loader/dist/cjs.js");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 		} catch(e) {
/******/ 			module.error = e;
/******/ 			throw e;
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	!function() {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = function(chunkId) {
/******/ 			// return url for filenames based on template
/******/ 			return "_-6517cb5-" + chunkId + "-wps-hmr.js";
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	!function() {
/******/ 		__webpack_require__.hmrF = function() { return "main-6517cb5-wps-hmr.json"; };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	!function() {
/******/ 		__webpack_require__.h = function() { return "4981bf9ffa587970d91c"; }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	!function() {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "wp-demo:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = function(url, done, key, chunkId) {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = function(prev, event) {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach(function(fn) { return fn(event); });
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	!function() {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises;
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: currentChildModule !== moduleId,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				registeredStatusHandlers[i].call(null, newStatus);
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 					blockingPromises.push(promise);
/******/ 					waitForBlockingPromises(function () {
/******/ 						setStatus("ready");
/******/ 					});
/******/ 					return promise;
/******/ 				case "prepare":
/******/ 					blockingPromises.push(promise);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises.length === 0) return fn();
/******/ 			var blocker = blockingPromises;
/******/ 			blockingPromises = [];
/******/ 			return Promise.all(blocker).then(function () {
/******/ 				return waitForBlockingPromises(fn);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			setStatus("check");
/******/ 			return __webpack_require__.hmrM().then(function (update) {
/******/ 				if (!update) {
/******/ 					setStatus(applyInvalidatedModules() ? "ready" : "idle");
/******/ 					return null;
/******/ 				}
/******/ 		
/******/ 				setStatus("prepare");
/******/ 		
/******/ 				var updatedModules = [];
/******/ 				blockingPromises = [];
/******/ 				currentUpdateApplyHandlers = [];
/******/ 		
/******/ 				return Promise.all(
/******/ 					Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 						promises,
/******/ 						key
/******/ 					) {
/******/ 						__webpack_require__.hmrC[key](
/******/ 							update.c,
/******/ 							update.r,
/******/ 							update.m,
/******/ 							promises,
/******/ 							currentUpdateApplyHandlers,
/******/ 							updatedModules
/******/ 						);
/******/ 						return promises;
/******/ 					},
/******/ 					[])
/******/ 				).then(function () {
/******/ 					return waitForBlockingPromises(function () {
/******/ 						if (applyOnUpdate) {
/******/ 							return internalApply(applyOnUpdate);
/******/ 						} else {
/******/ 							setStatus("ready");
/******/ 		
/******/ 							return updatedModules;
/******/ 						}
/******/ 					});
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error("apply() is only allowed in ready status");
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				setStatus("abort");
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			// handle errors in accept handlers and self accepted module load
/******/ 			if (error) {
/******/ 				setStatus("fail");
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw error;
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			if (queuedInvalidatedModules) {
/******/ 				return internalApply(options).then(function (list) {
/******/ 					outdatedModules.forEach(function (moduleId) {
/******/ 						if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 					});
/******/ 					return list;
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			setStatus("idle");
/******/ 			return Promise.resolve(outdatedModules);
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId) {
/******/ 			return new Promise(function(resolve, reject) {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = function(event) {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdatewp_demo"] = function(chunkId, moreModules, runtime) {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result;
/******/ 					if (newModuleFactory) {
/******/ 						result = getAffectedModuleEffects(moduleId);
/******/ 					} else {
/******/ 						result = {
/******/ 							type: "disposed",
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					module.hot._selfAccepted &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err2) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err2,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err2);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						!__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						__webpack_require__.o(installedChunks, chunkId) &&
/******/ 						installedChunks[chunkId] !== undefined
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = function() {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then(function(response) {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__("./tests/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./node_modules/webpack-plugin-serve/client.js");
/******/ 	
/******/ })()
;